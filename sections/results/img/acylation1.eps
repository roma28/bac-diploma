%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: acylation1.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-03-05 05:33:02 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 267 316
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 267 316
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: JONEPX+Helvetica
%!FontType1-1.0: JONEPX+Helvetica 1.0000.0.0000
14 dict begin/FontName /JONEPX+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /C put
dup 35 /O put
dup 36 /l put
dup 37 /N put
dup 38 /E put
dup 39 /t put
dup 40 /three put
dup 41 /D put
dup 42 /M put
dup 43 /A put
dup 44 /P put
dup 45 /F put
dup 46 /space put
dup 47 /h put
dup 48 /semicolon put
dup 49 /T put
dup 50 /S put
dup 51 /B put
dup 52 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<









00>] def
/CharStrings 22 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/three 3 def
/semicolon 4 def
/A 5 def
/B 6 def
/C 7 def
/D 8 def
/E 9 def
/F 10 def
/M 11 def
/N 12 def
/O 13 def
/P 14 def
/R 15 def
/S 16 def
/T 17 def
/h 18 def
/l 19 def
/t 20 def
/u20B8 21 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec

20419920FF2265A1FF03DDE731C2D01D47EA89A66EC411F46C253F893B95EB7D4E7AE001C5BAF26AFC4628355EBADE9B6F89B1375440B7D8F0C1E9CAF0EB8AF4698CCD0946B75E1914543B34F149599EB0E838EFD4AE263832513F1576656D5971D5A756552CC6F9EED3F5628A58F5191CD9142A3156D5F60520638CF876874EC252E4B07B4980C5DB93DFBBA64E98F9A0262786A878B8A4354C8731C930F7C2209FCBD1F227F5F955C11A4CD58FECF471F03AEC62D8FDCD7F425D3D1EE6EDE53B5C2C16A1C9FEE55DD8496F47CCDF6283915C85CFD54C10D0C6EB44226CEA6688CEA0C427E66DB3D145BCF4C371DA853D2585B57BEBEE54B9BA162C0D21A0C38F1E7CDF8A199B16B0D7530A838346DF59AB69A356F0C703B1823FE8479E06D51540F904B0692F5C7178377374F97100BC80D0C8D8680D9C71D9A4A68F9D6FBA0B06340BBAD651684818C28F511693BAA41DDAF6909606F2C4B4947BF04D20DEEE5122C42CCE66AE0AA808B773240F9EF2FB06928C308F70030AF73A4119444482D2C28BB5A1E5ADA760D81CB1A99DD19AC40B3DA2F40BB694BD3380D7D77CC899F3BEF689292D6694FE0D267AAAADACF9EAC079B4B2D462FF47A587F2FA62C2E99CCE8EF85454EC80960FE6C0E9231BB8C76B095E7EA1AEC220E0DD98D0B4088617569FCEA19D54FF4129FB30ED31AFB489344EB9A1BFBFE3AED5766283A7D3E2523437E28527BB8027D05AE4BFFB2FA09752F4F51E80EA8B6468DB1713DECAE92106F309998C43B288EC4111521AE65FAAEE84EBDEF12CA1C7F572C00F4C0741FCD7260EC4CC94940E6FCFDE162D296607F31419CB27322EB3DA0CD87EDF33ED734BA29C9DAB8815F5ABB9FD316E8243205090AF058DF6988EB164697E35A76A8796520013EC69116CC38692A8FC5BEF7F64D3559336381736D326369845A5D88B54C5634E3B9049279BCD21163E42DDF1CF075D9D743D6099D3CF55B1FED91824BAEB9C899BBD991CF45CB7B3EA0878D62105D10A86930390B2D4D18A55A368526CE11C462728F21DD38D9829782EC07186B0A27089E0FEC840EDD63D645C0F6332E2799964FDB5A2E359E2532C38F71E42BE0E25F4BDF4BDCAE4857F8F8C8C2C26D2D682E5E362278B70D8C241B05C0D3205AA91AC9A8CCBC24BC1B3EEC9E6EF2B580321533C950CD9DF4B432B01B9495AD268D3F2FC3411350F401F6FC48414042B1D65656EBF11997D19125A356CE28BF5ECE742DC7C898ECF91877EBCA2D4A94BFFD8DC342A0ADCF440B6EDC2A8987CFD39A25375D6A25829686B1188A75DECFF0EB5470089CC036FC20E48B904D26CDA4585B6C6A462D6F49EA6FB3325D6D6560733CC46685133F28AEEC0F57CB1757A9416388E101D7A00171E3FCAAF6A268C1D90F966DDBA81B38220C22671F271B006A2776AFF8FA3FF7FA853A3
0BB4BDB3E34C79E927D6A2B123D5444F134D6BDFFFB24234A45C66DDD08DEBEF511472E95141427C412025544A922BFF631134BD4DF1916DFECB312F4219F437FEC268D4081989FC4F560F4FB0A9304205BEB0AE4418FDBA940B2301B1DF1DA1BB29E2C8D9DFED67C6F8516311A87D098A0E0207F9B21BBD98CC2670FE31DFECD30BEFAB56BB8026084080529A808DF499058FC33CF1797A4075B1575DA1320D28788F565133448F8B9A508B5C3942AB65897F5A40175DCA6A14C5DE6CD7CBC9F86823E2173B7BEE72557CCDEEBFCDFF232E8DADD3CBB1A64B446430357515C5BDCE3B4D2A272B5A0A6529F5BF266A28174592072C55700C3EE8CDF333EE5F6AE55D3CAE21C550E8996287627AECDA99BA5DE434D4A7556352B55D60433AFF03DBB3D345F01C7A7E2E8E858BD01385C3327D8FED1D0E7E9C244E42FE5EC881F4C86CECC2EBACC42E94DF7F56E84CDB82A926F5A4F2C3B5D55FB9C3A27AC7DA4F8A3FA13C338F9CB09FD6980996F099720B8A6E8F5027C08609D31E1CC54D66A974043E4BAE092FDD2039E834BE308EAEBDD3EE133A424B644BDF41F89D4CE1D8376875341076472656E457FC66A34623C9B02032CA3D4FF0A6CD966DE0F67EADA5113A44C109BA855FD957CF016E9D1D6F77EA314C604A04026EDB417BF3A7F4AC4C8652D226C5272FC4C399543534DEB4B4C82ACC9AC6F25B95215012BBC5D0CAC72B67F9D215869A2D5BB2BAB03B5B694E0FA3D68EDDA13D68766DE289B3253807A496FCF0E3B173237E732FAD5126B1178C1E65A6B8BD59FADB263D3D7A7D6714E41F1599D7AAB613F85145AD5C1A03A1FF912F1DC0B413574BE951803B97BE8A9838C39098DA3C60AB336C12B35C817E85A2A054A839CFA2376F805A230749754237BB6508561FB26114B86BB128EB963DD77D4514363185662815D6AC8C8E48ED035A4E77CA41C77B20DAD18D739089EB8D8775A2C507E79A7EAC23ADFCD07119821FD14254036B3A15974ECF222A7ED4A5E4E7339D2B08EC58678906131A99C3A74FD8692163D3E0984D9CE5DE9DC064772A6872A5E43B489B09FB91D5DF986C7EDD125398C72518EE0E3EF6567E3EEFF4C01BC1CB1824070E485EDC6D59C94AE41CCE80B647904B482DA2EB28D1382E05C6C22F5A67D2A581BA6B41C3BA4B5A170FA8912C834FC68B6358ADDB87B59FE7F457DA2247AEF0C90452CD86636E8DFE649D043F68F44D5729179CBA8B3FFC1B176FCF0441F92FCDD25D69A46D74F9997A57A3890959CEB221CF42CE5EF34A3F07AB457A1C288E5477E2B05F0E7C3209C1FB2E9D85FFBE6FAB50A076228B484C7872B01F126A61E3E90A4EDB03A24E92E3923C0FB5BC04110D17364DD0F9D31A7B91D83F1CBFF88D37A55D01A6764FC3D3BB36E18750D91FD7E98C35BC0AA3CA913B33FC2E647D6F8A4B8207
A3FDFAF9027FD6D7B0040FDA539650DFA094FC49D28661A27A08C5128B42447B86A0E8D371B5AAE899565460F3D17F0F24ABB261EC83708E834E6F0C34BDE6763EA4D6B6F17AD345A32539244E02E50EC0B1443243FD4A6C0A171D02D796DC7736596DABDD9B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/JONEPX+Helvetica cguidfix
/F1.1/JONEPX+Helvetica renmfont
%RBIBeginFontSubset: NFUURD+Helvetica-Bold
%!FontType1-1.0: NFUURD+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /NFUURD+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /space put
dup 35 /equal put
dup 36 /parenleft put
dup 37 /a put
dup 38 /parenright put
dup 39 /b put
dup 40 /c put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/equal 4 def
/R 5 def
/a 6 def
/b 7 def
/c 8 def
/u20B8 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4037662 def
currentdict currentfile eexec

24B75DA768B63615F78371CE94A9C2BA9121FD4FA4B6BE3E2B1EEF38A0759107476BF34F2532D4BFF0826247243FC85F8D8B1FFF56A198EE7F97F81F29BA5A150A175E5CA4ED48BA8102C4DED5CDE0D6E8CA99AAEF91D7B655E67E84F83EF878F0B889FBD98CDD0622E238C7EF033E664C84AFC27088EBA172BC58204B5D5831581BA5EE337A2658A906F1DF160A678265512F4F43576818C519D60BB2471E0B6CA1FA0697295A6E1C634FB3A3AC9FF46258D7975DDC051D14784B30FE19FCDF71FEF062A93636BC1A8641672CB8FE0FE35EDF09B68E7842C20187E5BF864C9D0C719E09FE8F1551676158829A2D4D08416C9BA273FAB60329B19C97411CCFB145FC1EF6AA651A16E53E02380F01B90525D8D5FDB26C1D4FE7A96D718ECBE30204E472F5E8B192DADB67C39FAC263A8B2C29CAE4A88ED668B93199E4126C1D67351CDE1133BFAEDAA3712470362281B76738E774E9149B42A2062B2AEB095F022283EEB89876BCD9C9D81F1F9579F142FC99A9C0E04B453303D602E2702EE5676C8E7E3875FECBA63117BDB081DFC238FB37A6914C2BEA848843AD8CD449A0B22F21C0DB8885C5931E0A547718139EF2A8A8C24826418441CB400E794EE94ACDE23D2654CF4FC0B9F9151FBE8378739F1C3A61B0F3DDD76DCD96E22BE8CF6C46895966E5B533CD78920CBB3802AF58A0424EBF8D171B8CCF16B40196C9A5EF12F0D48CB788E9C57E47ACE0E02293BC8B75FE43BF0C06F21F0A39019E619ECEADB92B4663E39FC9D5B8E5992142C11465423DD9195E5C2DEFFB6A3BD0DCA8F1E11917982D69D89DFDCF4893D0D0DFE447954535870FD48660C5A72F93B7853D6B049D3B6D0275C9ED3EFE3F813845B29DB7490F5E1BB2885DA37F80B05AEC6E3F9C48E342D578B3F1DCD318F40B51D2A8C71CAE26473BE7C0227B6960CD5EDFF9134E0A5AF8F3AD9AF8B771C504878B9D43EFF9C201DD272DF84B75CFB9462E0E2452918E51705F6EB365A9ACD69EA4389396E0CF81D9E4244D18F58FD05B1E540601E400B543D8B9295CF16CCDE3F0F13A86682494C473DAEEEA0C0A698D0899AB31DEC05774EFC3F4D90B114FBF62D9614BF5AF0CC2A09A9E1D89BA9D62444FB6677D92DA93F63779CE679B5BBFF7C25255BB68A8290B97D7F4FEC3096990BFA325C23E412706CB8BC5C035C3A5AB1F8706592EF41800BE441894D12C29E64126DE66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/NFUURD+Helvetica-Bold cguidfix
/F2.1/NFUURD+Helvetica-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 316 m
267 316 l
267 0 l
0 0 l
h
0 316 m
W
0 0 267 316 rc
-1 316 m
268 316 l
268 -1 l
-1 -1 l
h
f
20 w
1 J
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
4981.3184 3191.4817 m
4040 3191.4817 l
S
CM
97.90918 178.4259 m
97.90918 178.4259 84.374023 175.03963 84.374023 175.03963 c
84.374023 175.03963 86.065918 176.94441 86.065918 178.4259 c
86.065918 180.34491 84.374023 182.81219 84.374023 182.81219 c
84.374023 182.81219 97.90918 178.4259 97.90918 178.4259 c
97.90918 178.4259 97.90918 178.4259 97.90918 178.4259 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 52.519531 190.43567 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!"#"$)[ 7.221680 7.221680 7.778320 7.221680 0.000000 ] xS
1 0 0 -1 57.816162 175.85364 cm
0 7.7001953 m
(%&')[ 7.221680 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
16.669922 10 m
(\()s
1 0 0 -1 53.835449 162.63855 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(\)*+,)[ 7.221680 8.330078 6.669922 0.000000 ] xS
1 0 0 -1 164.14595 187.60555 cm
0 7.1728516 m
(%)s
1 0 0 -1 163.39331 173.2753 cm
0 7.1728516 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6347.21 2986.7358 m
6500.8325 3045.7258 l
S
6363.7295 3048.4172 m
6482.314 3093.9526 l
S
6610.9272 3169.7434 m
6606.5674 3252.7593 l
S
6485.249 3406.9783 m
6322.854 3450.4724 l
S
6322.854 3450.4724 m
6166.5693 3209.7561 l
S
6166.5693 3209.7561 m
6347.21 2986.7358 l
S
6674.5591 3436.5461 m
6823.103 3556.8628 l
S
6823.103 3556.8628 m
6778.1743 3840.3245 l
S
6869.457 3594.4082 m
6833.8667 3818.9534 l
S
6778.1743 3840.3245 m
7001.1948 4020.9646 l
S
7001.1948 4020.9646 m
7269.144 3918.1433 l
S
7010.5332 3962.0483 m
7222.79 3880.5981 l
S
7269.144 3918.1433 m
7314.0728 3634.6821 l
S
7314.0728 3634.6821 m
7091.0522 3454.0417 l
S
7258.3804 3656.053 m
7081.7144 3512.9583 l
S
7091.0522 3454.0417 m
6823.103 3556.8628 l
S
6322.854 3450.4724 m
6219.9717 3718.3982 l
S
6347.21 2986.7358 m
6272.96 2709.5066 l
S
6219.9717 3718.3982 m
5936.5 3763.2627 l
S
6198.5879 3774.0857 m
5974.0347 3809.6252 l
S
5936.5 3763.2627 m
5833.6177 4031.1887 l
S
5833.6177 4031.1887 m
6014.208 4254.25 l
S
5892.5366 4021.8638 m
6035.5913 4198.5625 l
S
6014.208 4254.25 m
6297.6792 4209.3853 l
S
6297.6792 4209.3853 m
6400.561 3941.4597 l
S
6260.1445 4163.0229 m
6341.6426 3950.7847 l
S
6400.561 3941.4597 m
6219.9717 3718.3982 l
S
6272.96 2709.5066 m
6475.9229 2506.5901 l
S
6257.5278 2651.8857 m
6418.3052 2491.1443 l
S
6475.9229 2506.5901 m
6401.6733 2229.3608 l
S
6401.6733 2229.3608 m
6124.4609 2155.0483 l
S
6359.4883 2271.5361 m
6139.8936 2212.6694 l
S
6124.4609 2155.0483 m
5921.498 2357.9651 l
S
5921.498 2357.9651 m
5995.7476 2635.1943 l
S
5979.1157 2373.4106 m
6037.9326 2593.0188 l
S
5995.7476 2635.1943 m
6272.96 2709.5066 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 121.74133 165.07635 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5936.5 3763.2627 m
5801.2349 3596.1853 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 111.45312 138.28377 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5833.6177 4031.1887 m
5636.4214 4062.3987 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 128.95544 115.97762 cm
0 7.1728516 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6014.208 4254.25 m
5959.0327 4397.9365 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 157.85924 120.46409 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6297.6792 4209.3853 m
6405.6162 4342.7075 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 164.60405 146.69588 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6400.561 3941.4597 m
6538.6084 3919.6111 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 164.1776 240.76422 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6401.6733 2229.3608 m
6525.8462 2105.2161 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 171.60255 213.04131 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6475.9229 2506.5901 m
6673.2163 2559.4788 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 123.58506 200.18088 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5995.7476 2635.1943 m
5879.3105 2751.605 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 116.1601 227.90381 cm
0 7.1728516 m
(-)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5921.498 2357.9651 m
5713.8608 2302.3035 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 135.89972 248.19547 cm
0 7.1728516 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6124.4609 2155.0483 m
6073.4404 1964.5507 l
S
7269.144 3918.1433 m
7492.1646 4098.7837 l
S
6140.2412 1787.8096 m
6253.1738 1674.9025 l
S
6253.1738 1674.9025 m
6178.9243 1397.6735 l
S
6178.9243 1397.6735 m
5901.7119 1323.3608 l
S
5901.7119 1323.3608 m
5698.7495 1526.2775 l
S
5698.7495 1526.2775 m
5772.999 1803.5067 l
S
5772.999 1803.5067 m
5934.5142 1846.8041 l
S
5804.5869 4539.0693 m
5627.854 4567.0405 l
S
5627.854 4567.0405 m
5524.9722 4834.9668 l
S
5524.9722 4834.9668 m
5705.5615 5058.0278 l
S
5705.5615 5058.0278 m
5989.0332 5013.1631 l
S
5989.0332 5013.1631 m
6091.9155 4745.2373 l
S
6091.9155 4745.2373 m
5972.1201 4597.2681 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 124.48395 289.8775 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5901.7119 1323.3608 m
5857.9912 1160.1199 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 113.24483 75.886398 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5705.5615 5058.0278 m
5645.2485 5215.0957 l
S
7492.1646 4098.7837 m
7447.2358 4382.2451 l
S
7543.1875 4106.8706 m
7502.9277 4360.874 l
S
7447.2358 4382.2451 m
7670.2563 4562.8853 l
S
7670.2563 4562.8853 m
7938.2051 4460.064 l
S
7938.2051 4460.064 m
8161.2256 4640.7046 l
S
8161.2256 4640.7046 m
8116.2969 4924.166 l
S
8116.2969 4924.166 m
7848.3477 5026.9868 l
S
7848.3477 5026.9868 m
7625.3271 4846.3467 l
S
7625.3271 4846.3467 m
7670.2563 4562.8853 l
S
7681.0195 4824.9756 m
7716.6099 4600.4307 l
S
7848.3477 5026.9868 m
7803.4189 5310.4487 l
S
7792.6553 5048.3579 m
7757.0649 5272.9033 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 202.94096 71.520599 cm
0 7.3681641 m
(%")[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
7803.4189 5310.4487 m
7634.3945 5375.3086 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 234.71112 67.629639 cm
0 7.3681641 m
("%)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
7803.4189 5310.4487 m
7936.9927 5418.6396 l
S
8161.2256 4640.7046 m
8341.8662 4417.6841 l
S
8161.2256 4640.7046 m
8444.6875 4685.6333 l
S
5911.9775 961.63544 m
6031.1099 842.53009 l
S
5675.0762 5415.3765 m
5783.8789 5549.7681 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 117.42165 51.156509 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5783.8789 5549.7681 m
5719.395 5717.6978 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 136.52621 66.94648 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
5765.0483 5526.5088 m
5964.3579 5494.9644 l
S
5773.1509 5577.7056 m
5972.4604 5546.1611 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 131.21964 313.86816 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6031.1099 842.53009 m
5984.9937 670.34387 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 148.57373 296.32941 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -163 338 cm
6023.3677 813.62238 m
6211.3262 864.00848 l
S
6009.9463 863.68903 m
6197.9048 914.07513 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 122 13.200195 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!"#)[ 7.221680 2.778320 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
15.839844 7.7001953 m
(.,/.)[ 2.778320 6.669922 5.561523 0.000000 ] xS
/F2.1[ 10 0 0 -10 0 0]sf
33.62793 7.7001953 m
($%&)[ 3.330078 5.561523 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
45.849609 7.7001953 m
(0.1+-2.)[ 2.778320 2.602539 5.371094 6.669922 6.108398 6.669922 0.000000 ] xS
/F2.1[ 10 0 0 -10 0 0]sf
78.828125 7.7001953 m
($'&)[ 3.330078 6.108398 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
91.59668 7.7001953 m
(0.1+132.)[ 2.778320 2.602539 5.371094 5.932617 6.108398 6.669922 6.669922 0.000000 ] xS
/F2.1[ 10 0 0 -10 0 0]sf
130.50781 7.7001953 m
($\(&)[ 3.330078 5.561523 0.000000 ] xS
1 1 1 sc
1 0 0 -1 2 183.2002 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(44++)[ 4.824219 5.561523 6.669922 0.000000 ] xS
ep
end
%%Trailer
%%EOF
