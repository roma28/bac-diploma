%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 629 496
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (\\Mac\Home\Yandex.Disk.localized\Учеба\Диплом\uv\img\Graph3 - Copy.eps)
%%CreationDate: Sat Mar 21 01:03:22 2020
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 54/s54 put
Encoding 55/s55 put
Encoding 56/s56 put
Encoding 57/s57 put
/BoundingBoxes 12 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s55 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s57 [0 -434 1139 1854] def
end
/Metrics 12 dict def
 Metrics begin
/s32 569 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s52 1139 def
/s53 1139 def
/s54 1139 def
/s55 1139 def
/s56 1139 def
/s57 1139 def
end
/CharProcs 12 dict def
CharProcs begin
/.notdef {} def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s55 {
97 1274 m
97 1447 97 1274 97 1447 c
1046 1447 97 1447 1046 1447 c
1046 1307 1046 1447 1046 1307 c
952.67 1207.67 860.17 1075.67 768.5 911 c
676.83 746.33 606 577 556 403 c
520 280.33 497 146 487 0 c
302 0 487 0 302 0 c
304 115.33 326.67 254.67 370 418 c
413.33 581.33 475.5 738.83 556.5 890.5 c
637.5 1042.17 723.67 1170 815 1274 c
97 1274 815 1274 97 1274 c
closepath } bind def
/s56 {
362 795 m
287.33 822.33 232 861.33 196 912 c
160 962.67 142 1023.33 142 1094 c
142 1200.67 180.33 1290.33 257 1363 c
333.67 1435.67 435.67 1472 563 1472 c
691 1472 794 1434.83 872 1360.5 c
950 1286.17 989 1195.67 989 1089 c
989 1021 971.17 961.83 935.5 911.5 c
899.83 861.17 845.67 822.33 773 795 c
863 765.67 931.5 718.33 978.5 653 c
1025.5 587.67 1049 509.67 1049 419 c
1049 293.67 1004.67 188.33 916 103 c
827.33 17.67 710.67 -25 566 -25 c
421.33 -25 304.67 17.83 216 103.5 c
127.33 189.17 83 296 83 424 c
83 519.33 107.17 599.17 155.5 663.5 c
203.83 727.83 272.67 771.67 362 795 c
closepath 326 1100 m
326 1030.67 348.33 974 393 930 c
437.67 886 495.67 864 567 864 c
636.33 864 693.17 885.83 737.5 929.5 c
781.83 973.17 804 1026.67 804 1090 c
804 1156 781.17 1211.5 735.5 1256.5 c
689.83 1301.5 633 1324 565 1324 c
496.33 1324 439.33 1302 394 1258 c
348.67 1214 326 1161.33 326 1100 c
closepath 268 423 m
268 371.67 280.17 322 304.5 274 c
328.83 226 365 188.83 413 162.5 c
461 136.17 512.67 123 568 123 c
654 123 725 150.67 781 206 c
837 261.33 865 331.67 865 417 c
865 503.67 836.17 575.33 778.5 632 c
720.83 688.67 648.67 717 562 717 c
477.33 717 407.17 689 351.5 633 c
295.83 577 268 507 268 423 c
closepath } bind def
/s57 {
112 339 m
285 355 112 339 285 355 c
299.67 273.67 327.67 214.67 369 178 c
410.33 141.33 463.33 123 528 123 c
583.33 123 631.83 135.67 673.5 161 c
715.17 186.33 749.33 220.17 776 262.5 c
802.67 304.83 825 362 843 434 c
861 506 870 579.33 870 654 c
870 662 869.67 674 869 690 c
833 632.67 783.83 586.17 721.5 550.5 c
659.17 514.83 591.67 497 519 497 c
397.67 497 295 541 211 629 c
127 717 85 833 85 977 c
85 1125.67 128.83 1245.33 216.5 1336 c
304.17 1426.67 414 1472 546 1472 c
641.33 1472 728.5 1446.33 807.5 1395 c
886.5 1343.67 946.5 1270.5 987.5 1175.5 c
1028.5 1080.5 1049 943 1049 763 c
1049 575.67 1028.67 426.5 988 315.5 c
947.33 204.5 886.83 120 806.5 62 c
726.17 4 632 -25 524 -25 c
409.33 -25 315.67 6.83 243 70.5 c
170.33 134.17 126.67 223.67 112 339 c
closepath 849 986 m
849 1089.33 821.5 1171.33 766.5 1232 c
711.5 1292.67 645.33 1323 568 1323 c
488 1323 418.33 1290.33 359 1225 c
299.67 1159.67 270 1075 270 971 c
270 877.67 298.17 801.83 354.5 743.5 c
410.83 685.17 480.33 656 563 656 c
646.33 656 714.83 685.17 768.5 743.5 c
822.17 801.83 849 882.67 849 986 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 73/s73 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s73 [0 -434 569 1854] def
end
/Metrics 3 dict def
 Metrics begin
/s32 569 def
/s73 569 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s73 {
191 0 m
191 1466 191 0 191 1466 c
385 1466 191 1466 385 1466 c
385 0 385 1466 385 0 c
191 0 385 0 191 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC3_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 5 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61472 [0 -450 0 2059] def
/s61484 [0 -450 0 2059] def
/s61548 [0 -450 0 2059] def
end
/Metrics 5 dict def
 Metrics begin
/s32 512 def
/s61472 0 def
/s61484 0 def
/s61548 0 def
end
/CharProcs 5 dict def
CharProcs begin
/.notdef {} def
/s61484 {
110 -341 m
110 -297 110 -341 110 -297 c
178.67 -274.33 231.83 -239.17 269.5 -191.5 c
307.17 -143.83 326 -93.67 326 -41 c
326 -26.33 323.33 -15.67 318 -9 c
312.67 -2.33 306 1 298 1 c
294 1 279.67 -5.67 255 -19 c
243 -25 229.67 -28 215 -28 c
183.67 -28 158.33 -18.33 139 1 c
119.67 20.33 110 47 110 81 c
110 113.67 122.5 141.67 147.5 165 c
172.5 188.33 203 200 239 200 c
283 200 322.17 180.83 356.5 142.5 c
390.83 104.17 408 53.33 408 -10 c
408 -78.67 384.17 -142.5 336.5 -201.5 c
288.83 -260.5 213.33 -307 110 -341 c
closepath } bind def
/s61548 {
564 699 m
227 0 564 699 227 0 c
49 0 227 0 49 0 c
507 943 49 0 507 943 c
490 1031 507 943 490 1031 c
470 1127 443.17 1192.17 409.5 1226.5 c
375.83 1260.83 338.33 1278 297 1278 c
259.67 1278 227 1264.33 199 1237 c
171 1209.67 152.67 1165.33 144 1104 c
108 1104 144 1104 108 1104 c
110 1208 135.67 1291.33 185 1354 c
220.33 1399.33 263.33 1422 314 1422 c
358.67 1422 397 1404.33 429 1369 c
477 1315 516.33 1219.67 547 1083 c
707 379 547 1083 707 379 c
731 273.67 758.33 205.33 789 174 c
819 142 854.33 126 895 126 c
933.67 126 965.5 139 990.5 165 c
1015.5 191 1030.33 232.67 1035 290 c
1074 290 1035 290 1074 290 c
1074.67 272.67 1075 259.67 1075 251 c
1075 163.67 1053.33 93.33 1010 40 c
977.33 0 934.67 -20 882 -20 c
835.33 -20 793.67 -0.33 757 39 c
720.33 78.33 686 168.67 654 310 c
564 699 654 310 564 699 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Symbol exch definefont pop
%%EndFont
%%BeginFont: /MC4_Arial-CYR
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC4_Arial-CYR def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
/BoundingBoxes 6 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s1084 [0 -434 0 1854] def
/s1085 [0 -434 0 1854] def
end
/Metrics 6 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s1084 0 def
/s1085 0 def
end
/CharProcs 6 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s1084 {
140 1062 m
420 1062 140 1062 420 1062 c
699 212 420 1062 699 212 c
1009 1062 699 212 1009 1062 c
1268 1062 1009 1062 1268 1062 c
1268 0 1268 1062 1268 0 c
1088 0 1268 0 1088 0 c
1088 855 1088 0 1088 855 c
774 0 1088 855 774 0 c
613 0 774 0 613 0 c
316 896 613 0 316 896 c
316 0 316 896 316 0 c
140 0 316 0 140 0 c
140 1062 140 0 140 1062 c
closepath } bind def
/s1085 {
136 1062 m
316 1062 136 1062 316 1062 c
316 620 316 1062 316 620 c
815 620 316 620 815 620 c
815 1062 815 620 815 1062 c
995 1062 815 1062 995 1062 c
995 0 995 1062 995 0 c
815 0 995 0 815 0 c
815 471 815 0 815 471 c
316 471 815 471 316 471 c
316 0 316 471 316 0 c
136 0 316 0 136 0 c
136 1062 136 0 136 1062 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC4_Arial-CYR exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 628.81 495.61 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.240003 0.239628 sc
-218.98 280.43 tr

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [1 -0 0 -1.00157 0 2068.24] concat
gs
576 2053 m
2769 2053 l
7 sw
1 sj
1 scap
st
576 2053 m
576 2070 l
st
975 2053 m
975 2070 l
st
1373 2053 m
1373 2070 l
st
1772 2053 m
1772 2070 l
st
2171 2053 m
2171 2070 l
st
2570 2053 m
2570 2070 l
st
775 2053 m
775 2087 l
st
1174 2053 m
1174 2087 l
st
1573 2053 m
1573 2087 l
st
1972 2053 m
1972 2087 l
st
2370 2053 m
2370 2087 l
st
2769 2053 m
2769 2087 l
st
576 2053 m
576 286 l
st
576 2053 m
559 2053 l
st
576 1759 m
559 1759 l
st
576 1464 m
559 1464 l
st
576 1170 m
559 1170 l
st
576 875 m
559 875 l
st
576 581 m
559 581 l
st
576 286 m
559 286 l
st
576 1906 m
542 1906 l
st
576 1611 m
542 1611 l
st
576 1317 m
542 1317 l
st
576 1022 m
542 1022 l
st
576 728 m
542 728 l
st
576 433 m
542 433 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 712 -2170 m
(400)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1111 -2170 m
(500)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1510 -2170 m
(600)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1909 -2170 m
(700)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2307 -2170 m
(800)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2706 -2170 m
(900)[41 41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1929 m
(0.0)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1634 m
(0.2)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1340 m
(0.4)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1045 m
(0.6)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -751 m
(0.8)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -456 m
(1.0)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1423 m
579 1391 l
9 sw
st
584 1346 m
587 1314 l
st
594 1274 m
600 1300 l
st
603 1344 m
608 1376 l
st
615 1421 m
626 1425 l
st
643 1462 m
658 1476 l
st
677 1510 m
693 1536 l
st
711 1578 m
726 1596 l
st
747 1623 m
771 1634 l
st
786 1628 m
809 1612 l
st
832 1575 m
842 1547 l
st
857 1503 m
866 1472 l
st
877 1428 m
887 1397 l
st
900 1353 m
908 1322 l
st
919 1278 m
926 1248 l
st
933 1204 m
939 1174 l
st
950 1130 m
957 1099 l
st
965 1054 m
969 1023 l
st
979 978 m
986 949 l
st
991 908 m
1000 888 l
st
1008 843 m
1013 811 l
st
1022 768 m
1028 737 l
st
1039 698 m
1047 668 l
st
1058 640 m
1066 625 l
st
1075 587 m
1086 560 l
st
1103 552 m
1106 524 l
st
1115 481 m
1130 454 l
st
1154 443 m
1165 448 l
st
1179 467 m
1187 463 l
st
1198 497 m
1214 509 l
st
1231 546 m
1239 577 l
st
1250 595 m
1261 620 l
st
1268 664 m
1273 696 l
st
1292 732 m
1302 764 l
st
1308 808 m
1318 840 l
st
1323 885 m
1329 917 l
st
1337 958 m
1347 983 l
st
1355 1027 m
1360 1059 l
st
1370 1103 m
1375 1135 l
st
1383 1178 m
1389 1210 l
st
1397 1254 m
1404 1285 l
st
1413 1330 m
1418 1361 l
st
1428 1402 m
1434 1433 l
st
1446 1470 m
1452 1502 l
st
1459 1542 m
1468 1572 l
st
1482 1602 m
1490 1633 l
st
1504 1676 m
1513 1705 l
st
1532 1744 m
1545 1771 l
st
1570 1806 m
1583 1831 l
st
1618 1856 m
1643 1873 l
st
1683 1889 m
1708 1894 l
st
1745 1899 m
1777 1902 l
st
1821 1903 m
1853 1905 l
st
1897 1905 m
1929 1906 l
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
1254 1902 m
1254 1902 m
1258 1903 l
1262 1902 l
1266 1902 l
1270 1902 l
1274 1902 l
1278 1902 l
1282 1902 l
1286 1901 l
1290 1901 l
1294 1902 l
1298 1901 l
1301 1902 l
1306 1902 l
1310 1901 l
1314 1902 l
1318 1901 l
1322 1901 l
1326 1901 l
1329 1901 l
1334 1901 l
1338 1901 l
1341 1900 l
1345 1901 l
1350 1900 l
1354 1900 l
1357 1900 l
1362 1900 l
1366 1900 l
1369 1898 l
1373 1899 l
1378 1898 l
1381 1898 l
1385 1898 l
1389 1898 l
1394 1896 l
1397 1897 l
1401 1896 l
1406 1895 l
1409 1895 l
1413 1894 l
1417 1893 l
1422 1892 l
1425 1892 l
1429 1890 l
1433 1889 l
1437 1888 l
1441 1887 l
1445 1884 l
1449 1882 l
1453 1879 l
1457 1878 l
1461 1876 l
1465 1874 l
1469 1872 l
1473 1870 l
1477 1869 l
1481 1866 l
1485 1863 l
1489 1860 l
1493 1858 l
1497 1857 l
1501 1851 l
1505 1848 l
1509 1846 l
1513 1837 l
1517 1834 l
1521 1828 l
1525 1826 l
1529 1817 l
1533 1812 l
1537 1804 l
1541 1798 l
1545 1791 l
1549 1785 l
1553 1780 l
1557 1768 l
1561 1760 l
1565 1752 l
1569 1740 l
1573 1731 l
1577 1724 l
1581 1712 l
1585 1703 l
1589 1685 l
1593 1676 l
1597 1666 l
1601 1650 l
1604 1641 l
1609 1623 l
1613 1609 l
1617 1596 l
1621 1580 l
1625 1559 l
1629 1547 l
1633 1530 l
1636 1519 l
1640 1490 l
1644 1472 l
1648 1457 l
1653 1443 l
1657 1414 l
1661 1403 l
1665 1381 l
1669 1360 l
1673 1345 l
1676 1319 l
1680 1298 l
1684 1275 l
1688 1261 l
1692 1237 l
1696 1215 l
1700 1189 l
1705 1166 l
1709 1150 l
1713 1123 l
1716 1101 l
1720 1081 l
1724 1049 l
1728 1030 l
1732 1009 l
1736 984 l
1740 960 l
1744 932 l
1748 920 l
1753 892 l
1756 882 l
1760 865 l
1764 832 l
1768 830 l
1772 808 l
1776 793 l
1780 767 l
1784 746 l
1788 733 l
1792 716 l
1796 699 l
1800 688 l
1804 675 l
1808 650 l
1812 636 l
1816 629 l
1820 609 l
1824 590 l
1828 581 l
1832 566 l
1836 562 l
1840 549 l
1844 531 l
1848 534 l
1852 525 l
1856 513 l
1860 516 l
1864 515 l
1868 521 l
1872 495 l
1876 495 l
1880 498 l
1884 487 l
1888 488 l
1892 491 l
1896 489 l
1900 498 l
1904 500 l
1908 504 l
1912 512 l
1916 504 l
1920 519 l
1924 514 l
1928 517 l
1932 503 l
1936 488 l
1940 483 l
1943 474 l
1947 458 l
1952 453 l
1956 455 l
1960 446 l
1964 445 l
1968 435 l
1972 446 l
1976 438 l
1980 433 l
1984 437 l
1987 437 l
1991 445 l
1995 438 l
1999 445 l
2003 443 l
2007 448 l
2011 453 l
2015 464 l
2019 472 l
2023 481 l
2027 493 l
2032 501 l
2036 527 l
2039 525 l
2043 540 l
2047 558 l
2051 568 l
2055 581 l
2059 589 l
2063 611 l
2067 623 l
2072 644 l
2075 661 l
2079 674 l
2083 694 l
2087 718 l
2091 723 l
2095 743 l
2099 763 l
2103 789 l
2107 795 l
2111 822 l
2115 846 l
2119 847 l
2123 869 l
2127 889 l
2131 899 l
2135 931 l
2139 948 l
2143 964 l
2147 992 l
2151 999 l
2155 1020 l
2159 1031 l
2163 1045 l
2167 1059 l
2171 1078 l
2175 1095 l
2179 1102 l
2183 1133 l
2187 1148 l
2191 1153 l
2195 1174 l
2199 1188 l
2203 1209 l
2207 1220 l
2211 1236 l
2215 1243 l
2219 1268 l
2223 1276 l
2227 1290 l
2231 1309 l
2235 1325 l
2238 1330 l
2243 1348 l
2247 1356 l
2251 1368 l
2255 1378 l
2258 1395 l
2263 1404 l
2267 1414 l
2271 1423 l
2274 1439 l
2278 1453 l
2283 1458 l
2287 1472 l
2291 1475 l
2294 1486 l
2299 1499 l
2303 1505 l
2306 1515 l
2311 1526 l
2315 1535 l
2318 1539 l
2322 1553 l
2327 1564 l
2330 1576 l
2334 1574 l
2339 1585 l
2342 1597 l
2346 1600 l
2351 1609 l
2354 1616 l
2358 1627 l
2362 1628 l
2366 1638 l
2370 1645 l
2374 1646 l
2378 1653 l
2382 1662 l
2386 1669 l
2390 1678 l
2394 1679 l
2398 1687 l
2402 1692 l
2406 1695 l
2410 1699 l
2414 1707 l
2418 1716 l
2422 1715 l
2426 1721 l
2430 1727 l
2434 1728 l
2438 1739 l
2442 1744 l
2446 1748 l
2450 1750 l
2454 1756 l
2458 1759 l
2462 1767 l
2466 1767 l
2470 1771 l
2474 1776 l
2478 1784 l
2482 1788 l
2486 1794 l
2490 1797 l
2494 1804 l
2498 1805 l
2502 1812 l
2506 1817 l
2510 1821 l
2514 1829 l
2518 1830 l
2522 1837 l
2526 1841 l
2530 1845 l
2534 1848 l
2538 1855 l
2542 1857 l
2546 1861 l
2550 1864 l
2554 1870 l
2558 1871 l
2562 1872 l
2566 1877 l
2570 1879 l
2574 1881 l
2578 1883 l
2582 1885 l
2586 1887 l
2590 1890 l
2594 1891 l
2598 1893 l
2602 1894 l
2606 1895 l
2610 1897 l
2614 1897 l
2617 1899 l
2622 1899 l
2625 1899 l
2630 1900 l
2633 1901 l
2638 1902 l
2641 1902 l
2646 1902 l
2649 1902 l
2654 1903 l
2657 1903 l
2662 1903 l
2665 1903 l
2670 1904 l
2673 1904 l
2678 1904 l
2681 1904 l
2686 1904 l
2689 1904 l
2693 1904 l
2697 1904 l
2701 1904 l
2705 1905 l
2709 1905 l
2713 1905 l
2717 1905 l
2721 1904 l
2725 1905 l
2729 1905 l
2733 1905 l
2737 1905 l
2741 1905 l
2745 1905 l
2749 1905 l
2753 1905 l
2757 1905 l
2761 1905 l
2765 1905 l
2769 1905 l
9 sw
st
gr
gs
gs
1 -1 sc
311 -1135 tr
90 ro
/MC2_Arial 91 self 0 0 m
(I)[24 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_Symbol 91 self 1537 -2318 m
/s61548 50 xgls
/s61484 22 xgls
/s61472 22 xgls
1 -1 sc
1 -1 sc
/MC4_Arial-CYR 91 self 1634 -2318 m
(\()[29 ] xs
1 -1 sc
1 -1 sc
1664 -2318 m
/s1085 49 xgls
/s1084 62 xgls
1 -1 sc
1 -1 sc
1777 -2318 m
(\))[29 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
