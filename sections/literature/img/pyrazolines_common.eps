%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: pyrazolines_common.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-04-13 13:47:31 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 455 198
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 455 198
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: XYTUOD+Helvetica
%!FontType1-1.0: XYTUOD+Helvetica 1.0000.0.0000
14 dict begin/FontName /XYTUOD+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /N put
dup 35 /a put
dup 36 /H put
dup 37 /E put
dup 38 /t put
dup 39 /slash put
dup 40 /two put
dup 41 /plus put
dup 42 /R put
dup 43 /one put
dup 44 /three put
dup 45 /hyphen put
dup 46 /B put
dup 47 /r put
dup 48 /four put
dup 49 /C put
dup 50 /l put
dup 51 /comma put
dup 52 /F put
dup 53 /six put
dup 54 /M put
dup 55 /e put
dup 56 /five put
dup 57 /P put
dup 58 /h put
dup 59 /ellipsis put
dup 60 /i put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




9605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F60000000100400000041E059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA000000010031FFD9041A059A003100C4401F490C532D6529632D7529752D069626014B082B0A182B140D03F93114350D20B8012340141135107F0D0D311B3524050735310D1896274411B8014A400F0A382E6F021F2920810327023347321076C418D4EDF4ED10F5EDEDF4ED003FED3FED12392FF4FDE610ED10ED111239011112393130437940362F301926000905261D2522260600032800040308300A28011C231F28001A251828010401072800092F0728001E211B280119261B2801002B2B2B2B012B2B2B103C2B2B2B2B818181005D015D0402353316171633323635342623220607351E013332373635342623220706072334373621321615140706071E01151400230116E5BC0C2846B78EACB5A11225131C26166541729865B4452605B2406E0115DBF0472C46717FFEF2F8270117C88B3F719878947601019F03022038906B7478427AA070C8C3B98452331D1FB180CDFEFE000000000200340000042F059C0002000D005C402209020A080D010202BE12060607020601050708030106070A02750B05EF030C070403B80117B501960D08AC0AB80158B3050F470E1076C418D4F5F43CFDE4003F3FF43CFD3C1139390111123911123939872E2B047D10C50F3130011109011121350133113315231102A5FE3501CEFD8C029098D3D301FB0289FD77FE05015EB0038EFC5F9DFEA200000000010042FFDC041C0580002000BB402B4812881F02390C461357136713043A080C0D07000C0A0F0E0E75121313120E0F201213070013170A17350AB80122401A0D7F0E0E1D123A0F04043520C71D0D1107381A6F0038202247211076C418D4EDF5EDC4003FEDED3FFD12392FE4F4ED1112390111123939123939872E2B7D10C5001239011112393931301843794028181F01090226031E00280001001F20051C0728010918072801011F042800061B04280008190A2801002B2B2B012B2B103C103C2B2B





44B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/plus 1 def
/comma 2 def
/hyphen 3 def
/slash 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/five 9 def
/six 10 def
/B 11 def
/C 12 def
/E 13 def
/F 14 def
/H 15 def
/M 16 def
/N 17 def
/O 18 def
/P 19 def
/R 20 def
/a 21 def
/e 22 def
/h 23 def
/i 24 def
/l 25 def
/r 26 def
/t 27 def
/ellipsis 28 def
/u20B8 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec

F229D605A8E9C4352895A9CEB4B94F4C2B2618B808782CF7B2251C76E1AC096CB65C70894B65550733841F621DDFBA3F474AAD94A9C7E8D0D35F34246B17C704A499E5E5165570FA09D5CD987EE1FE43C4AA3790B2504225E351745C1062BC1D6E71F9D3B7400A8F7F3E430FE838B9AD7A998590E36CC8EB033643E3EB30DE115984FD813E0D2503960409D39BCD292EC8830E88A51C9EAB079469E6EA495AB5FDEC02982F4BFE2232CE78AECE3D81A2016D0E1E6AFAFA4C74EF72FBCD63545FC040765F08A5C940D540AF480694EA29DE81D4C98D31386B2587E0B9DA7EC24736AF11EA38C518F5416BB619015C1CDE80B8C5E5AC0BE609C987CCA0D8B14EFAEFB20AD99B3594EE78BB00AAF68AD3A14F738EB46361D17A590B0CE67D6FEBC4467184DCA83464507B45B56FF6D3ACD16BFCBA4959D0188489D784CC432142767CBD49D12F46ABA5945BDBA68ADE5A823A962C37EC25C4C50FB364C8C09A2E4FA9387AA79D5B1F308AB8EE7B3F5B9F532144B97CAFF4981F12F6562F86DA77C3962C01594DD1FB40271BFDD6C0F10475B2C1403D475D9A772F810EA0A761B0EC064C2287958F23D3A4DE70469CDD1253C613043AED51B7A6D946BBE98768AC3A81C13AD9ACC7DFCD95111DE85B72D80BE393E586811ED7E07F203E9DE4001C9A87A8A9EBFD6D2D9ED8ADF4ED3A5F576F14E1543E5C21462EBFF94272E0D1460E3BE11E2DDA87FCE3CE6A1507AF6E7A3C971A3F97F769E8547D38A9E3BFDCC4D2A526001D8B91733486F85EA515BE6E3A7F3A47802E80E5B48D77D2FC96413217CF8553A4FDA99AF6C7BA1B017AEB19AE40C537F118AD12A1B4DC3F465869FE1F480DE07A0B3E760CA78AC03DB080B36D5F3014401BCAF71DAC4140632482F35DA0A22DFED5CC0E85BCD861E4EC754FE9DB2E2E4B573D459E5D9667BA8DF9203275A59ECB0C014E6258D09DD5985A4A445F817C770041B5EF75E98F175996BAA8D005CEA3C9F14AE22ABFEDFBF95101C9D15B4C802F14F26275B441573E879AAE8C0D55D1F75F79B110DC8707AEED004EF2FDDE5C4E9CE3AB81AFF924B37353F8A2454CBD260C792BE8EB9EDE7D566195B55A247C82D0DA482F8B7C3AC1A3F72759C6A41996F775918A0568A2A8607C31FFB189C66C680CB1305D897E7D8D29A40B2B25F8D5D275F5B47F0878CA74DEFCB4CFCC2BB14CF7217D45A5208D1FCE792F98B8B6CA27FF24C62E99DE9F911CF305859C0171A82884C96E62FFC6E15A6CD53D70CD24A6C8644627B4420FC5E7AFE1B46E10650351744BAD59D44611A05E83019CDB845120D422846AA5E553EC97DEA5A090D962A058F5A387A264698BD7E44018F2639BA4B7EF0481A07CD13F4F5A1373CB7C2167165D4D2AEB7EA97CC97A1DB062D415E6A4996A30C302C6AA2EFF284A1B1400BDA2ADC08BDF68AA537E

79D73B1DC86EC92FA978646E167FDC04D4D86F65F4DF483BC5264F98F51089509B3B2CBACA3B47861C8C763951BAA58DF0DC14393E0AC8BDD489B9EE2FDEEF9E9B8D1B91E4E0092ACE828E66A886C404EC38D13B0978F7F7CDFB4E8EAF42C2F8EE793A5586775BF2004E0047B5A5308F83B850F43902B27BD4085A523D9C604BE34D70841D1DC195B4EE73F3D3C46D3F532ACCFA3C97C3CD758A1F97DE46CC81417B5615F81A715EDFD6BC1A62ECD6321C531C791E2DD6CF850D1AC6FA877AD5E34534D74DDFDDC53D2C60DC426300BDE83452A0A1F8DCF59F96FD983CF34DBEED79954117E18410037E494DA0722FC712A3A1191DF73222567607AC100292891FAD375B4F5AA794F0660A2F610B8F3D562D9CE683019A86755DC6975DCC8ACDBA92631559D43CD360E87169A236A31B0DEFAC5BABF10149237413F50312DDFA5DFAAB0F71895E50B4E2AD4D3A0DD8BCEBA79E037947F8E6862460E5301B53E9EC236C4E985DE88651CAFCDD5AC92D788311DF11315205407212DD0DD2C62EB6ECA636A8E5243AA9F67CA44DA443693C5564349CC1558BA6429837EE28BFB1DB819889794FA735EF7C70FFB6A538661E621B023879F21D7C78889167967A12B0299B4EF8773176A5D894E4EEC09E4DDDCF77F3947A84B46E8EF35EBB3E46D119B5592CE2FEDD45730C976151D96FF6EA6E38296AA9054379A6AA0095CEE993065D7DFE1485FAF59C0346FFF137DE14F07F1294A8E66B61D6C53B442E6760CB8C196B72217F3D956510A2AEE2312B1249396718F1C9117C6CF1849DA0E4F79BF46D3EA8002E6A1B380F099A7BD9ED80960FE6C0E9231BB8C74A0E39E7771118E8759C159D0E529526736A69288C6320830EB1494AF3CD1D45C8CE4F89319122A868D487263D2C5933F9F30EF1C3A5F483EA9CD9334E6551CF2AF1F8DCDDB9A47F5FF8E9CD42053D113C2E7AE5AA89AB13CDB629AA7CE23AEEE2D1D7E37170AA6A609C022A23DA79D9D2C060A87D260CA422D6C326F043BEE12EB0E84B426C7AE2B3904C19D43CC74B3171959AC3C51CE0F2C1F740555CC16FBF55E260034244B2D2F52AC1D2267C2137E35B72E27CEA97D195EE3EDFFDE29CCFDFC30D9647A7BE6E97EB00F6572C9ED75001D5B7CA9D850219D9E7E28C96D46DFE7C89055C1C7C9F490F35CEDC19C99F770D43D034EE12AC1A8F8FCA4AD7F52BCD8379D08A005F8F59D15A7A2A1F2830C806FBB82D01F3F91BBA13ADCADAF9EC7187F47EA77D39D517AE899BF2D133CFA2858D199C218784617EF92B8798B15CB433E869FCF7334677943CF7F231DFBCD877FC327C7ADC9A03CB4D26BD1CD20F18F02762A0EB61DE5CF66A2AB631A5CBE8EF8BA3D7DA4114BD5E775DF7BC4A0DF6488BCDEB032171DACE4082258A5736200FEE0F845372ED3B000E08FA933D35CCCB1E1C919702
90C0C55DC3358F56D5B34DA6F2F4D484FE0A1CD44DCB39BB888EE8DD043AB6D5E5484902A21E4D34BCFBC52ECE99C021575FEEF0F5D8FA760D2640A70766ACFB071BC5AA88349E32CF4744EF365F1D6EC818F9EA6BE82FD15B8D97C2AD3B90516A36784DA747A504655279AFFD75B3FA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XYTUOD+Helvetica cguidfix
/F1.1/XYTUOD+Helvetica renmfont
%RBIBeginFontSubset: WJOXZN+Helvetica-Bold
%!FontType1-1.0: WJOXZN+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /WJOXZN+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /two put
dup 35 /colon put
dup 36 /one put
dup 37 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<


1BB04044591B21212045B0C05058B0C0441B2159592DB800302C2020456944B001602020457D691844B001602DB800312CB800302A2DB800322C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800332C4B535845441B2121592DB800342C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800352C2020456944B001602DB800362CB800352A212DB800372C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800382C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800392C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003A2C2020456944B001602020457D691844B001602DB8003B2CB8003A2A2DB8003C2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003D2C4B535845441B2121592DB8003E2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8003F2C2020456944B001602DB800402CB8003F2A212DB800412C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800422C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800432C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800442C2020456944B001602020457D691844B001602DB800452CB800442A2DB800462C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800472C4B535845441B2121592DB800482C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800492C2020456944B001602DB8004A2CB800492A212DB8004B2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004C2C2046B00425465258238A59



4523614459B35045484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/colon 4 def
/R 5 def
/u20B8 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4037662 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C977ACEB10D7B7CCAA782B3E10A4BEAFD6991C7A5E7DAF786CA93E9C17EF6EAF2AA4CE16BB58508EF8038DF62551C8422C929499E7306D44A7BFD909E2A93B1762252208C822A58F4AA7BC1D01B2361DB8C116D42255DF7CE1647AC5CEAFBC907AC63CD47F5B972435674DE4D38C2F05C42BCC2DD4692445D553CCE42698C47666256C9A13E6411245AA62E2B67EA75E6A604CDF031E0393D93D82B2F98752A78ABAA0DDF0F9BC2DBA975516411C53FED4AC8ABC57A7220FD66491C4221AC7C116D9B3292A480B89DF478471A71B33A1C6BEBD6FD6873A76C51F23CE97426128FFD124653F2FD6C7BE1FDAE59459D1D994740F4E5131F270BD7FCBADF06B4B9CA6790B08735F584A43041CCF0418B5E69FDD998791C9F161DB2BDF648888D1B1973EFB077E78353C00C6244FE23F6B2302630D5744C96623526F78829576F069F203F413ACF34787FEDDD0B8EF6186AB5CAA446498750217C32467D1201E31C03EBADC693044BF08872E0B09433A4B4E914E47A950F1BDF3F2E1EE50CD0C431259C79426983BD09F8A45331A309CDFAD020FF6AECC902361E457DFA4CB7C613FE6367F0401B2D7C1DE9940C1FBF0BD3633E033EB2086AF7E41BF3E9EB217E420F294E3051E6DE31BFF71C5C2FE3E5BBAA2AB1DC9D1FE69A445CDAA6AADA075B55547B2B487928714BC239DFDE67FF0D887B5FAF22B03EB60E15258E6C14780A78BD534D9936514509FB09A6C373C39E064D0667211177D5033BC5884CD9511DD81F
51BFC37AD5365A59FD051654EC226E33EEA0A6079BED8602BC706214BD6F21D64E61C07DF27846A37C671850FF80008D3694064EF60F3E579C9A7476C1770BB669B7EAF7402371FA2720A3E1234485128AC48934065E052C5A8B467AA7617E4465067A80D77CB5F553FBEE0821F4181BD03A231663D7932CCDD302234C164CB113B72D46B9B445C971B08D9960BEC845C8351686A0A0539A7B5F49497C8FE0E55B238D420C81561B862868DC656B0FBF6409E32331DDEDB895342563759189B1E21F240A47778058103D444FA0A523EFDF02ED51D075E9FDED8835FB45FBB09F0F5F2827C92F81030B5B683FF27EEFB44D13FDF04BDA86D6299F92615427802A19A8DD354045323A5BA0A2BBCBEC6AEFCC74EDFAD486B390E5162C47799C0E563ECEF579A944B5BB819CCFB180900CDADAD528C14ED9CC8181C2335157080A4D804A0D0A090A9D3C625CB9313E6C77DA85DAA1116508A5E8AA5DD679FB7E49E4D20C961993D4EA1995071627FFE05ED93002281C2B4F031F521B705B8B5110631786E4464104B32A0B722F65D6D83687E0CCF2AD96DD039CF4DB44CF1E96B76D8FB3BC929E9E32C90C32AD33C1F6338DEE9328D4E2AD1DE7BADF8223AF87E81951CBCA8951B70B75AB58531D6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/WJOXZN+Helvetica-Bold cguidfix
/F2.1/WJOXZN+Helvetica-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 198 m
455 198 l
455 0 l
0 0 l
h
0 198 m
W
0 0 455 198 rc
-1 198 m
456 198 l
456 -1 l
-1 -1 l
h
f
20 w
1 J
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
889.38812 990.45105 m
1138.7762 846.46667 l
S
1138.7762 846.46667 m
1388.1647 990.45105 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 36.049652 189.25919 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
1112.859 861.42999 m
1112.859 676.84753 l
S
1164.6935 861.42993 m
1164.6935 676.84753 l
S
4077.0244 957.08313 m
3002.1968 957.08313 l
S
CM
198.69598 165.14584 m
198.69598 165.14584 185.16083 161.75655 185.16083 161.75655 c
185.16083 161.75655 186.85123 163.66284 186.85123 165.14584 c
186.85123 167.06641 185.16083 169.53514 185.16083 169.53514 c
185.16083 169.53514 198.69598 165.14584 198.69598 165.14584 c
198.69598 165.14584 198.69598 165.14584 198.69598 165.14584 c
h
f
0.050000001 0 0 -0.050000001 -17 213 cm
4964.4829 950.45105 m
5213.8711 806.46667 l
S
5213.8711 806.46667 m
5463.2593 950.45105 l
S
5463.2593 950.45105 m
5712.6475 806.46667 l
S
5463.2593 890.5979 m
5686.7305 761.57678 l
S
5712.6475 806.46667 m
5962.0356 950.45105 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 239.80438 191.25919 cm
0 7.3681641 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
5187.9536 821.42999 m
5187.9536 636.84753 l
S
5239.7881 821.42993 m
5239.7881 636.84753 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 147.88475 177.15561 cm
0 7.7001953 m
("#!$)[ 7.221680 5.561523 7.778320 0.000000 ] xS
1 0 0 -1 138.35777 160.52988 cm
0 7.7001953 m
(%&!$'$)[ 6.669922 2.778320 7.778320 7.221680 2.778320 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
34.448242 10 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
38.619385 7.7001953 m
(!)s
1 0 0 -1 66.507828 170.79477 cm
0 7.7001953 m
(\))s
1 0 0 -1 219.69112 67.474716 cm
0 7.1728516 m
(")s
0 15.541179 m
($)s
1 0 0 -1 232.16052 74.673935 cm
0 7.1728516 m
("$)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
4912.1016 2930.999 m
4955.3882 2906.0076 l
S
4704.5029 2933.6123 m
4556.6509 2848.2498 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 58.975113 64.24202 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
1 0 0 -1 73.372421 64.422028 cm
0 7.1728516 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
1565.244 3141.9751 m
1506.1627 3331.8535 l
S
1614.7378 3157.3752 m
1566.8453 3311.2944 l
S
1506.1627 3331.8535 m
1741.2323 3498.1919 l
S
1741.2323 3498.1919 m
1972.0693 3326.0283 l
S
1972.0693 3326.0283 m
1909.0432 3140.0002 l
S
1790.663 3054.4006 m
1686.7555 3055.7 l
S
1962.4446 2936.3037 m
2046.0032 2818.2183 l
S
1506.1627 3331.8535 m
1233.4219 3424.2581 l
S
1972.0693 3326.0283 m
2247.0352 3411.5847 l
S
889.38812 990.45105 m
639.99969 846.46667 l
S
837.55371 1020.3777 m
639.99969 906.31989 l
S
639.99969 846.46667 m
390.61157 990.45105 l
S
390.61157 990.45105 m
390.61157 1278.4198 l
S
442.44595 1020.3776 m
442.44595 1248.4932 l
S
390.61157 1278.4198 m
639.99969 1422.4038 l
S
810.70514 1323.8473 m
889.38812 1278.4198 l
S
639.99969 1422.4038 m
744.68671 1361.963 l
S
782.08551 1280.5177 m
837.55377 1248.4932 l
S
639.99969 1362.5508 m
716.06708 1318.6333 l
S
889.38812 1278.4198 m
889.38812 990.45105 l
S
2209.4358 990.45105 m
2209.4358 1278.4194 l
S
2261.2703 1020.3776 m
2261.2703 1248.4929 l
S
2209.4358 1278.4194 m
2458.824 1422.4042 l
S
2614.9829 1332.2456 m
2708.2124 1278.4194 l
S
2458.824 1422.4042 m
2549.0823 1370.2935 l
S
2589.3745 1287.1774 m
2656.3779 1248.4929 l
S
2458.824 1362.5509 m
2523.4739 1325.2252 l
S
2708.2124 1278.4194 m
2708.2124 990.45105 l
S
2708.2124 990.45105 m
2458.824 846.46637 l
S
2656.3779 1020.3776 m
2458.824 906.31964 l
S
2458.824 846.46637 m
2209.4358 990.45105 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 23.588364 141.89525 cm
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(+)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
639.99969 1134.4354 m
816.74744 1402.0284 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 114.52959 138.89525 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
2458.8242 1134.4351 m
2642.8391 1458.2831 l
S
4964.4829 950.45105 m
4715.0942 806.46667 l
S
4912.6484 980.37769 m
4715.0942 866.31989 l
S
4715.0942 806.46667 m
4465.7061 950.45105 l
S
4465.7061 950.45105 m
4465.7061 1238.4198 l
S
4517.5405 980.37762 m
4517.5405 1208.4932 l
S
4465.7061 1238.4198 m
4715.0942 1382.4038 l
S
4885.7998 1283.8473 m
4964.4829 1238.4198 l
S
4715.0942 1382.4038 m
4819.7812 1321.963 l
S
4857.1802 1240.5177 m
4912.6484 1208.4932 l
S
4715.0942 1322.5508 m
4791.1616 1278.6333 l
S
4964.4829 1238.4198 m
4964.4829 950.45105 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 227.34309 143.89525 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(+)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
4715.0942 1094.4354 m
4891.8423 1362.0284 l
S
5962.0356 950.45105 m
5962.0356 1238.4194 l
S
6013.8701 980.37756 m
6013.8701 1208.4929 l
S
5962.0356 1238.4194 m
6211.4238 1382.4042 l
S
6367.5825 1292.2456 m
6460.812 1238.4194 l
S
6211.4238 1382.4042 m
6301.6821 1330.2935 l
S
6341.9741 1247.1774 m
6408.9775 1208.4929 l
S
6211.4238 1322.5509 m
6276.0737 1285.2252 l
S
6460.812 1238.4194 m
6460.812 950.45105 l
S
6460.812 950.45105 m
6211.4238 806.46637 l
S
6408.9775 980.37762 m
6211.4238 866.31964 l
S
6211.4238 806.46637 m
5962.0356 950.45105 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 302.15958 140.89525 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
6211.4238 1094.4351 m
6390.5576 1409.6924 l
S
1233.4219 3424.2581 m
984.03351 3280.2737 l
S
1181.5875 3454.1848 m
984.03351 3340.127 l
S
984.03351 3280.2737 m
734.64539 3424.2581 l
S
734.64539 3424.2581 m
734.64539 3712.2271 l
S
786.4798 3454.1848 m
786.4798 3682.3005 l
S
734.64539 3712.2271 m
984.03351 3856.2112 l
S
1154.739 3757.6548 m
1233.4219 3712.2271 l
S
984.03351 3856.2112 m
1088.7205 3795.7703 l
S
1126.1194 3714.325 m
1181.5875 3682.3005 l
S
984.03351 3796.3582 m
1060.1008 3752.4407 l
S
1233.4219 3712.2271 m
1233.4219 3424.2581 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 40.790054 20.20488 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(+)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
984.03351 3568.2427 m
1151.5836 3821.9109 l
S
2247.0352 3411.5847 m
2247.0352 3699.5535 l
S
2298.8696 3441.5112 m
2298.8696 3669.627 l
S
2247.0352 3699.5535 m
2496.4233 3843.5381 l
S
2652.5823 3753.3796 m
2745.8118 3699.5535 l
S
2496.4233 3843.5381 m
2586.6816 3791.4275 l
S
2626.9739 3708.3115 m
2693.9773 3669.627 l
S
2496.4233 3783.6848 m
2561.0732 3746.3594 l
S
2745.8118 3699.5535 m
2745.8118 3411.5847 l
S
2745.8118 3411.5847 m
2496.4233 3267.6001 l
S
2693.9773 3441.5115 m
2496.4233 3327.4534 l
S
2496.4233 3267.6001 m
2247.0352 3411.5847 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 116.40956 17.838547 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
2496.4236 3555.5691 m
2680.4385 3879.417 l
S
4556.6509 2848.2498 m
4556.6504 2560.281 l
S
4504.8164 2818.3232 m
4504.8159 2590.2078 l
S
4556.6504 2560.281 m
4307.2622 2416.2966 l
S
4307.2622 2416.2966 m
4057.8738 2560.281 l
S
4307.2622 2476.1499 m
4109.708 2590.2075 l
S
4057.8738 2560.281 m
4057.8738 2848.2498 l
S
4210.8838 2936.5898 m
4307.2622 2992.2339 l
S
4057.8738 2848.2498 m
4144.9692 2898.5342 l
S
4237.7656 2892.2571 m
4307.2622 2932.3809 l
S
4109.708 2818.3232 m
4171.8511 2854.2014 l
S
4307.2622 2992.2339 m
4556.6509 2848.2498 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 183.55305 63.403748 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(,)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
4307.2622 2704.2654 m
4152.7485 2959.0845 l
S
2046.0032 2818.2183 m
2046.0034 2530.2495 l
S
2097.8374 2788.2917 m
2097.8376 2560.1763 l
S
2046.0034 2530.2495 m
2295.3918 2386.2651 l
S
2295.3918 2386.2651 m
2544.78 2530.2495 l
S
2295.3918 2446.1184 m
2492.9456 2560.1763 l
S
2544.78 2530.2495 m
2544.78 2818.2183 l
S
2391.7703 2906.5586 m
2295.3918 2962.2024 l
S
2544.78 2818.2183 m
2457.6846 2868.5029 l
S
2364.8882 2862.2256 m
2295.3918 2902.3494 l
S
2492.9456 2788.2917 m
2430.8027 2824.1699 l
S
2295.3918 2962.2024 m
2046.0032 2818.2183 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 105.35796 64.905319 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(*)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(,)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
2295.3916 2674.2339 m
2456.2781 2939.5632 l
S
3636.8953 3340 m
5652.2598 3340 l
S
CM
154 46 m
154 46 167.53516 50.389297 167.53516 50.389297 c
167.53516 50.389297 165.84477 47.920563 165.84477 46 c
165.84477 44.516994 167.53516 42.610703 167.53516 42.610703 c
167.53516 42.610703 154 46 154 46 c
154 46 154 46 154 46 c
h
f
0.050000001 0 0 -0.050000001 -17 213 cm
5672.2598 3320 m
5672.2598 1595.8667 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 372.7742 196.19002 cm
/F2.1[ 10 0 0 -10 0 0]sf
12.089233 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
19.310913 10 m
(")s
/F2.1[ 10 0 0 -10 0 0]sf
23.482056 7.7001953 m
(#)s
/F1.1[ 10 0 0 -10 0 0]sf
15.839844 18.596191 m
($)s
10.004883 29.492188 m
(,-./)[ 5.561523 3.330078 6.669922 0.000000 ] xS
10.004883 40.388184 m
(0-./)[ 5.561523 3.330078 6.669922 0.000000 ] xS
10.283203 51.28418 m
(0-12)[ 5.561523 3.330078 7.221680 0.000000 ] xS
6.1132812 62.180176 m
(,30-12)[ 5.561523 2.778320 5.561523 3.330078 7.221680 0.000000 ] xS
11.950684 73.076172 m
(0-4)[ 5.561523 3.330078 0.000000 ] xS
7.7807617 83.972168 m
(\(35-4)[ 5.561523 2.778320 5.561523 3.330078 0.000000 ] xS
4.1699219 94.868164 m
(,-!67)[ 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
0 105.76416 m
(,38-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
0 116.66016 m
(,30-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
5 127.55615 m
(,-!9:)[ 5.561523 3.330078 7.778320 6.669922 0.000000 ] xS
5 138.45215 m
(0-!9:)[ 5.561523 3.330078 7.778320 6.669922 0.000000 ] xS
8.059082 149.34814 m
(\(-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
8.059082 160.24414 m
(,-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
8.059082 171.14014 m
(0-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
3.8891602 182.03613 m
(\(38-67)[ 5.561523 2.778320 5.561523 3.330078 8.330078 0.000000 ] xS
14.450684 192.93213 m
(;)s
1 0 0 -1 319.22696 196.19002 cm
/F2.1[ 10 0 0 -10 0 0]sf
16.259155 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
23.480835 10 m
($)s
/F2.1[ 10 0 0 -10 0 0]sf
27.651978 7.7001953 m
(#)s
/F1.1[ 10 0 0 -10 0 0]sf
20.009766 18.596191 m
($)s
12.229004 29.492188 m
(\(-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
12.229004 40.388184 m
(,-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
12.229004 51.28418 m
(0-67)[ 5.561523 3.330078 8.330078 0.000000 ] xS
8.059082 62.180176 m
(,30-67)[ 5.561523 2.778320 5.561523 3.330078 8.330078 0.000000 ] xS
3.8891602 73.076172 m
(\(3035-67)[ 5.561523 2.778320 5.561523 2.778320 5.561523 3.330078 8.330078 0.000000 ] xS
8.3398438 83.972168 m
(\(-!67)[ 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
8.3398438 94.868164 m
(,-!67)[ 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
8.3398438 105.76416 m
(0-!67)[ 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
4.1699219 116.66016 m
(\(30-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
4.1699219 127.55615 m
(\(38-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
4.1699219 138.45215 m
(\(35-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
4.1699219 149.34814 m
(,30-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
4.1699219 160.24414 m
(,38-!67)[ 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
0 171.14014 m
(\(3,30-!67)[ 5.561523 2.778320 5.561523 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
14.453125 182.03613 m
(0-12)[ 5.561523 3.330078 7.221680 0.000000 ] xS
18.620605 192.93213 m
(;)s
1 0 0 -1 421.62967 196.19002 cm
/F2.1[ 10 0 0 -10 0 0]sf
8.2000732 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
15.421753 10 m
(%)s
/F2.1[ 10 0 0 -10 0 0]sf
19.592896 7.7001953 m
(#)s
/F1.1[ 10 0 0 -10 0 0]sf
11.950684 18.739014 m
($)s
0.28076172 29.777832 m
(0-!67)[ 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
2.3651123 40.81665 m
(,-14)[ 5.561523 3.330078 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
24.586792 43.116455 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
8.0615234 51.855469 m
(0-4)[ 5.561523 3.330078 0.000000 ] xS
5.0048828 62.894287 m
(0-<9/)[ 5.561523 3.330078 2.221680 6.669922 0.000000 ] xS
0 73.933105 m
(,30-67)[ 5.561523 2.778320 5.561523 3.330078 8.330078 0.000000 ] xS
1 0 0 -1 102.33035 189.2592 cm
0 7.3681641 m
(1$!)[ 7.221680 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -17 213 cm
2458.824 846.46637 m
2458.824 676.84723 l
S
ep
end
%%Trailer
%%EOF
