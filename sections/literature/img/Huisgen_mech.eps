%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: Huisgen_mech.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-04-05 08:07:12 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 462 270
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 462 270
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HLPLNC+Helvetica
%!FontType1-1.0: HLPLNC+Helvetica 1.0000.0.0000
14 dict begin/FontName /HLPLNC+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /R put
dup 35 /O put
dup 36 /two put
dup 37 /C put
dup 38 /P put
dup 39 /h put
dup 40 /three put
dup 41 /one put
dup 42 /H put
dup 43 /plus put
dup 44 /hyphen put
dup 45 /equal put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





0606070207080301020806080A030A0A010608020302B8019BB505041A0C0708B8019B400A0900190B0CA0217670182B2B4EF43C4DFD3C4E10F63C4DFD3C11123939392F003F3F3C3F3C12393904872E2B877DC53130005D015D13330111331123011123019CEB02E6BDDFFD0FBE023A05BDFB5A04A6FA4304A5FB5B05BD000000030050FFD505E805E5000F001B001C008A402C8705C700C701C302C808C90A064308153A0F031B3A07091C021C1C0B1231031A1E18310B191D1ED8216A66182B2B4EF44DED4E10F64DED12392F003F3FED3FED313043794032001A0D26012509250526160E18320014001232011A081832001006123201170C1532011302153201190A1B320011041B32002B2B2B2B012B2B2B2B2B2B2B2B81005D0017161110070221202726111037122100123510002322001114122103049BBB92A7C4FE95FEADC2AD94BE0174011BEBFEF1EBE4FEE0F701150E05E5FAC3FED0FEB7DAFF00E0D8014A012AD40110FAA20179F50103013CFEC7FECFF4FEB1055E000200AF000004F805BD000A001400614035690C6912790C7A12044814581468147A140407081E1110100A010E0F1E0100020A080206120C0409141431041A160F092500191516B8010BB3219589182B2B4EF44DFD3C4E10F64DFD11121739003F3F3CFD3C1012392F3CFD3C015D31305D132132161514062321112300272623211121323635AF0295C4F0D6DEFE32C70380784273FE74018C86A705BDDDC8ACFFFD9304B93A1FFE03729000000200B40000057805BD0009002700944012070D49014805590158056905641478050816BB01300119001B011C40422321202660127112751403121E1F141C1503211E161404261224251E0009091B071E0B02261C1B082025151F251603310F691B1A29082625270A192829D6219566182B2B4EF43C4DFD3C4E10F64DF4EDD4EDD4ED003F3C3C3FFD12392F3CFD3C3911173901111239391239395D1112392B3130015D013236353427262321110321321716151406071E011F011617161715232E012F012627262321112303478CA3723D66FE1AC702A8A86DCF6D6256570507030B122EF40A0C040C0764397AFE3BC7031C70929D391EFE0A02A1315EFD84A833237280C55429461421133C56F590311BFD8A00010084000003ED05C200160053402C0607070817071708270427137507750808130D0213150000111D0607150C0A0D290A1A180115290016191718B80106B3216242182B2B4EF43C4DFD3C4E10F64DED003F3C3FED3F1139390112393130005D133311363736333217161511231134272623220615112384B440335782E9532DB91E318770B6B405C2FDDC512139A3599EFD5102A37637589AD6FDC80000000002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50

6820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/plus 1 def
/hyphen 2 def
/one 3 def
/two 4 def
/three 5 def
/equal 6 def
/C 7 def
/H 8 def
/N 9 def
/O 10 def
/P 11 def
/R 12 def
/h 13 def
/u20B8 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B1454491BCF48412CA40CE1C5F7851A403FDB5F7EBECD00BD5944235E0907062FB53990855BEBF20E9C6554509E62A79EAF0EC4F69086B036B146FB91759A4F509B7A266881E6ECD39C72ECBD2F69B4DBF1F51A619BEB49E75FFB67B50067EFD9D748AFEAB2981D25965E66DA8A0AB034E7BE08A36933C97AE838C594E2EFAC17418CC6870BB417F7CB3E3FD1E54A3F7947952BE8C08D920EEF3B1BB7B0365E8BF169B5E0804A321204981DC621E965E4A006A74809F64018B6C71E78F05A4B949B86BF5B3D69DA8922347D54BB3394E2BD7B4F026BF374B2AA81FE7522704B34239656234BAA01759ABBD1EDE64E81741A4CC6A58E14197911063D7A3C96D9616D7EE268997AC2DFC999B3A4155DF876D47300F6154C198A86B2A48ADD314E5CBF79D2A6CFEC0924A09BD045FF4894D00FFEAF8A3C0004CDDA04B15095E95322033F06BC731D570CEF191C50F8B8C260C61E96968A6A18E6D454698BF01C9833E6521242780BE16578986F95F8B205A5E7F7A934728E3AD4B3E5D746811D46C28932CA4BED00E982B3A869A2EBC1E2D9D10B10252393B9B771CC7F68FAAF5E6742B99D479A8194765DB7032AEC2F8426361446879FE8852B3183CB6D42D0627030538CDF1AE301DA20C3D616456C8DDC5EEBC61402044ACFAC061AE852D80A319D6AE19F6DE3675EEA1BFA4E3657BAA832BC2D4CEBBB8BA4DD657CB1DFF9D3378341AE7237B2DB7DD0E22C60D61D78F88320EA0540B887888AA098808948B37
3A5D9DA6E88C2F2BFF42768ECFEE0228BE96F0205447DA7A03D058AB99CEEB8FA5A3632E14AD3B20B3FEE1AD19E2C63E846706C152C530D766DD1DFE791743D366EAE37AA24F93E8EA3B768AE880C749D3AF6C84A76FBF421AB7E726206DD79911FB85DEED08E2CACA3BCD7D90F6428550C89D048965F9D85D95B76F44515460155BFCA85D38156F2BFD0E90A8F8850050AB1F0D53E0E65568880A3025B3F0A69E417A0FA00B28A40550F9C07AC24B1FFEA1539EF772F5A899AD47B51DC7953C13D1095F0CF5FE35B46C6D25B1D519434F07F70D57C8ABC13E2AA8FC5B6AF93383D674B19C7A615BBA2F6B71DB7F04EB10D7841BD3F62350F0C21474E616AB99521414FE91DA35DCD06BF8F897DD9B40C3AB159F5A65889F476124CF8D93B8F036BF42E419220EFC30219E307534015FAE3277F264D6CBC9FA5B8CC93BC428BD87C6FBECBACE00B784C056047FCE709CD128537652ECD44A8449F8C10512CDF3D130AF91E21D5EDAFAD9C8675A8EA0D48C40AB4D875A1ACCD9A99F88E136815EF7E32018E085616FECCB6074A0700701149469C51BE341BFF439481BEAB528AFF3CCB0BA950E22F2FDD153469B5D95306D05B45C164734D830668504E53B91F643AB1529210B8811251575ACE87F80CBF63D4B471737BC289BCF453D7B17D2118AC5D867E9E430FA9C71C5E168372CC08278B136F5181A3AE0BF6BAE60EC210551F360FAECF6BC5B5FE1200CEE72BE89B3A2CF1B116E3E9DE746F82CFF4CCC46558B5ADEB196F52FE57F6C22EC6AA3D6E969B7E458A97A261C6FD07295F01EE6D7D2A7BCCD4F7E8AF06D9CBFC206ABA8BF5626BDC911A1482798A5B435CADC7BC2B68CF2319815E4FB05A3916A3CD094687000352067289813CFE02BEFD11FE2495BD5DE33F52B855720CE91FD5F9D6CA1808C84D685A9D5E6B93DC9111D09B4414149265A59758F4B79FBFE4F0CD578FC6BCA386F9C9CBDBDCFC94BDF288763C8D0692C484D8C680E12AB3CCF0B1CDF0CDE3BDFA59C12A7E25EEC7BD8B23E29F6F05BC9087F9A8725B94FD2B8F6135F620AF2EB104C5F6B435C38954B19FB30395FD865C2F3080371264275BD239900B787F54EA5D9B608966CBC6B00EE6267F51F2A235FB077D3DBF850BE33F7B91D71232308CEDDC16B3432337AE51188C7030805BFAD2B99D103AF1D08AD3D79735584213CA0F15F07527689E8FBF41BA22200A20FDE727F91CE9BD2E004FC347C25995782AC99EE2377616852D5B1522574C520AABC6DB05DDE668BC460D4523CCF211E5128C309B77581F3154A87C7A02CCA78AB51DC331751B304CB0700CED59518429124025A8AAF57C3D28DA783BD3E02A7498D4A48049103C4D53F72E96640E3C61701CC9FEB2C04A2AD9BDDA78514625C4BE5D67C5F14CF5634C2199F8E11C0A3EBD4C92B1AE37B61B8F4925108
FC793EA911A4037A75DDF06856091267C83881EDB527B5AD4C71E1A1543F955216566460C59C59C2F1E7AC4576BD49CE3AE1CFE1AA3E7F334EEBBA2B83A54A3EE4AE629600B475F1B6F0954EE4FC971A3A3013AB4A35B97FB905E401677664D1E493676DA223ADF078CCF514687A801BC147714185F8C1B2A534CAE1FD67227DEB24FD4E210AC56929B0F95C1FDE44424FE9C62AB8244B011443EC97BF70DF44D88A30474CF76FB1531BFD978FBFF225EBCBE84C1699E2B77F01AD7DD30656B131AA0D0345F71466BE741A40F8190A9A89778C2651207D4219D0A87EE26E1DD850475208BA197032BD82635DF27C6DD40F6B04ACE1030216A34D7E9B24D1E3EACBC71E8899A6F210AA1E68129F29055F0C06007C890FE04A3A0F89219A8D1832482E8D0520EDA345C4FFA89667FEB744522D968E3CBAC197CACF7B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HLPLNC+Helvetica cguidfix
/F1.1/HLPLNC+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 270 m
462 270 l
462 0 l
0 0 l
h
0 270 m
W
0 0 462 270 rc
-1 270 m
463 270 l
463 -1 l
-1 -1 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 33.227867 245.40987 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 33.196152 231.01146 cm
0 7.1728516 m
(!)s
20 w
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
816.59723 1173.8336 m
816.41241 1257.74 l
S
868.43146 1173.9478 m
868.24664 1257.8541 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.5397669 223.93738 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
724.67053 1434.0408 m
655.32928 1473.8716 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 45.713108 252.67926 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
922.91248 1032.5635 m
962.36884 1009.8991 l
S
2454.3076 1260.5133 m
1677.3937 1260.5133 l
S
CM
130.55865 232.97433 m
130.55865 232.97433 117.02349 229.58804 117.02349 229.58804 c
117.02349 229.58804 118.71539 231.49283 118.71539 232.97433 c
118.71539 234.89334 117.02349 237.36063 117.02349 237.36063 c
117.02349 237.36063 130.55865 232.97433 130.55865 232.97433 c
130.55865 232.97433 130.55865 232.97433 130.55865 232.97433 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 93.413628 247.21677 cm
0 7.7001953 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 10 m
(\()s
1 0 0 -1 184.82889 234.91942 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 170.43057 234.85933 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
3759.7822 1303.7117 m
3655.8757 1304.1453 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 144.1123 222.45764 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
3510.0876 1393.2803 m
3479.5596 1446.6698 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 191.976 247.51642 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
3919.7483 1179.2517 m
3932.8691 1156.3051 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 144.1026 245.0327 cm
0 7.1972656 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 9.4970703 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
16.402588 7.1972656 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
3463.6667 1207.7625 m
3407.8369 1152.1521 l
S
3455.283 918.85126 m
3455.283 954.64618 3426.2654 983.66376 3390.4705 983.66376 c
3354.6755 983.66376 3325.658 954.64618 3325.658 918.85126 c
3325.658 883.05627 3354.6755 854.03876 3390.4705 854.03876 c
3426.2654 854.03876 3455.283 883.05627 3455.283 918.85126 c
h
S
0 J
3354.179 914.03876 m
3417.1372 914.03876 l
S
3385.658 882.55957 m
3385.658 945.51788 l
S
1 J
4056.7673 1454.2046 m
4056.7673 1489.9995 4027.7498 1519.0171 3991.9548 1519.0171 c
3956.1599 1519.0171 3927.1423 1489.9995 3927.1423 1454.2046 c
3927.1423 1418.4097 3956.1599 1389.3921 3991.9548 1389.3921 c
4027.7498 1389.3921 4056.7673 1418.4097 4056.7673 1454.2046 c
h
S
0 J
3955.6631 1449.3921 m
4018.6213 1449.3921 l
S
1 J
5535.4097 1238.4918 m
5784.7979 1094.5074 l
S
5535.4097 1238.4918 m
5535.4097 1526.4606 l
S
5587.2441 1268.4183 m
5587.2441 1526.4606 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 294.09848 238.16183 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5784.7979 1094.5074 m
5934.4082 1180.8848 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 281.35074 259.85715 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5758.8809 1109.4707 m
5758.8809 924.88824 l
S
5810.7153 1109.4707 m
5810.7153 924.88824 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 250.99382 216.56418 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5535.4097 1526.4606 m
5348.4023 1634.4293 l
S
5868.4438 1025.5665 m
5943.8052 1025.5665 6004.9756 964.39636 6004.9756 889.0351 c
6004.9756 846.02527 5983.3843 803.71564 5948.5571 778.47858 c
S
CM
289.42221 258.37482 m
289.42221 258.37482 295.00009 258.03751 295.00009 258.03751 c
295.00009 258.03751 293.69104 257.37793 293.42786 257.07608 c
293.16467 256.7742 293.00009 255.74356 293.00009 255.74356 c
293.00009 255.74356 289.42221 258.37482 289.42221 258.37482 c
289.42221 258.37482 289.42221 258.37482 289.42221 258.37482 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
6810.6411 1260.5133 m
6471.5688 1260.5133 l
S
CM
348.37534 232.97433 m
348.37534 232.97433 334.84018 229.58804 334.84018 229.58804 c
334.84018 229.58804 336.53207 231.49283 336.53207 232.97433 c
336.53207 234.89334 334.84018 237.36063 334.84018 237.36063 c
334.84018 237.36063 348.37534 232.97433 348.37534 232.97433 c
348.37534 232.97433 348.37534 232.97433 348.37534 232.97433 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 411.72827 244.56747 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 415.46396 230.71227 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8410.1689 1197.1184 m
8426.2393 1256.7218 l
S
8386.3438 1462.8704 m
8258.874 1590.7397 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 421.85938 254.82796 cm
0 7.3681641 m
(%*)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
18.614502 7.3681641 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
26.392822 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
30.563965 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8486.6709 1010.1779 m
8511.9854 984.78387 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 429.60666 227.03207 cm
0 7.1972656 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 9.4970703 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8563.2969 1414.5902 m
8648.6318 1437.313 l
S
7906.8232 1239.7876 m
8109.4458 1036.5311 l
S
7906.8232 1239.7876 m
7629.4868 1165.9397 l
S
7893.5308 1289.7081 m
7645.0161 1223.5348 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 382.0022 258.39099 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8109.4458 1036.5311 m
7998.8066 926.23712 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 401.30972 262.26535 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8109.4458 1036.5311 m
8153.4395 872.34326 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 363.73239 231.62662 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
7629.4868 1165.9397 m
7507.9526 1287.8544 l
S
8289.7578 1084.5437 m
8109.4458 1036.5311 l
S
8398.8408 646.39752 m
8398.8408 682.1925 8369.8232 711.21002 8334.0283 711.21002 c
8298.2334 711.21002 8269.2158 682.1925 8269.2158 646.39752 c
8269.2158 610.6026 8298.2334 581.58502 8334.0283 581.58502 c
8369.8232 581.58502 8398.8408 610.6026 8398.8408 646.39752 c
h
S
0 J
8297.7363 641.58502 m
8360.6953 641.58502 l
S
1 J
8789.6172 1642.4944 m
8789.6172 1678.2893 8760.5996 1707.3069 8724.8047 1707.3069 c
8689.0098 1707.3069 8659.9922 1678.2893 8659.9922 1642.4944 c
8659.9922 1606.6995 8689.0098 1577.6819 8724.8047 1577.6819 c
8760.5996 1577.6819 8789.6172 1606.6995 8789.6172 1642.4944 c
h
S
0 J
8688.5127 1637.6819 m
8751.4707 1637.6819 l
S
8719.9922 1606.2028 m
8719.9922 1669.161 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 408.80286 206.74512 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8280.002 1569.5454 m
8329.9736 1754.8842 l
S
8229.9551 1583.0393 m
8279.9268 1768.3782 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 383.91922 224.35196 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8258.874 1590.7397 m
8088.4697 1545.3654 l
S
8083.9258 833.78107 m
7961.9619 1034.0815 8005.5952 1315.3413 8182.5122 1469.2753 c
S
CM
408.52448 220.05031 m
408.52448 220.05031 403.64008 221.89137 403.64008 221.89137 c
403.64008 221.89137 404.86243 222.27306 405.12561 222.53624 c
405.38879 222.79942 405.64008 223.89137 405.64008 223.89137 c
405.64008 223.89137 408.52448 220.05031 408.52448 220.05031 c
408.52448 220.05031 408.52448 220.05031 408.52448 220.05031 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
8084.7236 1709.517 m
8024.1553 1744.4863 8003.3765 1822.0337 8038.3457 1882.6022 c
8057.2305 1915.3113 8091.3242 1938.665 8128.6465 1944.457 c
S
CM
406.57153 199.55098 m
406.57153 199.55098 402.841 197.48146 402.841 197.48146 c
402.841 197.48146 402.6955 198.46524 402.43231 198.77715 c
402.16913 199.08905 400.841 199.85173 400.841 199.85173 c
400.841 199.85173 406.57153 199.55098 406.57153 199.55098 c
406.57153 199.55098 406.57153 199.55098 406.57153 199.55098 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 231.9323 238.62326 cm
0 7.7001953 m
(+)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
3898.7556 1492.1621 m
4205.9961 1989.4744 4859.0459 2143.7539 5356.3584 1836.5133 c
5563.9751 1708.2471 5724.6401 1506.2328 5802.8809 1275.0719 c
S
CM
287.33444 236.28558 m
287.33444 236.28558 287.13055 230.66937 287.13055 230.66937 c
287.13055 230.66937 286.44843 231.98322 286.14404 232.2464 c
285.83966 232.50958 284.81744 232.66937 284.81744 232.66937 c
284.81744 232.66937 287.33444 236.28558 287.33444 236.28558 c
287.33444 236.28558 287.33444 236.28558 287.33444 236.28558 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
8326.5381 2459.5037 m
8326.5381 2065.1697 l
S
CM
412.32693 161.18155 m
412.32693 161.18155 407.94064 174.71671 407.94064 174.71671 c
407.94064 174.71671 410.40793 173.02481 412.32693 173.02481 c
413.80844 173.02481 415.71323 174.71671 415.71323 174.71671 c
415.71323 174.71671 412.32693 161.18155 412.32693 161.18155 c
412.32693 161.18155 412.32693 161.18155 412.32693 161.18155 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 404.1409 140.84564 cm
0 7.1728516 m
(!)s
1 0 0 -1 418.4657 141.69551 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8329.8066 3179.1929 m
8432.7734 3173.0842 l
S
8555.3369 3254.1011 m
8626.2285 3435.04 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 375.86227 152.03278 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8146.7637 3077.3345 m
8130.6899 3057.7629 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 426.47394 153.79628 cm
0 7.1972656 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 9.4970703 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8598.7256 3047.1345 m
8613.6348 3023.8252 l
S
7983.5962 3686.8237 m
8162.668 3462.5422 l
S
7983.5962 3686.8237 m
7699.8267 3643.8838 l
S
7975.8667 3737.9023 m
7721.5874 3699.4248 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 380.63766 129.10632 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8162.668 3462.5422 m
7950.1191 3430.3792 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 412.33279 119.32462 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8162.668 3462.5422 m
8312.5117 3558.3889 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 368.42688 106.67815 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
7699.8267 3643.8838 m
7585.5879 3786.9639 l
S
8212.8281 3270.0381 m
8162.668 3462.5422 l
S
8766.3877 2733.9197 m
8766.3877 2769.7146 8737.3701 2798.7322 8701.5752 2798.7322 c
8665.7803 2798.7322 8636.7627 2769.7146 8636.7627 2733.9197 c
8636.7627 2698.1248 8665.7803 2669.1072 8701.5752 2669.1072 c
8737.3701 2669.1072 8766.3877 2698.1248 8766.3877 2733.9197 c
h
S
0 J
8665.2842 2729.1072 m
8728.2422 2729.1072 l
S
8696.7627 2697.6282 m
8696.7627 2760.5864 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 437.25735 132.24167 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8626.2285 3435.04 m
8795.1543 3388.5251 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 433.63901 118.35535 cm
0 7.3681641 m
(#")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
8626.2285 3435.04 m
8745.4521 3552.6294 l
S
8497.3428 3540.8904 m
8626.2285 3435.04 l
S
9150.7432 3360.0579 m
9150.7432 3395.853 9121.7256 3424.8704 9085.9307 3424.8704 c
9050.1357 3424.8704 9021.1182 3395.853 9021.1182 3360.0579 c
9021.1182 3324.2629 9050.1357 3295.2454 9085.9307 3295.2454 c
9121.7256 3295.2454 9150.7432 3324.2629 9150.7432 3360.0579 c
h
S
0 J
9049.6396 3355.2454 m
9112.5977 3355.2454 l
S
1 J
8684.8398 3126.2341 m
8689.668 3195.2893 8752.46 3253.8438 8821.6836 3253.8438 c
S
CM
431.1442 143.59621 m
431.1442 143.59621 431.23215 138.13002 431.23215 138.13002 c
431.23215 138.13002 430.52249 139.43762 430.24197 139.68829 c
429.96146 139.93896 428.99405 140.13002 428.99405 140.13002 c
428.99405 140.13002 431.1442 143.59621 431.1442 143.59621 c
431.1442 143.59621 431.1442 143.59621 431.1442 143.59621 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 251.91096 146.53204 cm
0 7.1728516 m
(!)s
1 0 0 -1 266.23578 147.38191 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5285.2075 3065.4648 m
5388.1748 3059.356 l
S
5510.7378 3140.373 m
5581.6299 3321.3118 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 223.63235 157.71918 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5102.165 2963.6064 m
5079.7886 2936.3604 l
S
4938.9976 3573.0959 m
5118.0693 3348.8142 l
S
4938.9976 3573.0959 m
4655.228 3530.1558 l
S
4931.2686 3624.1746 m
4676.9888 3585.6968 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 228.40773 134.79271 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5118.0693 3348.8142 m
4905.52 3316.6514 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 260.10287 125.01102 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5118.0693 3348.8142 m
5267.9131 3444.6609 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 216.19696 112.36455 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
4655.228 3530.1558 m
4550.7412 3661.022 l
S
5168.23 3156.3101 m
5118.0693 3348.8142 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 281.40909 124.04175 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5581.6299 3321.3118 m
5710.8521 3448.7634 l
S
5452.7437 3427.1624 m
5581.6299 3321.3118 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 284.55344 139.35336 cm
0 7.3681641 m
(#)s
1 0 0 -1 279.87274 152.629 cm
0 7.1972656 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 9.4970703 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5581.6299 3321.3118 m
5742.6362 3258.2295 l
S
5808.1514 3112.7344 m
5770.4312 3016.46 l
S
5655.0093 2984.3132 m
5578.9521 3014.1069 l
S
6523.1719 3333.0813 m
7330.3037 3333.0813 l
S
CM
311.31534 129.34595 m
311.31534 129.34595 324.85049 133.73222 324.85049 133.73222 c
324.85049 133.73222 323.1586 131.26494 323.1586 129.34595 c
323.1586 127.86444 324.85049 125.95965 324.85049 125.95965 c
324.85049 125.95965 311.31534 129.34595 311.31534 129.34595 c
311.31534 129.34595 311.31534 129.34595 311.31534 129.34595 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
3104.4502 3333.0813 m
4239.188 3333.0813 l
S
CM
140.37924 129.34595 m
140.37924 129.34595 153.9144 133.73222 153.9144 133.73222 c
153.9144 133.73222 152.2225 131.26494 152.2225 129.34595 c
152.2225 127.86444 153.9144 125.95965 153.9144 125.95965 c
153.9144 125.95965 140.37924 129.34595 140.37924 129.34595 c
140.37924 129.34595 140.37924 129.34595 140.37924 129.34595 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 161.29205 125.55304 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(,&&')[ 3.330078 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
22.231445 10 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
26.402588 7.7001953 m
(-#)[ 5.839844 0.000000 ] xS
1 0 0 -1 88.310158 146.53204 cm
0 7.1728516 m
(!)s
1 0 0 -1 102.63497 147.38191 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
2013.1915 3065.4648 m
2116.1587 3059.356 l
S
2238.7219 3140.373 m
2309.6138 3321.3118 l
S
2190.6218 3159.2185 m
2247.8218 3305.2109 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 60.031548 157.71918 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1830.1488 2963.6064 m
1814.0753 2944.0349 l
S
1666.9813 3573.0959 m
1846.053 3348.8142 l
S
1666.9813 3573.0959 m
1383.2118 3530.1558 l
S
1659.2521 3624.1746 m
1404.9728 3585.6968 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 64.806923 134.79271 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1846.053 3348.8142 m
1633.5039 3316.6514 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 96.502052 125.01102 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1846.053 3348.8142 m
1995.8971 3444.6609 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 52.596153 112.36455 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1383.2118 3530.1558 m
1286.5112 3651.2703 l
S
1896.2136 3156.3101 m
1846.053 3348.8142 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 117.80827 124.04175 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
2309.6138 3321.3118 m
2428.8369 3438.9014 l
S
2180.7278 3427.1624 m
2309.6138 3321.3118 l
S
2136.9512 3296.0098 m
2075.8376 3276.1528 2004.696 3293.2324 1959.2584 3338.6702 c
S
CM
106.32832 129.0665 m
106.32832 129.0665 101.3503 130.50423 101.3503 130.50423 c
101.3503 130.50423 102.59241 130.94437 102.84756 131.19951 c
103.10271 131.45465 103.3503 132.50423 103.3503 132.50423 c
103.3503 132.50423 106.32832 129.0665 106.32832 129.0665 c
106.32832 129.0665 106.32832 129.0665 106.32832 129.0665 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
2353.0356 3261.7686 m
2410.1885 3218.3281 2425.5015 3130.7227 2386.4739 3070.4702 c
S
CM
112.09391 145.17844 m
112.09391 145.17844 116.7851 143.0905 116.7851 143.0905 c
116.7851 143.0905 115.58688 142.73967 115.32369 142.47649 c
115.06051 142.2133 114.7851 141.0905 114.7851 141.0905 c
114.7851 141.0905 112.09391 145.17844 112.09391 145.17844 c
112.09391 145.17844 112.09391 145.17844 112.09391 145.17844 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
1813.2457 3049.167 m
1758.0378 3081.0413 1733.0531 3155.0032 1757.6228 3213.8267 c
S
CM
86.662285 132.14684 m
86.662285 132.14684 82.483833 134.76036 82.483833 134.76036 c
82.483833 134.76036 83.617958 135.04549 83.881142 135.30867 c
84.144325 135.57185 84.483833 136.76036 84.483833 136.76036 c
84.483833 136.76036 86.662285 132.14684 86.662285 132.14684 c
86.662285 132.14684 86.662285 132.14684 86.662285 132.14684 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 92.949516 61.877541 cm
0 7.1728516 m
(!)s
1 0 0 -1 107.29228 62.332981 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
2106.1763 4761.1621 m
2209.1223 4757.8931 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 114.06924 75.079559 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
2365.4292 4629.3315 m
2381.1819 4599.9302 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 66.212563 74.168678 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1937.3849 4645.2017 m
1918.1475 4614.1978 l
S
2026.984 5261.0259 m
1875.6678 5017.1562 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 66.133369 48.773178 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1875.6678 5017.1562 m
1660.8074 5023.979 l
S
1963.2766 4853.6377 m
1875.6678 5017.1562 l
S
2008.8127 4878.0352 m
1935.2896 5015.2632 l
S
2455.3611 4908.0122 m
2455.3611 4943.8071 2426.3435 4972.8247 2390.5486 4972.8247 c
2354.7537 4972.8247 2325.7361 4943.8071 2325.7361 4908.0122 c
2325.7361 4872.2173 2354.7537 4843.1997 2390.5486 4843.1997 c
2426.3435 4843.1997 2455.3611 4872.2173 2455.3611 4908.0122 c
h
S
0 J
2354.2568 4903.1997 m
2417.2153 4903.1997 l
S
1 J
2151.4075 4544.8491 m
2151.4075 4580.644 2122.3901 4609.6616 2086.595 4609.6616 c
2050.8 4609.6616 2021.7826 4580.644 2021.7826 4544.8491 c
2021.7826 4509.0542 2050.8 4480.0366 2086.595 4480.0366 c
2122.3901 4480.0366 2151.4075 4509.0542 2151.4075 4544.8491 c
h
S
0 J
2050.3035 4540.0366 m
2113.2617 4540.0366 l
S
2081.7825 4508.5576 m
2081.7825 4571.5156 l
S
1 J
1946.8087 4091.0378 m
1946.8087 3770.282 l
S
CM
93.340431 79.604843 m
93.340431 79.604843 88.954147 93.139999 88.954147 93.139999 c
88.954147 93.139999 91.421432 91.448105 93.340431 91.448105 c
94.821938 91.448105 96.726723 93.139999 96.726723 93.139999 c
96.726723 93.139999 93.340431 79.604843 93.340431 79.604843 c
93.340431 79.604843 93.340431 79.604843 93.340431 79.604843 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
4579.4087 5161.4736 m
3195.2627 5161.4736 l
S
CM
236.81369 37.926311 m
236.81369 37.926311 223.27853 34.540024 223.27853 34.540024 c
223.27853 34.540024 224.97043 36.444813 224.97043 37.926311 c
224.97043 39.845314 223.27853 42.312603 223.27853 42.312603 c
223.27853 42.312603 236.81369 37.926311 236.81369 37.926311 c
236.81369 37.926311 236.81369 37.926311 236.81369 37.926311 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
2026.984 5261.0259 m
1890.9872 5514.8584 l
S
2072.6738 5285.5054 m
1950.8103 5512.9585 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 94.529869 12.108871 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
1890.9872 5514.8584 m
1978.6035 5656.0654 l
S
2093.2642 5624.7173 m
2336.0017 5713.0664 2604.7424 5587.7505 2693.0916 5345.0127 c
2768.0718 5139.0068 2677.1765 4889.2744 2487.3203 4779.6606 c
S
CM
96.96656 16.487919 m
96.96656 16.487919 102.19129 15.576577 102.19129 15.576577 c
102.19129 15.576577 100.91813 15.034032 100.6632 14.764147 c
100.40828 14.494263 100.19129 13.45921 100.19129 13.45921 c
100.19129 13.45921 96.96656 16.487919 96.96656 16.487919 c
96.96656 16.487919 96.96656 16.487919 96.96656 16.487919 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
1845.9365 5210.9131 m
1792.7358 5238.7979 1772.187 5304.6143 1800.0717 5357.8149 c
1813.8962 5384.1904 1838.9501 5404.3623 1867.6685 5412.2402 c
S
CM
92.262062 35.882374 m
92.262062 35.882374 88.730362 34.257778 88.730362 34.257778 c
88.730362 34.257778 88.546089 35.171326 88.296822 35.45435 c
88.047554 35.737373 86.730362 36.528629 86.730362 36.528629 c
86.730362 36.528629 92.262062 35.882374 92.262062 35.882374 c
92.262062 35.882374 92.262062 35.882374 92.262062 35.882374 c
h
f
0.050000001 0 0 -0.050000001 -4 296 cm
1996.6753 5035.6553 m
2045.472 5076.1631 2117.9597 5069.4346 2158.467 5020.6377 c
2178.55 4996.4453 2188.0229 4963.832 2184.0261 4932.6455 c
S
CM
103.17248 53.057697 m
103.17248 53.057697 106.54792 49.840599 106.54792 49.840599 c
106.54792 49.840599 105.47943 49.63092 105.20131 49.367737 c
104.92318 49.104553 104.43436 47.840599 104.43436 47.840599 c
104.43436 47.840599 103.17248 53.057697 103.17248 53.057697 c
103.17248 53.057697 103.17248 53.057697 103.17248 53.057697 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 307.35367 47.449413 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 293.02625 46.644783 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
6210.5063 5057.7266 m
6107.542 5063.5088 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 264.78271 57.860619 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5924.7827 4961.0396 m
5902.5957 4933.8491 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 315.12418 59.611149 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
6376.8716 4932.2915 m
6394.4307 4905.0298 l
S
6180.7803 5501.7393 m
6403.1436 5320.291 l
S
6177.1997 5437.9844 m
6341.4028 5303.9951 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 326.42117 30.4097 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
6403.1436 5320.291 m
6585.8257 5368.5088 l
S
6332.7979 5139.063 m
6403.1436 5320.291 l
S
6180.7803 5501.7393 m
5939.4985 5346.3296 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 270.29013 27.577282 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -4 296 cm
5939.4985 5346.3296 m
5739.0977 5424.1177 l
S
5990.2476 5154.0566 m
5939.4985 5346.3296 l
S
ep
end
%%Trailer
%%EOF
