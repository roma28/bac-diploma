%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: literature.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-06-06 05:54:59 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 322 105
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 322 105
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: VUNGKE+Helvetica
%!FontType1-1.0: VUNGKE+Helvetica 1.0000.0.0000
14 dict begin/FontName /VUNGKE+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /C put
dup 35 /O put
dup 36 /two put
dup 37 /R put
dup 38 /one put
dup 39 /H put
dup 40 /P put
dup 41 /h put
dup 42 /three put
dup 43 /plus put
dup 44 /space put
dup 45 /E put
dup 46 /t put
dup 47 /comma put
dup 48 /i put
dup 49 /r put
dup 50 /B put
dup 51 /u put
dup 52 /four put
dup 53 /hyphen put
dup 54 /M put
dup 55 /e put
dup 56 /l put
dup 57 /efcyrillic put
dup 58 /ucyrillic put
dup 59 /ercyrillic put
dup 60 /iicyrillic put
dup 61 /elcyrillic put
dup 62 /encyrillic put
dup 63 /acyrillic put
dup 64 /tecyrillic put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<











4B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/comma 3 def
/hyphen 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/B 9 def
/C 10 def
/E 11 def
/H 12 def
/M 13 def
/N 14 def
/O 15 def
/P 16 def
/R 17 def
/e 18 def
/h 19 def
/i 20 def
/l 21 def
/r 22 def
/t 23 def
/u 24 def
/acyrillic 25 def
/iicyrillic 26 def
/elcyrillic 27 def
/encyrillic 28 def
/ercyrillic 29 def
/tecyrillic 30 def
/ucyrillic 31 def
/efcyrillic 32 def
/u20B8 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec


FE51E2D1E40536C857BC38999FBD8E827C2D32CFDF229B0619B274EDB7DD3C8F15778DDED6D3B39CE77C11799567BD9127A92D69B5B241F3AFA158D4F6324EBAE0C0FBD04208EE5FC1E1D583738C5308B64A4FD85C815A6CED54EF9EF8A361F41F9EF005F80FD94433873D2640D2569E71B8E090CDFB10089CBA72B6D231C02F8FAE7227FB20B34474F9114A1FB2053FEBA1E4B8919E264DE2B598F3D56500094DC5DDBCD22431E7AC55EC4752D16AC6DA9F63C245F6EADE528F8599BCCD86AAC6BB318E8FE760E527FD57DF8E547913B39C466A963AC86B8F77FDAA5D5AFB3DA68CF57BF2C972B5E6A20EF09A72D9856BD3B2619466C9423FBC4010457D7FFA0BEF652B9E18042852C7D333DBEDF262C2FA9E41548071EDC1AC0D9CF60ABB7E9866E9B9BB64C3E865AA483AF8B7ABBF399B4B5A92316CC9749867929B32D30DFF033F90D15F621CC9AE78D10257FE8C2BEBB82ED9E1070B709BCA4057FBAA4EFC597894D5C90F42437C2506C8AA0F74E3E31A1504CB07C4EDCF11D94F4904022B3C5F03D10D3B909574AC38EF4B8E1C15207EE3B654111D0DDAA75611E24625B04487DD7CDA031AF941E9EA2AC9CEB800F5C3C5F311490627C9F4AA1EEDB259E23E01E4F1C2DA313EBBAC25578B05B4B31FB52949C8A422D9FF07AB09FF35E58A7CE8ED8442198646F471B67829381760530360ECC4CDC36C075D37A042875BF41B10AA6DB5AB19EE1F23B8935D8262650E3EE3BAEE583A2AF5B9285EB77BF4E8415F77901995B008F870A7887407F607CA94D2AB919C46BCDD55BAF9998EA72902602949BFDAB2F0FD731A8B1A93343CAA10758AA34ADD46FEA0F18CCE183954AE04F6BA4681A30DC9DA238D4C7676EC60111E85B6730722582E3A8D47D660FE94FB15E21D0AB99F5709318EF022C3487D085C1E07CA535B38284C6B6F2C30672E3F0CB860FB532BE07F42520D76828247BA778EC614941C6ED881F4698D7474B69DF43C4324A349E9EBC0337E5F9BFCFA69B86430210A32A71DDD606E0CF7CAE2C8F30B55A7BC82AB18786B01E95DCA199A82612ABB3A1E4E0CC34C085858C6E9A36EE5435FD2882E46EF7C8F1466590EFA284E8B3A9DCBECBA05D428F4733B18021C8F90C13B144A19701077F45DB590F3B09E3868E67A6DBED22250435BDBAE92AFD8E91CA7666C8E621902C62662FF5AF16BD6C28460923532113EDA1F1A438A99C89589B9827272B5CB8DAADD1D6E290928B3D6A7F885AFE45B9E7C912690F73864B976389E77FEC020D57CC66387B050A32F2BAD6CB3ACB8128BFA16479A70072FF46EAA03E951A1416F511C9738C98711482B02BD4133BEAB3B4297487CD809B14B23EF878047876EE9925EAC847D301A20D1B8C0D02C1D3E4E9898905BBC100D878D38DF1651526EF7D5E3AAF145B5CAA383CB4516407309C24A45
F4488068B13F58C8E43574212D387024518C4BEF9F5E03E928A724A15DD831359656E1116C497744B4114492BD26C2CC502D02B0088E84050D51A2D80EC4D95A052234F2C3110BFEC21D9663F348C67EEB78DB3D1B5C9C038FFB1B067483C285C698472E584306AFB9AB0BD7162EEBB348A65AF725CCD29804D29B596FF0F59822622411850BAE62646B9A7EBB043A583096ABB95D936EC0AB18D08A4771200334B239254A41A346FB7E9A61A64549BDFC0A29185CE94696507A8C0F6D6479CA2737794169106B7B82AC9889A7342C0344D399202784E67300B6AFEF69DEFA946CE4C3104517CBA45256239ADFE03887CEC69CF6430FDA91596ACE08F9E4E8A5147A27B251707DC9E1E3727147B41F4584DD44715CC061C0F97A785F7715E2FF13ED12FEC9F79A238519EA7B4F932006E9C79F40A20FDD38A689E03C6D74EA148BE940964F5693C44686C73E97899AD068B18AEC10A986692F8BEA2D73E843CE3098DAB583B530400AE574906D5979CDB5679EFDF8148DC12904789E170F820C18EAC80266AEFB47F566AD8C182531031ECC3DBB803013CD3EF43A7490CFBE26C2F2378E1CFB26A30336C6E4E0AE112B69A862774C3D4EF487F761786C5E2E9E3819380DA711F95F816C641EB37A69E21148E69BC54F792EAD93862BDE4E493E746DE25A6A791D462FCF77B893769609130D20DD029384D2C71383916D9B19CC011A1380EDBD56AC69C52D58EAA201A67EECF4016C7A5ECB5171CF04C8E6C6B45D8258200083206C42834D676B812414D55A8A078BB42A215AFC047AD4318066522F0BD1FDD7E764C5807EB834C605DF06770FDC103BFD347823D270542C06001D48C6747D728D7D5B720D6459269C623487CD24DD2E1BF1667790AE031D4A68F6F7D39B4E4015D2432995911B78DFA92245B9748CC925D1E61DEC5944F731EAB7352A3CFC4AC1C8FF3A413810BE648E51D4CC82BB7E339E514246290CA2B60B4E9601978D02633A819B25038A15DFD5D6C492D52813EE7263118925E49786F941436793D741E4E2F5F2274B2874B03FB3721059F00981F5303113232E1A7694C73E5640CA7043E835EFCDE6A816B10806237B17C082573DCAE7B39DF5E86272A29D048F1B33927709585879912F2CB96DA33AA36D2FF5D470F6932245F8DC6F641300B72C32F75D17C3CDFC1942094BADF52E6C906D6BE95C2E069192A10D8C3EDBA125513B88D408EF3C75EB4E4B37B0A8A44EAB3A459319F874FDA1F34F626625264A9D7987D3096D86A210A36E521C0CA6AE09D1C5F7B1114156A5E0CCC6597CF472E94F5CAF0D792A4D973EF9FB6695F1ECC6D5ECCC684395C44E09032D36ADB5A62CCD44D206C7E09201B09DD36FEF54FEF0EA3480D3713A78317721561A515CAB74B12A92321AE9BEA5E107A0477541C6B54F90769B447DD78D8933A4

E843FEC218366644B69E0AB350F340525C63852D067172C9B1A468781D4467ACD2A05374D3886DD07151667C1817256DF288E00AE5B42646E06A4B83532CB6020EC7EB7DFFFADACFDA2278F8B590998A56649C3CF11379AEFA4F6F03A7E4C9262911A6A8360EAA543EA9AC5AF65BF3DB89E24C25AFF12329619491D9BAAA568BA6E4F6280242
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/VUNGKE+Helvetica cguidfix
/F1.1/VUNGKE+Helvetica renmfont
%RBIBeginFontSubset: UXKFTT+Helvetica-Bold
%!FontType1-1.0: UXKFTT+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /UXKFTT+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /space put
dup 35 /equal put
dup 36 /one put
dup 37 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/equal 4 def
/R 5 def
/u20B8 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4037662 def
currentdict currentfile eexec

3DB746E1FA1BB443120A8932B331311844358388658913775E5D40186F37AC68CD7C98C64B2014640EA3D50EEEC996703AE491C41F4B023F2AFFD1EA1940C57F09EFAE344D94D2AD715B7FCA17FC747F7D33366EF1EFBA3D3AE72FF5712D1AE135078B67B0194E5C2CE094ADB7A5B5D90368ECB1EFBE7339CCFB9805B6A4E959D2CF52045A39B7FCBEB7649EF176963A324889DD3DE22E4CC4AE5E397F400E4750073F2576AC9A18CA57D28912477D2A82FF7E7704B1FE8D98DBC120D7BEA4463989E2C45F108CB50B3A7FE58CEAD8B186DEA7BF06F70D5D7A234957FBF446D80918BE37D632497BBC043FFD619C108077A536356507710A3260DB101ECB9462
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/UXKFTT+Helvetica-Bold cguidfix
/F2.1/UXKFTT+Helvetica-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 105 m
322 105 l
322 0 l
0 0 l
h
0 105 m
W
0 0 322 105 rc
-1 105 m
323 105 l
323 -1 l
-1 -1 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 33.28537 69.148926 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 45.71283 76.323929 cm
0 7.1728516 m
(!)s
20 w
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
1860.3263 2031.175 m
1911.4343 2001.6678 l
S
1834.4963 1986.4362 m
1885.6042 1956.929 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 58.140289 69.246582 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
2116.0388 1986.9606 m
2176.467 2021.8489 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.6867523 76.421585 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
1661.3882 2011.4679 m
1614.9646 1984.6653 l
S
3850.2173 2078.7502 m
4137.2173 2078.7502 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 158.42502 56.721451 cm
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
4137.2173 2078.7502 m
4219.9824 2222.104 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 158.1467 81.674026 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
4107.3911 2078.7502 m
4197.4624 1922.7424 l
S
4152.1299 2104.5803 m
4242.2012 1948.5724 l
S
3850.2173 2078.7502 m
3601.668 2222.2505 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 117.29756 49.546448 cm
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
3601.668 2222.2505 m
3511.5835 2378.2815 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 117.25089 76.323914 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
('!)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
3601.668 2222.2505 m
3601.668 2015.553 l
S
3679.6143 1980.2526 m
3850.2173 2078.7502 l
S
5494.9839 2029.9982 m
4718.1001 2029.9982 l
S
CM
234.59396 67.500092 m
234.59396 67.500092 221.05881 64.110794 221.05881 64.110794 c
221.05881 64.110794 222.74919 66.017082 222.74919 67.500092 c
222.74919 69.420654 221.05881 71.889389 221.05881 71.889389 c
221.05881 71.889389 234.59396 67.500092 234.59396 67.500092 c
234.59396 67.500092 234.59396 67.500092 234.59396 67.500092 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 197.44894 81.742523 cm
0 7.7001953 m
(\(\(\))[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 10 m
(*)s
1 0 0 -1 281.54214 77.777161 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 285.97653 91.42482 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
7207.4355 1906.1853 m
6975.2476 2074.8799 l
S
6975.2476 2074.8799 m
6829.5938 1969.0562 l
S
6778.146 1798.2002 m
6796.3433 1742.1945 l
S
6906.7964 1633.2322 m
7118.7471 1633.2322 l
S
6906.7964 1684.8921 m
7081.2144 1684.8921 l
S
7118.7471 1633.2322 m
7207.4355 1906.1853 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 248.72333 73.44043 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
6628.7783 1943.3175 m
6572.3701 1961.6455 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 308.76123 103.03423 cm
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
7118.7471 1633.2322 m
7217.272 1497.6244 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 285.97653 56.914978 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
6975.2476 2074.8799 m
6890.1626 2222.2507 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 300.32654 56.914978 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!')[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
6975.2476 2074.8799 m
7052.4268 2208.5583 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 273.98041 44.585175 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -52 169 cm
7053.9238 2435.7068 m
7033.6528 2470.8171 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 98.096588 73.149017 cm
0 7.7001953 m
(+)s
1 0 0 -1 1.8074951 39.884567 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!"#)[ 7.221680 2.778320 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
15.839844 7.7001953 m
(,-./,0\(1/,.23)[ 2.778320 6.669922 2.778320 2.778320 2.778320 2.221680 6.669922 2.783203 2.778320 2.778320 2.778320 6.669922 0.000000 ] xS
1 0 0 -1 1.8074951 26.774673 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 10 m
($)s
/F2.1[ 10 0 0 -10 0 0]sf
11.392822 7.7001953 m
("#")[ 2.778320 5.839844 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
22.789307 7.7001953 m
(\(\)/,*/45675\(\)/,45"85\(\)/,$59:;<=/,45!#)[ 6.669922 5.561523 2.778320 2.778320 5.561523 2.778320 5.561523 3.330078 8.330078 5.561523 3.330078 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 7.221680 2.221680 3.330078 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 8.320312 5.000000 5.561523 5.834961 5.742188 2.778320 2.778320 5.561523 3.330078 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
201.07056 10 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
205.2417 7.7001953 m
(5\(\)/,$5>?9@<=)[ 3.330078 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 5.561523 5.561523 8.320312 5.000000 5.834961 0.000000 ] xS
1 0 0 -1 2.4661865 12.790787 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 10 m
(%)s
/F2.1[ 10 0 0 -10 0 0]sf
11.392822 7.7001953 m
("#")[ 2.778320 5.839844 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
22.789307 7.7001953 m
(\(\)/,45#675\(\)/,$5"85\(\)/,*5!#)[ 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 7.778320 8.330078 5.561523 3.330078 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 7.221680 2.221680 3.330078 6.669922 5.561523 2.778320 2.778320 5.561523 3.330078 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
155.60181 10 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
159.77295 7.7001953 m
(5\(\))[ 3.330078 6.669922 0.000000 ] xS
ep
end
%%Trailer
%%EOF
