%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: propargyl.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-02-23 08:09:54 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 398 128
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 398 128
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YIQIPN+Helvetica
%!FontType1-1.0: YIQIPN+Helvetica 1.0000.0.0000
14 dict begin/FontName /YIQIPN+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /H put
dup 35 /N put
dup 36 /two put
dup 37 /R put
dup 38 /three put
dup 39 /one put
dup 40 /t put
dup 41 /B put
dup 42 /u put
dup 43 /K put
dup 44 /P put
dup 45 /h put
dup 46 /comma put
dup 47 /space put
dup 48 /zero put
dup 49 /centigrade put
dup 50 /plus put
dup 51 /four put
dup 52 /hyphen put
dup 53 /F put
dup 54 /M put
dup 55 /e put
dup 56 /r put
dup 57 /C put
dup 58 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 29 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/comma 3 def
/hyphen 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/B 10 def
/C 11 def
/F 12 def
/H 13 def
/K 14 def
/M 15 def
/N 16 def
/O 17 def
/P 18 def
/R 19 def
/e 20 def
/h 21 def
/l 22 def
/r 23 def
/t 24 def
/u 25 def
/degree 26 def
/centigrade 27 def
/u20B8 28 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CA0D4AC2B500B5F84FFACDDD353C3D72BD106B344E464E33B298A5A7AAD590E0FB0EA5D485981DEF2D379083A7DB44418D804A5E2DC9773C3583CCEA43F53132EFA0B3890C5BC9EB103151E6CA0382A9C70BCB7D443DC5FC049620F39D3A21546CCDFF36285DD3058FB78F96C8528C6E0D919B4FC9BBF1F4E435A588C3DEDDE789D4688EBFC49AD6995251FEE8E00F7BDEF40E40A0051081A853E8AD3377FD231242F6E5569A88524CFE235F9625321D1C64E5323AEBB5033DB89D7C6D70161F01AE74CBD0311E294FD0DD8F458DC27B6AF30F54EC45D66E5E9F173C37A445F4542452D5F88276CF035DEA5B7DB5F88A4526AC894E05735F79EFC4C9CD64D890076F1094AB20A84970C638993A21EFF73CEF03362137FC7E34B22C7B46076FDB42D148257AFCFA7C52F0AC5146133A2D8743FCD9010B149239368A86020E62BF0BC3751D54A2FCCBFE82EC6139F3E3CD614FD5E34CB605485BCA2AAB71B15E442EB5F090C85A549DE731BB6380B754400E199661A7A1CBC068B1B7B069A990EFB30256C7FD60E84DD7F282F4E3579288B0A886E91A1909E2CBBE2AA6929C7DB8EF3A5C0ED1D2498AF3A9D30B470A6B8EA77140CA3F62C227740C5BE5F105326B5C5F47E9590483A72688A1A41FCD8D447DDF368A410C00646FA728F53288DB9C7CE3CBEDBDA8F94171D02A1C364A18923650DC2752DC67D1D2F9508AF46FD96F8E3E8FF70B16C9C51500DF4CEB24E15408E51F821EC7CD0AAAE92E35563CBB5090392E4561AC49AD1FC346FD527B040EA8A548E
79E4D1FBA607AE6B495FFC3F69337F1EED95B8E45A32CE7A77BE5D26217E72968E8A0824E9A3A56C6209943BF6FFAEAC5452F87FAB2C7E35F6958AC20CE0DC16555E119F02DD11E15D13366CD4639D247B5DD2B7C67A47FB80A5C19D4A01742FE6BF8F46BDCB375EFFA63DC06A8AAC4A747134EC8A32B3C25DFA64627BF99EB15B382A773DCF39B8FD915CC18C5B3F546C9A6101FD24B34214607094777ECAE4E3A03DB592251D2B07C9358E04312ABCEEDDF41A9E1B00B78E77C8CD9BADB06AC078B3AA42FA6881069725E8146F0A306A3DAD4FFA902990232F9ED492F1D9610BC24FA190BA98836CABEB5DA0774F35C0AB73F19AC50473BCBA01BBBA7D9E44A04358648D6A05C27A87BF2C96E1C70E06FA08D386D219E067688D5B48D49491CB933B99DC4E5101CF0785EF6B471693F2B7B683CC18D1F579B5C713857E40271871E1AB7D78177F6061DCD63A423CB1C44BACFD8A09D529C1356E3D4707EDFCB446757941E7E6DAA6DD51DBB13D4AB77EC8574985AA229451AD9F4D7F9E07C92EB5B026A0FFF3EE1C78AE17BE2FBE86C63020F3F3BCA0C4DF7347E8BAC8E5935E4F4AD1D2AB572E48FC445D0D33B0F603D4F623B7C04FF615FAFC24BE9067F19A09A543F26D895957266F43A2C6973671E52C09BF1E1992879EF35EF1E8963C74D9A2E853FCFE52838CE4E83A946E7CF0199CCDDAF3111DE34EE49399B6905FF635FC66C205077B3EA1DC26001D74474F18950AADDCD8E5CA05F958C69BF833D03C49486F361E0F6D7F7056DA7F018C16DC74E7C05981A7AF6A0498E7A234C5482C30CCB632CB55F1C4B5916541F517B27CEF6A88FC9E3DCAF7700078316BE6C91783B23083ADB1BE63FC46CB92382F971FD487CFC829008DC5A44E145EE531C08E5037B323D26A4170CE821479ABEC1B8C1B17F7FB3DDAE26A294669FBEE0118C2919E9E3815398361141C4848A666CB238CB102EBE59AA2F9C21342537DD257032EEF1853AD6EF71FD115D07AA8BA9D07CE266729541C1FC5AC0D82D0B7E43CEF9F0DC7270D2AC5FAF92F3F1BA07E73E8AE91D77D7FEBE3831C448513CBD51645AB998EFA0192F37DEF6E333B235C4EE18D73DC65AFC816C309325315B03E89959CCF6A7D12A10641E82D301D3B530447C75103ECF713E132966733BFC6A1F5B86A41A42115A021774432D67F40AF8CB890196331D12922FB8F85A944F1FCD174FBEB75A8FDE0FD97C3D61F010FE5CD37D2043A43A2FCC68C29E4BB6674445E95F17C8CAD07EAE55D4B8E9300F83F2890B5D798AA3F73D2160B774F28A5C3D1CF73CCECA6A78820F4F7BF7B79B7EBCCC27FA8979CADF2BFDC0F6C1518BC3F2E901BDEAB9C00AB3B06DB8F375104163179EAD208E0E6F51BC38937E44CD587551ECE7081EF67DD6352364C16FF3A39F706ED30BF782CE3A478E0EB21AEE01A
5A7A043C04F569D17CBCFC33F694F4DE1448F17F3F450585254154F2CF8255CA2BBF420B793A4CB21D2CFA11FEA680CCA3005ACAF482E6A62722A9423C37F2ED0B2155EA94E64A85F2E898D4A756BCA19BA4A54DAD485E4C49A943776E0180EF37388628A2C3EE28115B2D758918B2BE1772787CDD88386EE8DDBBA8B09D666DEA6E729A227122711722DA3DE7CAC76CE2033BCECDD107E1276D0747DE5BCFD49C1657BF8146686CB3D01FC283C66BE6CF4C5D0BEA61D8A82839E7A40AE7522D0315D171C2F3A06536327C84B64DF67E5A0EF90F50DB8587D91E62856724D5A093AA3A647DB21B29E861C9C6437657F2BC655C5B3A0D2358AAA1FFCE363833C67D36192883079B5BE2BEB256FCCD5B62783978519135C43E7F296719BB10232366DA1C0F97F593BE602193B34B8BC42C96AF1CDE23184B3A3072D100767D164227F3B2654C077204C72E259A5A1838451A22763198E0E29BB6D64242942BA6708025C4EF93D175D8AC6E4D05D5087AF6A931B2FAC1FE59D02D6A5A8D7FBF3269EC8C0F2A40EEA6C17E27CFEA2E9E0DC81DEC6AA4D3AF8C88B52F4A65D15C2D496EDC1E1B816D95FF2DCB867D6332BEEE4139686DAAB6FCF308030214DAF3E05C2E22E589509246726A82CE0D2F95CDAE3DE926BD45A94952AE946F1E56C946E15A1AB11422763D574F7FE7CF4A7A3DF2BAE67967639D7452BED9B4A62681C3F40D613D25B6517A7798CB72BF3EB9770E4F74AE3B1C1008B2FBF80C2CC82A4EC8A48E69EE078EBA7CD5F83B5ABDCD88F89FB3B07EEC765CAD71242D30AAA840D514850F11848176987CCA2E75243818E8E40D727E481FE31DEFE7B686A82FAE87D241D08E3ECACE279261F0285647372D44F925C2241DA5017B93D08F905D6AA8768517BFCC808C33E06517BE68A7072974481F6DBBD85135DC1508A9334BE107CCC27589A32AB1FEEBF7367685755514E9F2734AC3F6284C92777939C74ED59CE04F1DFE95CB019F31826F55A3F86A955FEF0A5786A760621E595314F87AE9B2F52FD395CCEEADE407ACE327D3F39B261B9A7878815CD2795CBC554A1586AEE9B2CB8FA38CE6F6BA89D0FD050E744516F63D7019A0527DFBFD56FEE58579AAFDB2441F6714E818027654DCB48250CDA9CDD85FBE35F00F6955C6EFE77FA963A4C6D12BC8019FB5752DE71DFE992BC47BE5DC51D51C944410557CB50B9F8AF09AC2EA8797EFF0DB7128698F854537368FCFA9A54731660B17BC42530700E4C8E0E4B0AA10BC117956692AE33D5D6BA7CB56731E36085647B813626F8CFCB16596AA261D1CC2BD2913B01DC21F24880311621DB79843555821A2AB49528CF08D49F650141BB653A908F82F1F5DBC165563A2B3BD57990F1A777E913B2E1A0D8889719CF5DE418BEBCD62385444F90768722E146898D10A976D63A2418F690199C6

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YIQIPN+Helvetica cguidfix
/F1.1/YIQIPN+Helvetica renmfont
%RBIBeginFontSubset: EFXRFY+Helvetica-Bold
%!FontType1-1.0: EFXRFY+Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /EFXRFY+Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /one put
dup 35 /space put
dup 36 /equal put
dup 37 /two put
dup 38 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<






B25240524523614459B35045484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/equal 5 def
/R 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4037662 def
currentdict currentfile eexec

B19C4766618FAEF163669857AE8C4E5F48E9B3F1B8554B39C3B5C2193F3AAEDCEBBF5D8BD56205C490B7F49161CA15A390EB58D14394C8B9F31B62CE9FF97BE35D5AF8A70910C5CA480D5826EDCD8195D405251C2E98054135B6E99C40CBDE7693DFCC260B8DC62F66A89223ED6E52636C3B5DF266EBD7D1390D008E73C962A500655A83673F12B21B509F6AB194AF3E4DE87D45239E8500FEB708160133D8146E9426844FCFCD659D8BD8991E872B1FA7E893796B68DAC5F1D2E1377B3E5E83808100A862CA9CDAFBCEE8AA98C46A186526BAC441D36DDBF0DD7D29899CF97D5E8E6D91ACC6E1E65BAB03A5B15753DE005FAE289C0F5A65C55080256B2FCABF56898977E5970F147E525DEC7927D2B6DE2DB6ACF5FDC7B872714670623F0CAABF8DB17F8C1C6FFD39896844536C9531231EA9822CC40E7D37CE6542FDAD003BE8C01A1A2BBB045B6FCE304DA3ADC5AE7567999B3850FD43B9077BB8C93AB04B572DE5442509402AF999E2B03F17215C716F755218E6C986D86A8A06C1103C9F0580FB323EB48F6C831AFC8B9229DAB2905B114C62656FCC468F8947A40D4DA15F412C18AEA77E16D0E392C02A1CBA1285A539810FB1A657DEC6ABFA53D908C1EAD63975904A0A5D1C6A329CB45D2B53FF2C35395AB45B50417677EF28612A0A519F1EC26F58EBCEDFCC1C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/EFXRFY+Helvetica-Bold cguidfix
/F2.1/EFXRFY+Helvetica-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 128 m
398 128 l
398 0 l
0 0 l
h
0 128 m
W
0 0 398 128 rc
-1 128 m
399 128 l
399 -1 l
-1 -1 l
h
f
20 w
1 J
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
1475.9452 833.30859 m
1763.9139 833.46429 l
S
1475.9172 885.14294 m
1187.9485 884.9873 l
S
1475.9452 833.30859 m
1187.9766 833.15289 l
S
1475.9733 781.47424 m
1188.0045 781.31854 l
S
1187.9766 833.15289 m
900.00781 832.99719 l
S
1763.9139 833.46429 m
1907.7634 1082.9303 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 79.512497 116.97639 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(!")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
1763.9139 833.46429 m
1850.7518 683.24426 l
S
3029.4951 1292.1604 m
3029.4951 1580.1292 l
S
3081.3296 1322.087 m
3081.3296 1550.2026 l
S
3029.4951 1580.1292 m
3278.8835 1724.1135 l
S
3278.8835 1724.1135 m
3528.2717 1580.1292 l
S
3278.8835 1664.2604 m
3476.4373 1550.2026 l
S
3528.2717 1398.0979 m
3528.2717 1292.1604 l
S
3528.2717 1580.1292 m
3528.2717 1474.1917 l
S
3528.2717 1292.1604 m
3278.8835 1148.176 l
S
3476.4373 1322.087 m
3278.8835 1208.0292 l
S
3278.8835 1148.176 m
3029.4951 1292.1604 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 141.11165 103.07606 cm
0 7.1728516 m
("#)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
3278.8835 1148.176 m
3278.8835 960.51001 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 160.80275 110.27528 cm
0 7.1728516 m
(#")[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
3381.9868 800.68048 m
3436.8928 768.98053 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 171.93489 74.279182 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
3278.8835 1436.1448 m
3664.2449 1436.1448 l
S
1907.7634 1082.9303 m
1763.9218 1332.4009 l
S
1937.6813 1134.8142 m
1823.7174 1332.4666 l
S
1763.9218 1332.4009 m
1906.9388 1581.705 l
S
2089.3816 1582.0066 m
2194.9065 1582.181 l
S
1906.9388 1581.705 m
2013.288 1581.8807 l
S
2089.3816 1530.1722 m
2165.0271 1530.2974 l
S
1936.9895 1529.9203 m
2013.288 1530.0464 l
S
2194.9065 1582.181 m
2338.7471 1333.3513 l
S
2338.7471 1333.3513 m
2195.7312 1083.4065 l
S
2278.9517 1333.2192 m
2165.6418 1135.1912 l
S
2195.7312 1083.4065 m
1907.7634 1082.9303 l
S
900.00781 832.99719 m
756.0191 583.61145 l
S
840.09686 832.89819 m
726.06458 635.39636 l
S
756.0191 583.61145 m
468.05115 583.13538 l
S
468.05115 583.13538 m
324.0719 832.04498 l
S
497.87769 634.94403 m
383.80951 832.14374 l
S
324.0719 832.04498 m
467.22729 1081.4293 l
S
649.80896 1081.7312 m
755.19525 1081.9055 l
S
467.22729 1081.4293 m
573.71521 1081.6055 l
S
649.80896 1029.8969 m
725.41217 1030.0219 l
S
497.26843 1029.6447 m
573.71521 1029.7711 l
S
755.19525 1081.9055 m
900.00781 832.99719 l
S
5559.8892 1187.7771 m
4188.0044 1187.7771 l
S
CM
277.83774 82.611145 m
277.83774 82.611145 264.30258 79.224854 264.30258 79.224854 c
264.30258 79.224854 265.99448 81.129646 265.99448 82.611145 c
265.99448 84.530144 264.30258 86.997437 264.30258 86.997437 c
264.30258 86.997437 277.83774 82.611145 277.83774 82.611145 c
277.83774 82.611145 277.83774 82.611145 277.83774 82.611145 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 86.955902 58.718559 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(')s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
2051.3347 1332.6625 m
2051.3347 1643.5975 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 14.977264 85.309731 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
611.76208 832.52063 m
611.76208 1091.7742 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 222.85335 94.620911 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(\(\)*!+)[ 2.778320 6.669922 5.561523 7.778320 0.000000 ] xS
1 0 0 -1 210.94417 78.402893 cm
0 7.7001953 m
(,-"./'001)[ 6.669922 5.561523 7.221680 2.778320 2.778320 5.561523 5.561523 5.561523 0.000000 ] xS
1 0 0 -1 119.23355 88.260071 cm
0 7.7001953 m
(2)s
1 0 0 -1 348.79172 95.903198 cm
0 7.1728516 m
(#)s
1 0 0 -1 334.39441 96.083206 cm
0 7.1728516 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
7320.7324 1108.6982 m
7373.6074 1278.6301 l
S
7271.2388 1124.0984 m
7312.9248 1258.0709 l
S
7373.6074 1278.6301 m
7138.5376 1444.9684 l
S
7138.5376 1444.9684 m
6907.7007 1272.8049 l
S
6907.7007 1272.8049 m
6963.2104 1108.9615 l
S
7075.1445 1001.0027 m
7179.0518 1002.3018 l
S
6922.0962 889.82251 m
6833.7671 764.99487 l
S
7373.6074 1278.6301 m
7646.3481 1371.0347 l
S
6907.7007 1272.8049 m
6632.7349 1358.3613 l
S
7646.3481 1371.0347 m
7895.7363 1227.0503 l
S
7698.1826 1400.9612 m
7895.7363 1286.9034 l
S
7895.7363 1227.0503 m
8145.1245 1371.0347 l
S
8145.1245 1371.0347 m
8145.1245 1659.0037 l
S
8093.29 1400.9612 m
8093.29 1629.077 l
S
8145.1245 1659.0037 m
7895.7363 1802.9878 l
S
7725.0312 1704.4312 m
7646.3481 1659.0037 l
S
7895.7363 1802.9878 m
7791.0493 1742.5469 l
S
7753.6509 1661.1016 m
7698.1826 1629.077 l
S
7895.7363 1743.1346 m
7819.6689 1699.2172 l
S
7646.3481 1659.0037 m
7646.3481 1371.0347 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 366.97678 51.866055 cm
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(')s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
7895.7363 1515.0193 m
7716.1709 1786.8787 l
S
6632.7349 1358.3613 m
6632.7349 1646.3301 l
S
6580.9004 1388.2878 m
6580.9004 1616.4034 l
S
6632.7349 1646.3301 m
6383.3467 1790.3147 l
S
6227.1875 1700.1561 m
6133.958 1646.3301 l
S
6383.3467 1790.3147 m
6293.0884 1738.204 l
S
6252.7959 1655.0879 m
6185.7925 1616.4034 l
S
6383.3467 1730.4614 m
6318.6968 1693.1357 l
S
6133.958 1646.3301 m
6133.958 1358.3613 l
S
6133.958 1358.3613 m
6383.3467 1214.3766 l
S
6185.7925 1388.2878 m
6383.3467 1274.2299 l
S
6383.3467 1214.3766 m
6632.7349 1358.3613 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 291.35727 49.499722 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
6383.3462 1502.3457 m
6200.7764 1823.6505 l
S
6833.7671 764.99487 m
6833.7666 477.02612 l
S
6781.9326 735.06824 m
6781.9321 506.95276 l
S
6833.7666 477.02612 m
6584.3779 333.04175 l
S
6584.3779 333.04175 m
6334.9902 477.02612 l
S
6584.3784 392.8949 m
6386.8242 506.9527 l
S
6334.9902 477.02612 m
6334.9902 764.99487 l
S
6488 853.33496 m
6584.3779 908.97894 l
S
6334.9902 764.99487 m
6422.0854 815.27936 l
S
6514.8818 809.00214 m
6584.3784 849.12585 l
S
6386.8242 735.0683 m
6448.9673 770.94653 l
S
6584.3779 908.97894 m
6833.7671 764.99487 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 302.40887 96.566498 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(%)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -12 142 cm
6584.3784 621.0105 m
6415.6211 899.31982 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 2.0010681 42.191956 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 10 m
(")s
/F2.1[ 10 0 0 -10 0 0]sf
11.392822 7.7001953 m
(#$#)[ 2.778320 5.839844 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
22.789307 7.7001953 m
("./345./3467./$4\)8./$4!")[ 7.221680 2.778320 2.778320 5.561523 3.330078 5.000000 2.778320 2.778320 5.561523 3.330078 8.330078 5.561523 2.778320 2.778320 5.561523 3.330078 6.669922 2.783203 2.778320 2.778320 5.561523 3.330078 7.778320 0.000000 ] xS
1 0 0 -1 2.0010681 28.190887 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 10 m
(%)s
/F2.1[ 10 0 0 -10 0 0]sf
11.392822 7.7001953 m
(#$#)[ 2.778320 5.839844 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
22.789307 7.7001953 m
("./34!67.)[ 7.221680 2.778320 2.778320 5.561523 3.330078 7.778320 8.330078 5.561523 0.000000 ] xS
1 0 0 -1 2.0010681 13.189743 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(!)s
/F2.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 10 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
11.392822 7.7001953 m
(#$#)[ 2.778320 5.839844 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
22.789307 7.7001953 m
("./3467./&49:./349:./34!67)[ 7.221680 2.778320 2.778320 5.561523 3.330078 8.330078 5.561523 2.778320 2.778320 5.561523 3.330078 7.221680 2.221680 2.778320 2.778320 5.561523 3.330078 7.221680 2.221680 2.778320 2.778320 5.561523 3.330078 7.778320 8.330078 0.000000 ] xS
ep
end
%%Trailer
%%EOF
