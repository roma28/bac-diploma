%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: photooxidation.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-03-15 11:31:38 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 385 171
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 385 171
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YPHYZM+Helvetica
%!FontType1-1.0: YPHYZM+Helvetica 1.0000.0.0000
14 dict begin/FontName /YPHYZM+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /A put
dup 35 /r put
dup 36 /one put
dup 37 /three put
dup 38 /two put
dup 39 /h put
dup 40 /C put
dup 41 /l put
dup 42 /four put
dup 43 /H put
dup 44 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020





00>] def
/CharStrings 14 dict dup begin
/.notdef 0 def
/hyphen 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/A 6 def
/C 7 def
/H 8 def
/N 9 def
/h 10 def
/l 11 def
/r 12 def
/u20B8 13 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B0B7175CE49F0688B3F79EA3DBC898217EC91EE332F98D08B0D78E002610AC5858EAF625BF5D8B8D686ACAA7B013D7B906553D9D4F98B4DB515F739CF39A140529DCA5E96D750F1BC12C78084F282A5D85B51585D7E05277E434DE2FC3D9E534E001902A4C33567E9B6B4CD763FA1DD816CE61B524233BFF8CDF0FDA867BDA81755981B16EBC3F08975F1955B78C64B149335C873A903367450A8695F7DE0EA4A19CADB363A40EBB165F8D3967C8F7C439CDA6C6D7EEFBDA1071CFF3C6FCD397C942E68B0E08276F29FB6B916B7943B218A73402C1E22E8F7AFCB00CA4FA3CB73C56C9C83A632687747B11DCFD82AAC064C9E0B2DDC4174BDF92EB96186E58F5DA56E499DA1E9135C5426C81E4FFE2BE5000A24B313BD547960FD3B236CA0371BD1DEA57F52CB70EBAA3F7586D76FD4FAF063A4EA29B0632F0C9D484E865CD7B2C72623139FE417EEC1D58C75194E7120CB675380A6D8A6D3ADA62D7135F0A2F990430F47D2892D3A637D8FC9DAEE26B37CAE67C1FE8037E1B76250F53756C233C47861BA76536DE3DAC1166EB387EE10BE1AFF08390D4709DAF98E11214D81CF4F51C1FCCB104FDC5CCA0C6CAFB01804748BB937A32159D53CB04C8FBC4E19B5D358874C4D8056520E49867A92B230D82D7B0E67AAD0449340074ABC8F8BC819B27C6540E50E496C7B8D3BBDC902FEF484BCA5DB1C777B201EA6DF1E507406C1FC6089E55CA8CAAD91B353EC980E6AFFB288CAD8DE6A4AC4B261CC3E9BB6BD7

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YPHYZM+Helvetica cguidfix
/F1.1/YPHYZM+Helvetica renmfont
%RBIBeginFontSubset: AORADZ+Symbol
%!FontType1-1.0: AORADZ+Symbol 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /AORADZ+Symbol def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /nu put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -342 1 index div -612 2 index div 2240 3 index div 1694 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/nu 1 def
/per 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-342 -612 2240 1694}def
/UniqueID 4166474 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0D62DE800C383A928B916E4FB94973ACD6C4AC15296C961F370B4A942D972391969FBC18731A1FB4C5EEF20339F2F0015F2CC0F85EF65DBAEBFF75813C573F58DBDF376B069F509F00BD4D21F2B53546354D3959B9608F5CD8BBBA04897C8D2FA45C5B439A29476EC655383971FC72F8124E592E9A6C663051D261B45407816B0CC183A509BE439127751E8EC30FDE32DA7F93F4BD764AE15927AC99D12126AA0B36F0ECB8AB67DA8E96D14139F201B8D2B583C13E856C6BDAD3724B98E9B7307C88DDE3E291B984D0D78F115F9CD4FA6FF9B37CA4B704C3D05CB60CAA128A5A462FBF9165D86E6E4BD3C7186810B5947C9584A7740BF2A0D630FB2B0E95643798F91BDDB677AD69B803E19F545830B70FB0141F66ABC5D7EC5525D8DBE50D25069F44663BC700B541BB641C19064CC243F34A477156A156C19FBB65FA81E10021356B14AB25E70EC4532D542A73FCD3C38E084B512DAA0ED68B501C36FA3DD92313AAD7BBD87EC60353B51703F0BDC9C9599B016BC59F6E61004D61E4087B75F2FFEAEA3A526359C45FBFCA1A4A2230FA1AEF37DE512B71C68E59D284C50F3EB80FED7176FA41798779580B404BB49BB9E6F4C8A486BEE69DF36ACC87AAF07DE5E021E1A041E5CBD980B7C59DDAB88828412C9D052825B1F21292FBBAEB65B9B8B376E9C58DE60B9CD976F5886C96984AB3F57119F665605B14CD286A83322C5C31E5F6898A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AORADZ+Symbol cguidfix
/F2.1/AORADZ+Symbol renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 171 m
385 171 l
385 0 l
0 0 l
h
0 171 m
W
0 0 385 171 rc
-1 171 m
386 171 l
386 -1 l
-1 -1 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 25.22879 147.69218 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 39.626953 147.60355 cm
0 7.1728516 m
(!)s
20 w
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1589.4929 1853.4678 m
1641.1235 2015.7631 l
S
1771.8384 2128.47 m
1875.745 2129.1096 l
S
2002.5251 2015.8054 m
2055.4275 1856.3361 l
S
1953.3273 1999.4846 m
1994.3717 1875.7595 l
S
2055.4275 1856.3361 m
1823.5021 1685.6414 l
S
1823.5021 1685.6414 m
1589.4929 1853.4678 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 11.969934 136.91379 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1605.1923 2225.1692 m
1593.4496 2241.1243 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 2.473609 166.77913 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1589.4929 1853.4678 m
1437.2064 1802.9484 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 58.157265 166.47261 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
2055.4275 1856.3361 m
2226.0129 1802.0681 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 162.0145 147.69218 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 176.41267 147.60355 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4325.207 1853.4678 m
4376.8374 2015.7629 l
S
4507.5522 2128.47 m
4611.4595 2129.1096 l
S
4507.8716 2076.6365 m
4611.7783 2077.2761 l
S
4738.2393 2015.8054 m
4791.1416 1856.3361 l
S
4791.1416 1856.3361 m
4559.2163 1685.6412 l
S
4559.2163 1685.6412 m
4325.207 1853.4678 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 148.75565 136.91379 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4340.9062 2225.1692 m
4336.1909 2231.5764 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 139.25932 166.77913 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4325.207 1853.4678 m
4172.9204 1802.9484 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 194.94298 166.47263 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4791.1416 1856.3361 m
4961.7271 1802.068 l
S
4283.8091 2100.6248 m
4283.8091 2136.4197 4254.7915 2165.4373 4218.9966 2165.4373 c
4183.2017 2165.4373 4154.1841 2136.4197 4154.1841 2100.6248 c
4154.1841 2064.8296 4183.2017 2035.8121 4218.9966 2035.8121 c
4254.7915 2035.8121 4283.8091 2064.8296 4283.8091 2100.6248 c
h
S
0 J
4182.7046 2095.8123 m
4245.6631 2095.8123 l
S
4214.1841 2064.333 m
4214.1841 2127.2913 l
S
1 J
4877.0913 1736.9559 m
4877.0913 1772.751 4848.0742 1801.7684 4812.2788 1801.7684 c
4776.4839 1801.7684 4747.4663 1772.751 4747.4663 1736.9559 c
4747.4663 1701.161 4776.4839 1672.1434 4812.2788 1672.1434 c
4848.0742 1672.1434 4877.0913 1701.161 4877.0913 1736.9559 c
h
S
0 J
4775.9873 1732.1434 m
4838.9458 1732.1434 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 333.23935 147.69218 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 347.63751 147.60355 cm
0 7.1728516 m
(!)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7749.7041 1853.4678 m
7801.3345 2015.7629 l
S
7932.0493 2128.47 m
8035.9565 2129.1096 l
S
7932.3687 2076.6365 m
8036.2754 2077.2761 l
S
8162.7363 2015.8054 m
8215.6387 1856.3361 l
S
8215.6387 1856.3361 m
7983.7134 1685.6412 l
S
7983.7134 1685.6412 m
7749.7041 1853.4678 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 318.91888 134.79056 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7767.8589 2226.7385 m
7729.3882 2281.7383 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 310.48416 166.77913 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7749.7041 1853.4678 m
7597.4175 1802.9484 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 366.16782 166.47263 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
8215.6387 1856.3361 m
8386.2246 1802.068 l
S
7708.3062 2100.6245 m
7708.3062 2136.4197 7679.2886 2165.437 7643.4937 2165.437 c
7607.6982 2165.437 7578.6812 2136.4197 7578.6812 2100.6245 c
7578.6812 2064.8296 7607.6982 2035.8121 7643.4937 2035.8121 c
7679.2886 2035.8121 7708.3062 2064.8296 7708.3062 2100.6245 c
h
S
0 J
7607.2017 2095.812 m
7670.1602 2095.812 l
S
7638.6812 2064.333 m
7638.6812 2127.2913 l
S
1 J
3363.282 2041.9429 m
2828.3113 2041.9429 l
S
CM
125.00736 147.90285 m
125.00736 147.90285 111.47221 144.51657 111.47221 144.51657 c
111.47221 144.51657 113.1641 146.42136 113.1641 147.90285 c
113.1641 149.82185 111.47221 152.28914 111.47221 152.28914 c
111.47221 152.28914 125.00736 147.90285 125.00736 147.90285 c
125.00736 147.90285 125.00736 147.90285 125.00736 147.90285 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 100.16947 161.21535 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(')s
/F2.1[ 10 0 0 -10 0 0]sf
5.5615234 7.7001953 m
(!)s
/Cs1 SC
0 sc
CM
356.34695 159.94778 m
356.34695 159.48755 355.97385 159.11444 355.51361 159.11444 c
355.05338 159.11444 354.68027 159.48755 354.68027 159.94778 c
354.68027 160.40802 355.05338 160.78111 355.51361 160.78111 c
355.97385 160.78111 356.34695 160.40802 356.34695 159.94778 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
6734.4243 2041.9429 m
5564.0254 2041.9429 l
S
CM
293.56448 147.90285 m
293.56448 147.90285 280.02933 144.51657 280.02933 144.51657 c
280.02933 144.51657 281.72122 146.42136 281.72122 147.90285 c
281.72122 149.82185 280.02933 152.28914 280.02933 152.28914 c
280.02933 152.28914 293.56448 147.90285 293.56448 147.90285 c
293.56448 147.90285 293.56448 147.90285 293.56448 147.90285 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
6723.4341 2306.4175 m
6481.2842 1998.7615 6035.0107 1945.5906 5727.3545 2187.7405 c
5631.3066 2263.3379 5555.3613 2364.1707 5509.2202 2477.3574 c
S
CM
286.79474 124.41084 m
286.79474 124.41084 277.43213 134.53694 277.43213 134.53694 c
277.43213 134.53694 279.90186 133.98325 281.17172 134.67912 c
282.44156 135.375 283.30472 137.7551 283.30472 137.7551 c
283.30472 137.7551 286.79474 124.41084 286.79474 124.41084 c
286.79474 124.41084 286.79474 124.41084 286.79474 124.41084 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 211.45023 122.31923 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(\(\(\))[ 7.221680 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
16.665039 10 m
(*)s
1 0 0 -1 276.42111 119.00617 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(\(\(\))[ 7.221680 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
16.665039 10 m
(*)s
/Cs1 SC
0 sc
CM
281.17874 122.86623 m
281.17874 122.40599 280.80563 122.03289 280.3454 122.03289 c
279.88516 122.03289 279.51205 122.40599 279.51205 122.86623 c
279.51205 123.32646 279.88516 123.69956 280.3454 123.69956 c
280.80563 123.69956 281.17874 123.32646 281.17874 122.86623 c
h
f
0 J
0.050000001 0 0 -0.050000001 -55 250 cm
6592.5591 2542.6755 m
6651.2568 2542.6755 l
S
1 J
5385.3809 2431.0898 m
5371.8833 2157.1536 5124.3857 1921.5505 4850.1167 1921.5505 c
S
CM
214.11346 123.94355 m
214.11346 123.94355 214.23668 128.14647 214.23668 128.14647 c
214.58528 128.18271 215.48999 128.04593 215.48999 128.04593 c
215.48999 128.04593 214.11346 123.94355 214.11346 123.94355 c
214.11346 123.94355 214.11346 123.94355 214.11346 123.94355 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
8004.748 3585.6846 m
8004.748 2589.4692 l
S
CM
345.2374 58.872513 m
345.2374 58.872513 340.8511 72.407669 340.8511 72.407669 c
340.8511 72.407669 343.31839 70.715775 345.2374 70.715775 c
346.7189 70.715775 348.62369 72.407669 348.62369 72.407669 c
348.62369 72.407669 345.2374 58.872513 345.2374 58.872513 c
345.2374 58.872513 345.2374 58.872513 345.2374 58.872513 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
8069.2495 1913.6344 m
8014.2007 1922.8464 7970.3999 1974.5858 7970.3999 2030.4 c
S
CM
352.65967 153.45601 m
352.65967 153.45601 348.72296 154.16789 348.72296 154.16789 c
348.71249 154.60014 348.90009 155.54726 348.90009 155.54726 c
348.90009 155.54726 352.65967 153.45601 352.65967 153.45601 c
352.65967 153.45601 352.65967 153.45601 352.65967 153.45601 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
8289.2764 1983.7798 m
8318.1904 1960.5463 8322.8018 1918.2181 8299.5684 1889.3037 c
8292.2188 1880.1572 8282.4346 1872.9923 8271.4961 1868.7476 c
S
CM
356.14365 150.29781 m
356.14365 150.29781 359.46381 150.811 359.46381 150.811 c
359.6738 150.60103 360.93811 149.88432 360.93811 149.88432 c
360.93811 149.88432 356.14365 150.29781 356.14365 150.29781 c
356.14365 150.29781 356.14365 150.29781 356.14365 150.29781 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
7914.9546 2288.1323 m
7952.9409 2298.2932 7992.021 2275.7075 8002.1816 2237.7212 c
8005.396 2225.7053 8005.3896 2212.8489 8002.1631 2200.8362 c
S
CM
338.22809 138.11049 m
338.22809 138.11049 340.74774 135.59338 340.74774 135.59338 c
340.52515 135.37079 340.10767 134.2338 340.10767 134.2338 c
340.10767 134.2338 338.22809 138.11049 338.22809 138.11049 c
338.22809 138.11049 338.22809 138.11049 338.22809 138.11049 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 335.31046 29.638031 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 349.70865 29.549393 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7791.1265 4214.5508 m
7842.7568 4376.8457 l
S
7973.4717 4489.5532 m
8077.3784 4490.1929 l
S
8204.1592 4376.8887 m
8257.0605 4217.4189 l
S
8154.9609 4360.5674 m
8196.0049 4236.8428 l
S
8257.0605 4217.4189 m
8025.1357 4046.7241 l
S
8025.1357 4046.7241 m
7791.1265 4214.5508 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 319.92838 17.090279 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7803.0269 4583.522 m
7757.3257 4640.834 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 312.5553 39.170448 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7791.1265 4214.5508 m
7671.9038 4258.3535 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 368.23895 48.418472 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
8257.0605 4217.4189 m
8427.6465 4163.1509 l
S
CM
344.11386 18.379215 m
344.11386 17.918978 343.74075 17.545881 343.28052 17.545881 c
342.82028 17.545881 342.4472 17.918978 342.4472 18.379215 c
342.4472 18.839453 342.82028 19.212549 343.28052 19.212549 c
343.74075 19.212549 344.11386 18.839453 344.11386 18.379215 c
h
f
0 J
0.050000001 0 0 -0.050000001 -55 250 cm
7851.2617 4632.4155 m
7909.9595 4632.4155 l
S
7890.6104 4593.0669 m
7890.6104 4651.7646 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 328.78064 57.593651 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(+)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7791.1265 4214.5508 m
7759.8208 4008.7029 l
S
6850.9517 3344.314 m
6850.9517 2965.4429 l
S
CM
287.54758 70.94104 m
287.54758 70.94104 283.16129 84.476196 283.16129 84.476196 c
283.16129 84.476196 285.62857 82.784302 287.54758 82.784302 c
289.02908 82.784302 290.93387 84.476196 290.93387 84.476196 c
290.93387 84.476196 287.54758 70.94104 287.54758 70.94104 c
287.54758 70.94104 287.54758 70.94104 287.54758 70.94104 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 279.40854 67.463478 cm
0 7.7001953 m
(\(\(\))[ 7.221680 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
16.665039 10 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
7916.6924 4252.1006 m
7931.9268 4180.4272 7884.2598 4102.6416 7813.4819 4083.6768 c
S
CM
338.67746 33.601006 m
338.67746 33.601006 340.62192 37.182274 340.62192 37.182274 c
341.09586 37.140266 342.13812 36.906567 342.13812 36.906567 c
342.13812 36.906567 338.67746 33.601006 338.67746 33.601006 c
338.67746 33.601006 338.67746 33.601006 338.67746 33.601006 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
7375.606 3875.5415 m
7425.6982 4020.3396 7579.2808 4119.7617 7731.8955 4106.1875 c
S
CM
312.90097 60.330612 m
312.90097 60.330612 313.7803 56.222923 313.7803 56.222923 c
313.47153 55.960373 312.7298 54.636108 312.7298 54.636108 c
312.7298 54.636108 312.90097 60.330612 312.90097 60.330612 c
312.90097 60.330612 312.90097 60.330612 312.90097 60.330612 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
7217.4849 3692.7485 m
7170.2998 3638.8679 7091.4688 3615.8308 7022.6948 3635.8242 c
S
CM
307.92172 61.488792 m
307.92172 61.488792 305.95822 65.073746 305.95822 65.073746 c
306.13657 65.618034 306.62051 66.874702 306.62051 66.874702 c
306.62051 66.874702 307.92172 61.488792 307.92172 61.488792 c
307.92172 61.488792 307.92172 61.488792 307.92172 61.488792 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
7715.5107 4406.7949 m
7705.9897 4442.3081 7716.709 4482.3242 7742.7075 4508.3223 c
S
CM
332.13538 32.015182 m
332.13538 32.015182 330.77554 29.660244 330.77554 29.660244 c
330.60559 29.830204 329.58127 30.323826 329.58127 30.323826 c
329.58127 30.323826 332.13538 32.015182 332.13538 32.015182 c
332.13538 32.015182 332.13538 32.015182 332.13538 32.015182 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
6204.3701 4430.4707 m
7078.6616 4430.4707 l
S
CM
244.37526 28.476465 m
244.37526 28.476465 257.9104 32.862755 257.9104 32.862755 c
257.9104 32.862755 256.21851 30.395468 256.21851 28.476465 c
256.21851 26.994965 257.9104 25.090178 257.9104 25.090178 c
257.9104 25.090178 244.37526 28.476465 244.37526 28.476465 c
244.37526 28.476465 244.37526 28.476465 244.37526 28.476465 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 183.67889 27.774353 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 198.07707 27.685715 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4758.4951 4251.8242 m
4810.1255 4414.1196 l
S
4819.3071 4271.998 m
4859.5205 4398.4058 l
S
4940.8403 4526.8267 m
5044.7476 4527.4663 l
S
5171.5273 4414.1621 m
5224.4297 4254.6929 l
S
5122.3296 4397.8413 m
5163.374 4274.1162 l
S
5224.4297 4254.6929 m
4992.5044 4083.9978 l
S
4992.5044 4083.9978 m
4758.4951 4251.8242 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 169.35843 14.872743 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4776.6499 4625.0952 m
4738.1792 4680.0947 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 160.92372 46.861298 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4758.4951 4251.8242 m
4606.2085 4201.3052 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 216.60738 46.554794 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
5224.4297 4254.6929 m
5395.0151 4200.4248 l
S
4985.4194 4688.896 m
4985.4194 4724.6909 4956.4019 4753.7085 4920.6069 4753.7085 c
4884.8115 4753.7085 4855.7944 4724.6909 4855.7944 4688.896 c
4855.7944 4653.1006 4884.8115 4624.0835 4920.6069 4624.0835 c
4956.4019 4624.0835 4985.4194 4653.1006 4985.4194 4688.896 c
h
S
0 J
4884.3149 4684.0835 m
4947.2734 4684.0835 l
S
4915.7944 4652.604 m
4915.7944 4715.5625 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 191.10301 64.284698 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(+)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
4992.5044 4083.9978 m
4993.7827 3876.3347 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 262.70764 24.954714 cm
0 7.7001953 m
(,\(+\(\))[ 3.330078 7.221680 7.221680 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
27.216797 10 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
3153.5493 4418.0205 m
4203.1074 4418.0205 l
S
CM
91.834206 29.098988 m
91.834206 29.098988 105.36936 33.485275 105.36936 33.485275 c
105.36936 33.485275 103.67747 31.017988 103.67747 29.098988 c
103.67747 27.617485 105.36936 25.712698 105.36936 25.712698 c
105.36936 25.712698 91.834206 29.098988 91.834206 29.098988 c
91.834206 29.098988 91.834206 29.098988 91.834206 29.098988 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
4958.3999 3948 m
4887.5723 3948 4823.1494 4007.4058 4817.4194 4078.0012 c
S
CM
186.7953 41.991703 m
186.7953 41.991703 184.56265 45.686832 184.56265 45.686832 c
184.56265 45.686832 185.5614 45.836758 185.87099 46.099941 c
186.18056 46.363125 186.91522 47.686832 186.91522 47.686832 c
186.91522 47.686832 186.7953 41.991703 186.7953 41.991703 c
186.7953 41.991703 186.7953 41.991703 186.7953 41.991703 c
h
f
0.050000001 0 0 -0.050000001 -55 250 cm
4756.7998 4315.2002 m
4709.5806 4342.4619 4686.9741 4404.5732 4705.6226 4455.8091 c
S
CM
182.84 24.16 m
182.84 24.16 178.91557 26.645199 178.91557 26.645199 c
178.91557 26.645199 180.03232 26.960743 180.28113 27.209549 c
180.52994 27.458355 180.91557 28.645199 180.91557 28.645199 c
180.91557 28.645199 182.84 24.16 182.84 24.16 c
182.84 24.16 182.84 24.16 182.84 24.16 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 34.339062 25.075457 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 48.73724 24.986818 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1771.6985 4305.8022 m
1823.329 4468.0977 l
S
1954.0438 4580.8047 m
2057.9507 4581.4443 l
S
2184.7307 4468.1401 m
2237.6331 4308.6704 l
S
2135.533 4451.8193 m
2176.5774 4328.0942 l
S
2237.6331 4308.6704 m
2005.7076 4137.9756 l
S
2005.7076 4137.9756 m
1771.6985 4305.8022 l
S
2005.3132 4202.0454 m
1832.5105 4325.9761 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 20.018597 12.173844 cm
0 8.8085938 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.222168 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1789.8531 4679.0728 m
1751.3827 4734.0723 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 11.583889 44.162399 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
1771.6985 4305.8022 m
1619.412 4255.2827 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 67.267548 43.855896 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
("#)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
10 5.2624512 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -55 250 cm
2237.6331 4308.6704 m
2408.2185 4254.4023 l
S
CM
280.66956 68.562279 m
280.66956 68.102036 280.29645 67.728943 279.83621 67.728943 c
279.37598 67.728943 279.00287 68.102036 279.00287 68.562279 c
279.00287 69.022514 279.37598 69.395607 279.83621 69.395607 c
280.29645 69.395607 280.66956 69.022514 280.66956 68.562279 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 290.86871 94.315445 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.7001953 m
(,\(\))[ 3.330078 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.773438 4.1137695 m
(,)s
ep
end
%%Trailer
%%EOF
