%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: azomethine_generation.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2019-10-26 15:13:47 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 473 261
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 473 261
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HMCICC+Helvetica
%!FontType1-1.0: HMCICC+Helvetica 1.0000.0.0000
14 dict begin/FontName /HMCICC+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /H put
dup 35 /R put
dup 36 /two put
dup 37 /three put
dup 38 /one put
dup 39 /M put
dup 40 /e put
dup 41 /O put
dup 42 /C put
dup 43 /E put
dup 44 /t put
dup 45 /D put
dup 46 /F put
dup 47 /T put
dup 48 /S put
dup 49 /P put
dup 50 /h put
dup 51 /l put
dup 52 /A put
dup 53 /r put
dup 54 /plus put
dup 55 /bracketleft put
dup 56 /bracketright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020








00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/plus 1 def
/one 2 def
/two 3 def
/three 4 def
/A 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/H 10 def
/M 11 def
/N 12 def
/O 13 def
/P 14 def
/R 15 def
/S 16 def
/T 17 def
/bracketleft 18 def
/bracketright 19 def
/e 20 def
/h 21 def
/l 22 def
/r 23 def
/t 24 def
/u20B8 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec

5D944259BBF2BED63032024909A995857079F428F38B96CA9BF9D53EE80F658949CF4F2AC6CB0F533BEB252D6198E80BBD80CBD460277494A0779B79D71E94254EAFF74DC7C43056246F82BF6F02CAAEB8483E133B5B867E633239A033FA9A0E36862DC3F18033018D09835CE3692AFFC5ED910E7D7286D5851806A3EFF38897F3B3759F8C10AE6A3FF5375738EB4200901F80DFCB81813065FA4412D450590439AE4B596C63A12319BDAF56EF7FDE2E19565627F426DAACEE25B247DC10FC008AF30B2510F439AF9A4052B1CB90B3020A277CEE19EAE07AEEE58C960D9F1149990C2E27BAB472022F8927C759A6C878B77B763998421DB14868CE70681F542D72F16D03D498882522D7027D1D2078D6B494BDD87970DC25083B09CC27C3E542B721D509497F85359989681F7F595ED2EE5D7BB3AE66901F7CE7519E7C9F49D08A3E38F438524FE2C16D18AFED76EC7B47BA3DAF046A74917E74A7A0321EFF1486BC3AB03378C6D05C2E7A01337C2C61592FF9B397E76897782B68468F9F20B1274456645CAB5317DAD5DEF3F9416B0D6A079F39E4F3C545F476C6F31B80E3CD783403F4DFBB46934C78B6FAFCEF79B5D92A0A3A2F34652D05D8CFD5FE01D932BE7F5C8FEEF955E352C5033DF61D195FDFAA701A283E7FBF13C562527782CFFB6A229ECDD620DFF85962302A192EDFD31D4CB46A6D03AAC9A33AE2CDF517A7C3C82EED00BDA8399C9FCA80FFD837F98BBDE925556DA18DB94BE20152DCE1E78D21C1965ADB1C3B0E5B52CD74635CB5A146F27DF9975639636ED198D76587A71872F7E49A4B7D217AE44F2B19F036BE4BB6FEA0D17E75212D3BAD0F6DEE7B2D3BAC33A673EAD7A8E2E2BC7F4A5172F1B777EF0E9218B8AA28D69C0E932BC466A56ACC8E2E08DD2ADBA685CFDBA616641DC563CBD79CC66E28EC20CC7CC2AF745A50273A0C1D8577697C5609ED5597FD362D79B07F4E3D163C25C604ADD628D6A883DE04E45AFCAE94D64EB5B17E3209DFF7DD1F86378B47A079AEB7DC0A7A72688B9692C36582265D6875835759400901EC68626639CBB8B8D414130B917C63E5A84478237BEFCD8D19988B7DC3CA950B180B490136766EFA614C2A3ED0D42CDFDF8E290269734A322DF8521C95312D72FC89389DCA2DCF51C01A3BF7F9133EB19B7B9E419A851A9F60A972E18B1190D2BAE4630A3FC708A4AF8E6FC9494C75C5C6AC281C4903F79BBBB560EF1A26EDF7BF7E83F706F803974AE702F3A0AFAB93FEDC1071B09182F538B54234198111CCCA001BE9BC94AD269A2AE15080B3D672120EEB1B15BFAB533024728B37385F567328A9DA0E0D85AE249BF338EC0B7C63BF6EFA4B6A0B071603C3A6244BFC88B6C823A73435ED4743FD9B75BC4037A3B20E1C696A987A522F6126171766C92A28138560E5E8DA27244D94C8426E1F9C5B

04DDEB555405CB7089D1FB04E233AEA6C8FB00A01407A0C0258DA861B84AFE0D258C21FDC6CC933C1DE4BC376E0F7F67FEC2B74844868685CBC2C8E76600C18E2954F135400E45A55CB6C9ECD87BB37FAD5FA1C89DE2C25FF5C35A3BE31AC24447D695AF766745DA4CF1AE88F6B437B79208659698775F4218505A8C37710AEF31B4AE3EF5F181DF55D4FED4DC5948382A854004A0493A3DBA3EADF2875807FB782E1BE5E495703A5B5035A65CDD8F12D46DD35E71834A80AF93024164AB5343AA23C520509077771C750C9C852A1487B28553E1BC3A40225B337CF129BA8ADD7BC7B8A6BD5653A7E31F58B1358E816308F06BB423CB4201C499B68BA58DAE72E381F6D4A5733DF531498553D381BA1EE1CC848C5BD2C0B98437762D153751C7B9C4903F9E98B6F43530C095468E70C6049A6AD8AC55BE44797D3AFE9F858F12EA87B905864F168EBD9359E26CFECE8FC149486A441F266049B05E7F75374E598AB0EA77A18FCA308A74D1EAD673A6C1C5A21ED207E5CF94E22983D41145FA3A3142DBB9E4C05DE855DB626D2E18A186381C558CD0471E045035F2F86699074D9D871792E6BB829E83ED86DC6DF8475B2F74B2A16A0AD2E00B9325092F8E2DB20DB941F036141F36E979FE19C0F932FD2E151E1620ECB751E376E2B50D9F4DD7684EC178ADFEDF70DCA457F85D079727D59AD1D2D9BA288AC8C57EEAEBC3AB976E8C89F2E69B996FBE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HMCICC+Helvetica cguidfix
/F1.1/HMCICC+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 261 m
473 261 l
473 0 l
0 0 l
h
0 261 m
W
0 0 473 261 rc
-1 261 m
474 261 l
474 -1 l
-1 -1 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 26.565331 250.46072 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
20 w
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
454.13516 536.49847 m
612.14453 445.2717 l
S
505.96954 566.42505 m
638.06177 490.16159 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 39.034744 243.26151 cm
0 7.1728516 m
(!)s
0 15.541179 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
799.42865 447.88498 m
851.37561 477.87659 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.6265055 251.29874 cm
0 8.848877 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2624512 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
454.13516 536.49847 m
313.24899 455.15781 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 14.095918 229.69559 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
454.13516 536.49847 m
454.13516 725.62933 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 51.504158 251.27859 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
1058.9741 475.26331 m
1102.0143 450.41403 l
S
2051.6602 571.08344 m
1615.5861 571.08344 l
S
1735.4493 607.17719 m
2171.5234 607.17719 l
S
CM
105.47852 237.14505 m
105.47852 237.14505 97.583015 237.14505 97.583015 237.14505 c
97.583015 238.87137 96.455086 240.70419 96.455086 240.70419 c
96.455086 240.70419 105.47852 237.14505 105.47852 237.14505 c
105.47852 237.14505 105.47852 237.14505 105.47852 237.14505 c
h
f
74.876961 235.64114 m
74.876961 235.64114 83.900398 232.38278 83.900398 232.38278 c
83.900398 232.38278 82.772469 234.21561 82.772469 235.64114 c
82.772469 235.64114 74.876961 235.64114 74.876961 235.64114 c
74.876961 235.64114 74.876961 235.64114 74.876961 235.64114 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 143.03453 256.02917 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
0 15.541179 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2783.5193 592.49615 m
2936.0581 504.4278 l
S
2835.3538 622.42273 m
2961.9753 549.31769 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 155.50394 240.46162 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3134.2832 507.04111 m
3180.7595 533.87427 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 118.09571 248.49886 cm
0 8.848877 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2624512 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2783.5193 592.49615 m
2642.6331 511.15549 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 130.56512 226.89571 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8378906 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2514648 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2783.5193 592.49615 m
2783.5193 761.62701 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 167.97336 248.47871 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3388.3582 531.26105 m
3431.3984 506.41174 l
S
3106.2122 629.15521 m
3106.2122 664.9502 3077.1946 693.96771 3041.3997 693.96771 c
3005.6045 693.96771 2976.5872 664.9502 2976.5872 629.15521 c
2976.5872 593.36029 3005.6045 564.34271 3041.3997 564.34271 c
3077.1946 564.34271 3106.2122 593.36029 3106.2122 629.15521 c
h
S
0 J
3005.1079 624.34271 m
3068.0662 624.34271 l
S
3036.5872 592.86359 m
3036.5872 655.8219 l
S
1 J
3341.022 397.90414 m
3341.022 433.6991 3312.0044 462.71664 3276.2095 462.71664 c
3240.4146 462.71664 3211.397 433.6991 3211.397 397.90414 c
3211.397 362.10919 3240.4146 333.09164 3276.2095 333.09164 c
3312.0044 333.09164 3341.022 362.10919 3341.022 397.90414 c
h
S
0 J
3239.9177 393.09164 m
3302.8762 393.09164 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 278.93484 230.17203 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 291.40424 237.37125 cm
0 7.1728516 m
(!")[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
14.443359 9.4726562 m
($)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
5856.9761 737.05267 m
5893.9229 715.72131 l
S
5649.3774 739.66595 m
5501.5254 654.30347 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 228.15494 230.26968 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
('\(\))[ 8.330078 5.561523 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
21.669922 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
25.841064 7.3681641 m
(*)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
5501.5254 654.30347 m
5352.4028 740.39935 l
S
5501.5254 654.30347 m
5501.5254 366.33469 l
S
5449.6909 624.37683 m
5449.6909 396.26129 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 228.15494 259.06656 cm
0 7.3681641 m
('\(\))[ 8.330078 5.561523 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
21.669922 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
25.841064 7.3681641 m
(*)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
5501.5254 366.33469 m
5349.2144 278.39795 l
S
5750.9136 878.59058 m
5750.9136 1086.2566 l
S
7411.6689 617.46265 m
6582.1182 617.46265 l
S
CM
373.47894 235.12686 m
373.47894 235.12686 364.45551 232.86852 364.45551 232.86852 c
364.45551 232.86852 365.58344 234.13884 365.58344 235.12686 c
365.58344 236.5524 364.45551 238.38522 364.45551 238.38522 c
364.45551 238.38522 373.47894 235.12686 373.47894 235.12686 c
373.47894 235.12686 373.47894 235.12686 373.47894 235.12686 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 437.91998 230.17203 cm
0 7.1728516 m
(!)s
1 0 0 -1 450.38937 237.37125 cm
0 7.1728516 m
(!")[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
9036.6787 737.05261 m
9073.626 715.72131 l
S
8829.0801 739.66602 m
8681.2275 654.30347 l
S
8854.9971 694.77606 m
8733.0625 624.37683 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 387.14008 230.26968 cm
0 7.3681641 m
('\(\))[ 8.330078 5.561523 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
21.669922 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
25.841064 7.3681641 m
(*)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8681.2275 654.30347 m
8532.1055 740.39935 l
S
8681.2275 654.30347 m
8681.2275 366.33469 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 387.14008 259.06656 cm
0 7.3681641 m
('\(\))[ 8.330078 5.561523 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
21.669922 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
25.841064 7.3681641 m
(*)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8681.2275 366.33469 m
8528.917 278.39795 l
S
8930.6162 878.59058 m
8930.6162 1086.2566 l
S
8979.6787 603.91205 m
8979.6787 639.70697 8950.6611 668.72455 8914.8662 668.72455 c
8879.0713 668.72455 8850.0537 639.70697 8850.0537 603.91205 c
8850.0537 568.11707 8879.0713 539.09955 8914.8662 539.09955 c
8950.6611 539.09955 8979.6787 568.11707 8979.6787 603.91205 c
h
S
0 J
8878.5742 599.09955 m
8941.5322 599.09955 l
S
8910.0537 567.62036 m
8910.0537 630.57867 l
S
1 J
9287.5459 828.94202 m
9287.5459 864.737 9258.5283 893.75452 9222.7334 893.75452 c
9186.9385 893.75452 9157.9209 864.737 9157.9209 828.94202 c
9157.9209 793.14709 9186.9385 764.12952 9222.7334 764.12952 c
9258.5283 764.12952 9287.5459 793.14709 9287.5459 828.94202 c
h
S
0 J
9186.4414 824.12952 m
9249.4004 824.12952 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 338.32794 249.36929 cm
0 7.7001953 m
(+,)[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
9.4482422 10 m
(%)s
/F1.1[ 10 0 0 -10 0 0]sf
13.619385 7.7001953 m
(!)s
1 0 0 -1 337.69867 232.5546 cm
0 7.7001953 m
(-'.)[ 7.221680 8.330078 0.000000 ] xS
1 0 0 -1 280.10806 168.26015 cm
0 8.848877 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2624512 m
($)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
5955.0195 1948.9926 m
6023.7666 1909.3016 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 305.04691 167.42213 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6023.7666 1909.3016 m
6171.6187 1994.6641 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 293.13412 189.11745 cm
0 7.3681641 m
(/'0)[ 6.108398 8.330078 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6023.7666 1909.3016 m
6023.7666 1719.6825 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 317.5163 174.62135 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6379.2168 1992.0508 m
6431.1641 1962.0592 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 315.94214 189.11745 cm
0 7.3681641 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6522.543 1785.5419 m
6522.543 1739.6825 l
S
6470.7085 1785.5419 m
6470.7085 1739.6825 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 305.04691 153.84157 cm
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6273.1548 2133.5886 m
6273.1548 2242.1238 l
S
7642.5527 1988.496 m
6867.3965 1988.496 l
S
CM
385.02313 166.57521 m
385.02313 166.57521 375.99969 164.31685 375.99969 164.31685 c
375.99969 164.31685 377.12762 165.58717 377.12762 166.57521 c
377.12762 168.00073 375.99969 169.83356 375.99969 169.83356 c
375.99969 169.83356 385.02313 166.57521 385.02313 166.57521 c
385.02313 166.57521 385.02313 166.57521 385.02313 166.57521 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 398.54266 168.26015 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 8.848877 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.2624512 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8317.3721 1952.6528 m
8392.458 1909.3016 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 423.48148 167.42213 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8392.458 1909.3016 m
8540.3105 1994.6641 l
S
8392.458 1969.1548 m
8514.3936 2039.554 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 435.9509 174.62135 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8747.9092 1992.0508 m
8799.8564 1962.0592 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 423.48148 153.84157 cm
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8641.8467 2133.5886 m
8641.8467 2242.1238 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 435.67258 189.11745 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(\)/'0)[ 7.778320 6.108398 8.330078 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8891.2354 1785.5419 m
8891.2354 1739.6825 l
S
9088.9492 2028.4257 m
9088.9492 2064.2205 9059.9316 2093.238 9024.1367 2093.238 c
8988.3418 2093.238 8959.3242 2064.2205 8959.3242 2028.4257 c
8959.3242 1992.6306 8988.3418 1963.6132 9024.1367 1963.6132 c
9059.9316 1963.6132 9088.9492 1992.6306 9088.9492 2028.4257 c
h
S
0 J
8987.8457 2023.6132 m
9050.8037 2023.6132 l
S
1 J
8696.1465 1858.7312 m
8696.1465 1894.5261 8667.1299 1923.5437 8631.334 1923.5437 c
8595.5391 1923.5437 8566.5215 1894.5261 8566.5215 1858.7312 c
8566.5215 1822.9363 8595.5391 1793.9187 8631.334 1793.9187 c
8667.1299 1793.9187 8696.1465 1822.9363 8696.1465 1858.7312 c
h
S
0 J
8595.043 1853.9187 m
8658.001 1853.9187 l
S
8626.5215 1822.4396 m
8626.5215 1885.3979 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 351.91376 163.97853 cm
0 7.7001953 m
(12")[ 6.669922 5.561523 0.000000 ] xS
1 0 0 -1 19.960176 162.93382 cm
0 7.1728516 m
(!)s
0 15.541179 m
(")s
1 0 0 -1 32.429588 170.13304 cm
0 7.1728516 m
(!")[ 7.221680 0.000000 ] xS
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
677.48273 2081.8167 m
705.76947 2065.4854 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 32.429588 185.34935 cm
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
820.80859 1895.3077 m
820.80859 1816.0304 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.6509196 170.14525 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
469.88428 2084.4302 m
415.28577 2052.9077 l
S
2488.4229 1983.0731 m
1310.584 1983.0731 l
S
CM
127.31666 166.84634 m
127.31666 166.84634 118.29322 164.58798 118.29322 164.58798 c
118.29322 164.58798 119.42115 165.85831 119.42115 166.84634 c
119.42115 168.27188 118.29322 170.10471 118.29322 170.10471 c
118.29322 170.10471 127.31666 166.84634 127.31666 166.84634 c
127.31666 166.84634 127.31666 166.84634 127.31666 166.84634 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 74.488182 178.49966 cm
0 7.3681641 m
(*3)[ 7.221680 0.000000 ] xS
1 0 0 -1 91.679276 185.69888 cm
0 7.3681641 m
(*)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
1824.0028 1794.666 m
1901.7749 1749.7642 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 104.14869 178.49966 cm
0 7.3681641 m
(*3)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2087.3674 1736.7957 m
2147.9749 1771.7872 l
S
CM
99.771385 189.0054 m
99.771385 188.54517 99.398285 188.17207 98.938049 188.17207 c
98.477814 188.17207 98.104713 188.54517 98.104713 189.0054 c
98.104713 189.46564 98.477814 189.83875 98.938049 189.83875 c
99.398285 189.83875 99.771385 189.46564 99.771385 189.0054 c
h
f
96.115936 189.84218 m
96.115936 189.38194 95.742836 189.00883 95.2826 189.00883 c
94.822365 189.00883 94.449265 189.38194 94.449265 189.84218 c
94.449265 190.30241 94.822365 190.67551 95.2826 190.67551 c
95.742836 190.67551 96.115936 190.30241 96.115936 189.84218 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 165.86778 167.29044 cm
0 7.1728516 m
(!)s
1 0 0 -1 178.3372 174.48965 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3595.635 1994.6846 m
3647.582 1964.693 l
S
3388.0364 1997.2979 m
3240.1843 1911.9354 l
S
3413.9536 1952.408 m
3292.0186 1882.0088 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 166.14366 152.90421 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3489.5725 2136.2224 m
3489.5725 2239.8845 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 190.80661 168.10831 cm
0 8.8085938 m
(#)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 5.222168 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3834.866 1967.3063 m
3890.5752 1999.47 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 140.92896 167.29044 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(")s
0 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3240.1843 1911.9354 m
3234.6646 1902.375 3223.2627 1898.611 3214.7356 1903.5342 c
3206.2083 1908.4575 3203.7671 1920.2137 3209.2866 1929.774 c
3214.8064 1939.3345 3212.3652 1951.0907 3203.8379 1956.0139 c
3195.3105 1960.9373 3183.9089 1957.1732 3178.3892 1947.6128 c
3172.8694 1938.0524 3161.4675 1934.2885 3152.9404 1939.2117 c
3144.4131 1944.1349 3141.9719 1955.8911 3147.4915 1965.4515 c
3153.0112 1975.012 3150.5701 1986.7682 3142.0427 1991.6914 c
3133.5156 1996.6146 3122.1138 1992.8507 3116.594 1983.2903 c
3111.0742 1973.7299 3099.6724 1969.9659 3091.1453 1974.8892 c
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 153.39838 188.98575 cm
0 7.3681641 m
(*3)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3240.1843 1911.9354 m
3251.2236 1911.9354 3260.1843 1903.9199 3260.1843 1894.0449 c
3260.1843 1884.1698 3251.2236 1876.1544 3240.1843 1876.1544 c
3229.1448 1876.1544 3220.1843 1868.1389 3220.1843 1858.2639 c
3220.1843 1848.3888 3229.1448 1840.3734 3240.1843 1840.3734 c
3251.2236 1840.3734 3260.1843 1832.3579 3260.1843 1822.4828 c
3260.1843 1812.6078 3251.2236 1804.5923 3240.1843 1804.5923 c
3229.1448 1804.5923 3220.1843 1796.5769 3220.1843 1786.7018 c
3220.1843 1776.8268 3229.1448 1768.8113 3240.1843 1768.8113 c
3251.2236 1768.8113 3260.1843 1760.7958 3260.1843 1750.9208 c
S
1 J
3556.647 1861.5413 m
3556.647 1897.3362 3527.6294 1926.3538 3491.8345 1926.3538 c
3456.0396 1926.3538 3427.022 1897.3362 3427.022 1861.5413 c
3427.022 1825.7462 3456.0396 1796.7288 3491.8345 1796.7288 c
3527.6294 1796.7288 3556.647 1825.7462 3556.647 1861.5413 c
h
S
0 J
3455.5427 1856.7288 m
3518.501 1856.7288 l
S
3487.022 1825.2495 m
3487.022 1888.2079 l
S
1 J
3810.7737 2092.6938 m
3810.7737 2128.489 3781.7561 2157.5063 3745.9612 2157.5063 c
3710.1663 2157.5063 3681.1487 2128.489 3681.1487 2092.6938 c
3681.1487 2056.8989 3710.1663 2027.8815 3745.9612 2027.8815 c
3781.7561 2027.8815 3810.7737 2056.8989 3810.7737 2092.6938 c
h
S
0 J
3709.6694 2087.8813 m
3772.6279 2087.8813 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 212.64807 93.178566 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4610.9565 3498.575 m
4791.3633 3394.417 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 243.70262 93.178566 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4791.3633 3394.417 m
4944.6396 3482.9111 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 230.95732 114.76402 cm
0 7.1728516 m
(!)s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
($)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4765.4463 3409.3801 m
4765.4463 3246.751 l
S
4817.2803 3409.3801 m
4817.2803 3246.751 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 289.02292 100.31065 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
1 0 0 -1 306.21646 107.50986 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6109.5386 3359.5 m
6205.167 3304.2888 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 318.68588 100.31065 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6392.4512 3306.9021 m
6444.3984 3336.8938 l
S
6418.3687 3262.0122 m
6470.3154 3292.0039 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 331.1553 107.60752 cm
0 7.3681641 m
(*!)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6651.9966 3334.2805 m
6699.9556 3306.5913 l
S
7702.6372 3322.5469 m
7284.6099 3322.5469 l
S
CM
388.02737 99.872658 m
388.02737 99.872658 379.00394 97.614304 379.00394 97.614304 c
379.00394 97.614304 380.13187 98.884628 380.13187 99.872658 c
380.13187 101.29819 379.00394 103.13102 379.00394 103.13102 c
379.00394 103.13102 388.02737 99.872658 388.02737 99.872658 c
388.02737 99.872658 388.02737 99.872658 388.02737 99.872658 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 432.34998 107.5648 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8569.8281 3394.417 m
8727.8379 3303.1902 l
S
8621.6621 3424.3435 m
8753.7549 3348.0801 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 444.8194 100.36558 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8915.1211 3305.8035 m
8967.0684 3335.7952 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 432.62585 121.96323 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8819.2158 3126.6729 m
8819.2158 3062.7666 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 401.57132 107.577 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8569.8281 3394.417 m
8390.0332 3290.6123 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 420.15643 85.979347 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8569.8281 3394.417 m
8569.8281 3578.3818 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 457.28879 107.66245 cm
0 7.3681641 m
(*!)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
9174.667 3333.1819 m
9222.626 3305.4927 l
S
9120.0215 3199.9426 m
9120.0215 3235.7375 9091.0039 3264.7551 9055.209 3264.7551 c
9019.4141 3264.7551 8990.3965 3235.7375 8990.3965 3199.9426 c
8990.3965 3164.1477 9019.4141 3135.1301 9055.209 3135.1301 c
9091.0039 3135.1301 9120.0215 3164.1477 9120.0215 3199.9426 c
h
S
0 J
9018.917 3195.1301 m
9081.875 3195.1301 l
S
1 J
8892.9824 3431.0381 m
8892.9824 3466.833 8863.9648 3495.8506 8828.1699 3495.8506 c
8792.375 3495.8506 8763.3574 3466.833 8763.3574 3431.0381 c
8763.3574 3395.2429 8792.375 3366.2256 8828.1699 3366.2256 c
8863.9648 3366.2256 8892.9824 3395.2429 8892.9824 3431.0381 c
h
S
0 J
8791.8779 3426.2256 m
8854.8359 3426.2256 l
S
8823.3574 3394.7463 m
8823.3574 3457.7046 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 269.22897 105.52158 cm
0 7.7001953 m
(6)s
1 0 0 -1 19.960176 97.360664 cm
0 7.1728516 m
(!)s
0 15.541179 m
(")s
1 0 0 -1 32.429588 104.55988 cm
0 7.1728516 m
(!)s
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
677.48273 3393.28 m
729.42969 3363.2883 l
S
916.71381 3365.9019 m
1070.1968 3454.5151 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 32.429588 118.95832 cm
0 7.1728516 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
820.80859 3186.771 m
820.80859 3122.8647 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.6509196 104.57209 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
469.88428 3395.8933 m
415.28577 3364.3708 l
S
2019.9233 3322.2219 m
1361.1733 3322.2219 l
S
CM
103.89168 99.888901 m
103.89168 99.888901 94.86824 97.630547 94.86824 97.630547 c
94.86824 97.630547 95.99617 98.900871 95.99617 99.888901 c
95.99617 101.31444 94.86824 103.14726 94.86824 103.14726 c
94.86824 103.14726 103.89168 99.888901 103.89168 99.888901 c
103.89168 99.888901 103.89168 99.888901 103.89168 99.888901 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 76.832108 113.65648 cm
0 7.7001953 m
(7\)8)[ 2.778320 7.778320 0.000000 ] xS
1 0 0 -1 135.74487 94.431313 cm
0 7.1728516 m
(!)s
1 0 0 -1 148.21429 101.63053 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2993.1768 3451.8672 m
3045.1238 3421.8755 l
S
3245.3665 3402.0439 m
3398.8494 3490.6575 l
S
3219.4492 3446.9338 m
3372.9324 3535.5471 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 148.21429 116.02897 cm
0 7.1728516 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
3136.5027 3245.3582 m
3136.5027 3181.4519 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 117.43562 101.64274 cm
0 7.1972656 m
(12)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2785.5784 3454.4805 m
2707.3196 3409.2976 l
S
3211.0237 3549.6587 m
3211.0237 3585.4536 3182.0063 3614.4712 3146.2112 3614.4712 c
3110.4163 3614.4712 3081.3987 3585.4536 3081.3987 3549.6587 c
3081.3987 3513.8635 3110.4163 3484.8462 3146.2112 3484.8462 c
3182.0063 3484.8462 3211.0237 3513.8635 3211.0237 3549.6587 c
h
S
0 J
3109.9197 3544.8462 m
3172.8779 3544.8462 l
S
3141.3987 3513.3669 m
3141.3987 3576.3252 l
S
1 J
2925.4326 3319.553 m
2925.4326 3355.3479 2896.415 3384.3655 2860.6201 3384.3655 c
2824.8252 3384.3655 2795.8076 3355.3479 2795.8076 3319.553 c
2795.8076 3283.7581 2824.8252 3254.7405 2860.6201 3254.7405 c
2896.415 3254.7405 2925.4326 3283.7581 2925.4326 3319.553 c
h
S
0 J
2824.3284 3314.7405 m
2887.2866 3314.7405 l
S
1 J
278.69012 4589.4351 m
278.69012 4877.4038 l
S
278.69012 4877.4038 m
482.31479 5081.0283 l
S
482.31479 5081.0283 m
770.28351 5081.0283 l
S
770.28351 5081.0283 m
973.9082 4877.4038 l
S
973.9082 4877.4038 m
973.9082 4589.4351 l
S
922.07379 4855.9336 m
922.07379 4610.9058 l
S
973.9082 4589.4351 m
770.28351 4385.8105 l
S
770.28351 4385.8105 m
482.31479 4385.8105 l
S
482.31479 4385.8105 m
278.69012 4589.4351 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 94.932892 23.888966 cm
0 7.1728516 m
(!)s
1 0 0 -1 107.4023 31.088184 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2176.937 4862.7139 m
2228.884 4832.7227 l
S
2151.0198 4817.8242 m
2202.9668 4787.8325 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 119.59339 23.986622 cm
0 7.3681641 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2416.168 4835.3359 m
2466.1882 4864.2148 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 107.67818 45.486622 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
2320.2627 4656.2051 m
2320.2627 4572.2988 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 77.739357 31.088184 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
1969.3385 4865.3271 m
1883.8672 4815.9805 l
S
2758.6316 4779.7188 m
2758.6316 4815.5137 2729.614 4844.5312 2693.8191 4844.5312 c
2658.0242 4844.5312 2629.0066 4815.5137 2629.0066 4779.7188 c
2629.0066 4743.9238 2658.0242 4714.9062 2693.8191 4714.9062 c
2729.614 4714.9062 2758.6316 4743.9238 2758.6316 4779.7188 c
h
S
0 J
2657.5273 4774.9062 m
2720.4858 4774.9062 l
S
1 J
2380.9382 4961.207 m
2380.9382 4997.002 2351.9209 5026.0195 2316.1257 5026.0195 c
2280.3308 5026.0195 2251.3132 4997.002 2251.3132 4961.207 c
2251.3132 4925.4121 2280.3308 4896.3945 2316.1257 4896.3945 c
2351.9209 4896.3945 2380.9382 4925.4121 2380.9382 4961.207 c
h
S
0 J
2279.8342 4956.3945 m
2342.7925 4956.3945 l
S
2311.3132 4924.915 m
2311.3132 4987.8735 l
S
1 J
3485.1797 4733.4194 m
3067.1523 4733.4194 l
S
CM
177.1545 29.329025 m
177.1545 29.329025 168.13106 27.070665 168.13106 27.070665 c
168.13106 27.070665 169.25899 28.340992 169.25899 29.329025 c
169.25899 30.754557 168.13106 32.587383 168.13106 32.587383 c
168.13106 32.587383 177.1545 29.329025 177.1545 29.329025 c
177.1545 29.329025 177.1545 29.329025 177.1545 29.329025 c
h
f
0.050000001 0 0 -0.050000001 -5 266 cm
3937.0742 4551.9888 m
3937.0742 4839.9575 l
S
3937.0742 4839.9575 m
4140.6992 5043.582 l
S
4140.6992 5043.582 m
4428.668 5043.582 l
S
4428.668 5043.582 m
4632.2925 4839.9575 l
S
4632.2925 4839.9575 m
4632.2925 4551.9888 l
S
4632.2925 4551.9888 m
4428.668 4348.3638 l
S
4428.668 4348.3638 m
4140.6992 4348.3638 l
S
4140.6992 4348.3638 m
3937.0742 4551.9888 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 236.69751 23.639196 cm
0 7.1728516 m
(!)s
1 0 0 -1 245.16069 35.287777 cm
0 7.1728516 m
(!)s
1 0 0 -1 236.41919 47.034012 cm
0 7.3681641 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4632.2925 4839.9575 m
4808.9595 4897.3599 l
S
4983.4761 4822.5376 m
5013.9619 4780.5776 l
S
4993.2969 4582.9253 m
4973.8154 4556.1113 l
S
4798.8018 4497.8862 m
4632.2925 4551.9888 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 223.00378 13.690121 cm
0 7.1728516 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4661.2168 5018.1509 m
4603.3677 5018.1509 l
S
4650.3003 4957.0903 m
4614.2847 4957.0903 l
S
4639.3833 4896.0298 m
4625.2012 4896.0298 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 223.00378 56.885433 cm
0 7.1728516 m
(")s
0 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4632.2925 4394.3228 m
4632.2925 4521.9888 l
S
CM
225.11462 47.783871 m
228.11462 47.783871 l
226.9706 38.832497 l
226.61462 38.40057 l
226.20743 39.233124 l
225.11462 47.783871 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 57.945408 34.977951 cm
0 7.7001953 m
(6)s
1 0 0 -1 241.42274 9.9454679 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
4934.3594 5015.7124 m
4961.9058 5100.4907 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 259.83502 35.287777 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
5170.4795 4695.9731 m
5267.5986 4695.9731 l
S
6027.3101 4733.4194 m
5609.2827 4733.4194 l
S
CM
304.26099 29.329025 m
304.26099 29.329025 295.23755 27.070665 295.23755 27.070665 c
295.23755 27.070665 296.36548 28.340992 296.36548 29.329025 c
296.36548 30.754557 295.23755 32.587383 295.23755 32.587383 c
295.23755 32.587383 304.26099 29.329025 304.26099 29.329025 c
304.26099 29.329025 304.26099 29.329025 304.26099 29.329025 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 426.19443 31.325035 cm
0 7.1728516 m
(!)s
1 0 0 -1 438.54932 24.025772 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8791.5361 4831.6084 m
8841.9736 4861.4067 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 451.32397 31.075787 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
9049.6025 4861.1978 m
9087.6875 4839.7158 l
S
8604.3213 4826.999 m
8446.1299 4916.228 l
S
8578.9414 4782.0034 m
8446.7275 4856.5791 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 426.6142 45.674313 cm
0 7.1728516 m
(45)[ 6.669922 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
8697.3467 4651.479 m
8697.9775 4588.5366 l
S
8446.1299 4916.228 m
8199.0312 4770.2427 l
S
8199.0312 4770.2427 m
7949.0557 4911.2432 l
S
7949.0557 4911.2432 m
7701.958 4765.2578 l
S
7701.958 4765.2578 m
7451.9824 4906.2583 l
S
7451.9824 4906.2583 m
7204.8848 4760.2729 l
S
7204.8848 4760.2729 m
6954.9087 4901.2729 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 311.77969 32.419689 cm
0 7.3681641 m
(\)"*)[ 7.778320 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -5 266 cm
6954.9087 4901.2729 m
6788.126 4802.7378 l
S
8917.9102 4676.1924 m
8917.9102 4711.9873 8888.8926 4741.0049 8853.0977 4741.0049 c
8817.3027 4741.0049 8788.2852 4711.9873 8788.2852 4676.1924 c
8788.2852 4640.3975 8817.3027 4611.3799 8853.0977 4611.3799 c
8888.8926 4611.3799 8917.9102 4640.3975 8917.9102 4676.1924 c
h
S
0 J
8816.8057 4671.3799 m
8879.7646 4671.3799 l
S
8848.2852 4639.9004 m
8848.2852 4702.8589 l
S
1 J
9182.3506 4964.9609 m
9182.3506 5000.7559 9153.333 5029.7734 9117.5381 5029.7734 c
9081.7432 5029.7734 9052.7256 5000.7559 9052.7256 4964.9609 c
9052.7256 4929.1655 9081.7432 4900.1484 9117.5381 4900.1484 c
9153.333 4900.1484 9182.3506 4929.1655 9182.3506 4964.9609 c
h
S
0 J
9081.2471 4960.1484 m
9144.2051 4960.1484 l
S
ep
end
%%Trailer
%%EOF
