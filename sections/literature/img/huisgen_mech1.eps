%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: huisgen_mech1.eps
%%Creator: ChemDraw Professional(tm) 16.0.1.4
%%CreationDate: 2020-05-11 08:26:30 +0000
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 487 241
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: © 1985–2017 PerkinElmer Informatics, Inc.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 487 241
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: GNLRPR+Helvetica
%!FontType1-1.0: GNLRPR+Helvetica 1.0000.0.0000
14 dict begin/FontName /GNLRPR+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /R put
dup 35 /O put
dup 36 /two put
dup 37 /C put
dup 38 /P put
dup 39 /h put
dup 40 /three put
dup 41 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<



B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592D00000000020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA0007000000562BBA0002000500562B3031331121112711211142048EB8FCE205BDFA43B8044DFBB30000000100C4000002D5059200080023B10801B80133400C0404070C04079605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F60000000100400000041E059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA000000010031FFD9041A
059A003100C4401F490C532D6529632D7529752D069626014B082B0A182B140D03F93114350D20B8012340141135107F0D0D311B3524050735310D1896274411B8014A400F0A382E6F021F2920810327023347321076C418D4EDF4ED10F5EDEDF4ED003FED3FED12392FF4FDE610ED10ED111239011112393130437940362F301926000905261D2522260600032800040308300A28011C231F28001A251828010401072800092F0728001E211B280119261B2801002B2B2B2B012B2B2B103C2B2B2B2B818181005D015D0402353316171633323635342623220607351E013332373635342623220706072334373621321615140706071E01151400230116E5BC0C2846B78EACB5A11225131C26166541729865B4452605B2406E0115DBF0472C46717FFEF2F8270117C88B3F719878947601019F03022038906B7478427AA070C8C3B98452331D1FB180CDFEFE0000000002005AFFDA057105E5001D001E00B1403B1B0597019605031F011F0482018705891305530803861D111115063A1D030C3A15091E021E1E190331023B1031111A20093119191F20A1216A66182B2B4EF44DED4E10F64DEDF4ED12392F003F3FED3FED12392F10ED31304379403A001C172513260E251B260B160932000D1410320112110F10071C0932000500033201010204030A180C32000F120C3200081A06320104010632012B2B2B2B01103C103C2B2B103C103C2B2B2B2B2B2B815D015D080117232E0123220011101233323736373306070621202726111037362123041E013411C221C5B2D9FEF5F1EFDC733D1EC21A92AFFED7FF00AEE5ACBA01472805E5FEDABB8EA6FECFFEC5FEFEFEBFA95991E89DBD9BCD01AC0145D0E200000002009C0000052A05BD0009000A007640143701380602070117012701470158020507010202B8019B4017120606070207080301020806080A030A0A010608020302B8019BB505041A0C0708B8019B400A0900190B0CA0217670182B2B4EF43C4DFD3C4E10F63C4DFD3C11123939392F003F3F3C3F3C12393904872E2B877DC53130005D015D13330111331123011123019CEB02E6BDDFFD0FBE023A05BDFB5A04A6FA4304A5FB5B05BD000000030050FFD505E805E5000F001B001C008A402C8705C700C701C302C808C90A064308153A0F031B3A07091C021C1C0B1231031A1E18310B191D1ED8216A66182B2B4EF44DED4E10F64DED12392F003F3FED3FED313043794032001A0D26012509250526160E18320014001232011A081832001006123201170C1532011302153201190A1B320011041B32002B2B2B2B012B2B2B2B2B2B2B2B81005D0017161110070221202726111037122100123510002322001114122103049BBB92A7C4FE95FEADC2AD94BE0174011BEBFEF1EBE4FEE0F701150E05E5FAC3FED0FEB7DAFF00E0D801


00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/C 4 def
/N 5 def
/O 6 def
/P 7 def
/R 8 def
/h 9 def
/u20B8 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D184194DC83C1FA8CC47E0FA3502698ED749907FE4D5A0F8823ADB9FED67C3EB209665DC2531F3E7B9C105852DE6D94CD503F07FCE430C1EC82A169B45C5B92CE433222D4D6474027559C08836A006CD5017A25DB449F2275B7925B7538889624AD4E27E1868E56757DE3333F92BDDF373387FA385C691C67DA4793C73F2A63B8710215C813EEA517B954E38B9D3A90257A04B1033504362B6E8F859C8990EDC516835196CE443F0171B8D46947A44370845E27E7A423D12A09C5FF85E050E636DFC516F9D9429732058458F94CD40D5791E6EE6B1E3D7BF36C445D9C5B5FECB37520B9D96B2EE4ABF60A3926C617E061E443F8EDED4816EBA248B5AC705DFF7F63177A6CD1D91DD8CC602684C9EA09272E27105D1F87542736CEA7CF131B6A43673BB11F95A120B9BD398C6087EC499E8243566C0CEFD5E08D7ED8388BA4AC4B4FCB585C1A1EEE6C89BD4730E2DF80563C24FF92913AC852506CC8C65D0A8F8EAE9796719D7476316FB1447651299094741FDF606D0907CCDC18A8C1C3287C4F296275EC1569E2387D1015EEE84E46EDA19967FDD37DB0DDC60C8D6257728D486124E0CDDAC23216242A7A998BD52E5FFDEAB0EBFE90332D82CFB864826E50E77924DB8A70FCC8C060011A750FEBB1885272E18966AB598B8FF70198ADD6DB22B34290CE16541BFF6A72FC099F95A5D88584B942D4B59119DCF801660B0BB0A062B7733ED
1C36C29CE9D8BDD93EE0F285FE15DC95241E0526026F5467790432FE65316F3C6FB2977CB0A93F34E2B956E5F9632D659EA96C68F0E7B672905E12CFBF1429C48FA2408C95D871F9A8B300820F0B6393A06F700C72B8AA46F9D7B958F504F0875450635A627473BC569475EDBDE32BB0A5A807A390B0B64BFCF79CAA57265A10C65435AADBA9CB2A43E10FC40BFD1B8D4CBEAFAEC7C834DBB0CBB2019054FC9EFA7AE3DF3E165A1AAEB977C485F6C0FA96420C980A35387B553C5C6F1A40A60D544D69C5EEDC07AB28ED907C1684624DEE62241847217E7C6853125604B443E39DD570E38AA517F4FE9045FF96684DE6D9F70530221CC5E41462658E5146329C6B439532C5D55CACDF53CE68EB9D4A706FE969A138ABA13D7939D018516D22D7907793A74BA47844C9713500A847C91B688DC874BCF93C6DBD94CB0A80CFEBE562523A57E09C93AAA82CF1F77C40DAE84CD5390B4EA784C6D47E794C99A94833EE2B56429E1877243906449CD928E7780EF5ACC400807AF83ECE157408CD423F8036249A194060DB63106DBCF60E6BEE12E8EFE51B7B081EC66B448C849DE967667F627DA844C5766E429AF856E5E99252E1DCE7A5104F47E8C67647DF3D451153E93EE4E61F3B6AB03F823DECADA50879D12BCC41907E65F571F41C655BC6C23CFB6AD996C11020DFC2EF1632D308EFB53B95E2FDDB5B8FEB26B8866434926E67D9D87832DD466B2F63A93362352D63D81AF4FAE0CB6B7BEAB5750B82C9E98D4FB10D0DF2C5088DC18C6E09FAE2790D1B3113663D08B7192AAE47D3F479E7420EA57C21A6038B4D54CDA927BCA19F58CF8364FBF6614948F1A1D8DC2A9ABA78C33EA9AC23ECB67A66AA3DB9112B9F96DB91230CB455E211CD69532C6E2F97362C6F0A764BAFF8F88DF2FCC0DD541A6E6E2D25C72D12171F90912857825C0F5961B55E9DF302DA7F753F456C5BA0C22828FC44C34E2E32FF604AD9D2E16185FAA1DBFDDEF883E2A20F3DFDF48F26A354A9FEE8682C2A08CBB951BEC7670D1AB565F48B8D74EA645D10EE98A2887EFBEFE2096BA7D3DC6064B67B063DFFBF4076EC025E82CD98B7F1EF9E31AF6D5DC34BE2F942551226175C39AF63AA859D01EF48DE95E369CAC644718FB353C0416F857FB8DDF56A39479A1325FB5CC937EDC96783B63B7EBFE202FCCE273A7F119DE70E5059BCDFF10469DD1042105BE3F1F8F3F8AB754F8D6D32DE17A3131F63814429C9BDB62E83557BF06837142924E8DBB07D7407F2930A770FEBCA75F8363F7E1B135801164CCE5BD2BBB7E28D185039E25D3726A6AACC3E3F65028CB0BB8720C1A7FB554AB95BF3D7B02088390A8400D6033528C0AFD52914541D5E3BE89D010BB1D9FEDE82886337345054B6A08B7467E287972DB84A1A3206BF859B58D603B2F38D2C6038226076D37268213F89CC
F3D0590C8B8BBDC6082F7A37C9A669135A451F5B0F776A23F78A6C00625E4A3BE24DC1358730A11903EE337A377DA9B846951A3BC3960878EAFFFA9C89A81B4BC22FF14CA97A6EC9221999437C3ABC6F2DCF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/GNLRPR+Helvetica cguidfix
/F1.1/GNLRPR+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 241 m
487 241 l
487 0 l
0 0 l
h
0 241 m
W
0 0 487 241 rc
-1 241 m
488 241 l
488 -1 l
-1 -1 l
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 47.437824 220.06673 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 47.406101 205.66833 cm
0 7.1728516 m
(!)s
20 w
1 J
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1460.7523 1600.6962 m
1460.5674 1684.6024 l
S
1512.5864 1600.8104 m
1512.4016 1684.7166 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 15.749728 198.59425 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1345.1934 1854.5033 m
1308.1666 1875.7721 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 59.923069 227.33612 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1543.4354 1453.0262 m
1615.2062 1411.7998 l
S
3098.4768 1667.3757 m
2321.5928 1667.3757 l
S
CM
144.7686 207.63121 m
144.7686 207.63121 131.23344 204.24191 131.23344 204.24191 c
131.23344 204.24191 132.92384 206.14821 132.92384 207.63121 c
132.92384 209.55177 131.23344 212.02051 131.23344 212.02051 c
131.23344 212.02051 144.7686 207.63121 144.7686 207.63121 c
144.7686 207.63121 144.7686 207.63121 144.7686 207.63121 c
h
f
/Cs2 SC
0 0 0 sc
1 0 0 -1 107.62358 221.87364 cm
0 7.7001953 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 10 m
(\()s
1 0 0 -1 199.03885 209.57628 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
1 0 0 -1 184.64053 209.5162 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4383.9819 1710.6577 m
4280.0752 1711.0912 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 158.32227 197.1145 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4140.7407 1823.8331 m
4115.1406 1868.6046 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 206.18596 222.17328 cm
0 7.3681641 m
(%#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(")s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4550.4014 1609.8046 m
4580.7588 1556.7139 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 158.31255 219.68956 cm
0 7.1972656 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 9.4970703 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
16.402588 7.1972656 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4107.8267 1614.5857 m
4052.0359 1559.0146 l
S
4099.4824 1325.7139 m
4099.4824 1361.5089 4070.4646 1390.5264 4034.6697 1390.5264 c
3998.8748 1390.5264 3969.8572 1361.5089 3969.8572 1325.7139 c
3969.8572 1289.9189 3998.8748 1260.9014 4034.6697 1260.9014 c
4070.4646 1260.9014 4099.4824 1289.9189 4099.4824 1325.7139 c
h
S
0 J
3998.3782 1320.9014 m
4061.3364 1320.9014 l
S
4029.8572 1289.4222 m
4029.8572 1352.3806 l
S
1 J
4700.9663 1861.0673 m
4700.9663 1896.8623 4671.9487 1925.8798 4636.1538 1925.8798 c
4600.3589 1925.8798 4571.3413 1896.8623 4571.3413 1861.0673 c
4571.3413 1825.2723 4600.3589 1796.2548 4636.1538 1796.2548 c
4671.9487 1796.2548 4700.9663 1825.2723 4700.9663 1861.0673 c
h
S
0 J
4599.8623 1856.2548 m
4662.8203 1856.2548 l
S
1 J
6808.2505 1569.7844 m
6808.2505 1857.7532 l
S
6756.416 1599.7111 m
6756.416 1827.8265 l
S
6808.2505 1857.7532 m
6558.8618 2001.7375 l
S
6558.8618 2001.7375 m
6309.4736 1857.7532 l
S
6558.8618 1941.8844 m
6361.3081 1827.8265 l
S
6309.4736 1857.7532 m
6309.4736 1569.7844 l
S
6309.4736 1569.7844 m
6558.8618 1425.8 l
S
6361.3081 1599.7111 m
6558.8618 1485.6532 l
S
6558.8618 1425.8 m
6808.2505 1569.7844 l
S
6309.4736 1857.7532 m
6035.5991 1946.7405 l
S
6035.5991 1946.7405 m
5866.3354 1713.7688 l
S
5866.3354 1713.7688 m
6035.5991 1480.7972 l
S
6035.5991 1480.7972 m
6309.4736 1569.7844 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 271.44144 234.83795 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6016.769 1506.7144 m
5958.1875 1326.4182 l
S
6066.0669 1490.6967 m
6007.4849 1310.4005 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 271.44144 184.15334 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6066.0669 1936.8409 m
6007.5908 2116.8113 l
S
6016.769 1920.8232 m
5958.2935 2100.7937 l
S
5866.3354 1713.7688 m
5578.3667 1713.7688 l
S
5839.9243 1661.9344 m
5608.2935 1661.9344 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 246.10828 221.8674 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5578.3667 1713.7688 m
5496.3008 1571.6263 l
S
5687.1274 1801.0879 m
5687.1274 1859.6135 5734.6318 1907.1183 5793.1577 1907.1183 c
5819.8218 1907.1183 5846.3037 1896.6331 5865.7407 1878.3801 c
S
CM
272.95941 200.9456 m
272.95941 200.9456 272.15482 195.5289 272.15482 195.5289 c
272.15482 195.5289 271.57831 196.81781 271.28705 197.08099 c
270.99579 197.34418 269.94147 197.5289 269.94147 197.5289 c
269.94147 197.5289 272.95941 200.9456 272.95941 200.9456 c
272.95941 200.9456 272.95941 200.9456 272.95941 200.9456 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
6093.1392 2286.0842 m
6161.3267 2262.0586 6197.1729 2187.2102 6173.147 2119.0227 c
6159.4536 2080.1589 6126.501 2048.7886 6087.0103 2037.0233 c
S
CM
278.61072 176.59622 m
278.61072 176.59622 282.23499 177.86859 282.23499 177.86859 c
282.23499 177.86859 282.40399 176.98888 282.65695 176.6958 c
282.90994 176.40271 284.23499 175.55145 284.23499 175.55145 c
284.23499 175.55145 278.61072 176.59622 278.61072 176.59622 c
278.61072 176.59622 278.61072 176.59622 278.61072 176.59622 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
4513.1772 1832.8346 m
4532.9526 2126.1704 4787.1021 2348.2178 5080.438 2328.4429 c
5332.3579 2311.4597 5552.1133 2096.8425 5575.0503 1845.395 c
S
CM
256.80231 202.94089 m
256.80231 202.94089 257.95093 197.12874 257.95093 197.12874 c
257.95093 197.12874 257.06979 198.46707 256.7525 198.73026 c
256.43524 198.99344 255.53986 199.12874 255.53986 199.12874 c
255.53986 199.12874 256.80231 202.94089 256.80231 202.94089 c
256.80231 202.94089 256.80231 202.94089 256.80231 202.94089 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
7555.8105 1693.5885 m
7006.3433 1693.5885 l
S
CM
367.63379 206.32057 m
367.63379 206.32057 354.09863 202.93428 354.09863 202.93428 c
354.09863 202.93428 355.79053 204.83908 355.79053 206.32057 c
355.79053 208.23958 354.09863 210.70686 354.09863 210.70686 c
354.09863 210.70686 367.63379 206.32057 367.63379 206.32057 c
367.63379 206.32057 367.63379 206.32057 367.63379 206.32057 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
10126.913 1781.6395 m
10126.913 1494.6395 l
S
10075.253 1751.8136 m
10075.253 1524.4655 l
S
10126.913 1494.6395 m
9878.3633 1351.1395 l
S
9878.3633 1351.1395 m
9629.8145 1494.6395 l
S
9878.3633 1410.7914 m
9681.4746 1524.4655 l
S
9629.8145 1494.6395 m
9629.8145 1781.6395 l
S
9629.8145 1781.6395 m
9878.3633 1925.1395 l
S
9681.4746 1751.8136 m
9878.3633 1865.4877 l
S
9878.3633 1925.1395 m
10126.913 1781.6395 l
S
9629.8145 1494.6395 m
9356.8613 1405.9517 l
S
9356.8613 1405.9517 m
9188.167 1638.1395 l
S
9188.167 1638.1395 m
9356.8613 1870.3274 l
S
9252.0215 1638.1395 m
9376.5938 1809.5974 l
S
9356.8613 1870.3274 m
9629.8145 1781.6395 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 437.5195 188.02005 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
9356.8613 1870.3274 m
9304.5029 2031.4681 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 437.5195 238.53416 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
9338.0947 1431.7816 m
9279.8311 1252.467 l
S
9387.2256 1415.8179 m
9328.9629 1236.5033 l
S
9188.167 1638.1395 m
8901.167 1638.1395 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 412.27249 225.60692 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8901.167 1638.1395 m
8846.9053 1544.1565 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 412.27249 200.75198 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8815.4961 1786.5254 m
8901.167 1638.1395 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 412.70789 181.85533 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8759.9766 1986.9468 m
8763.9844 2160.9087 l
S
8839.5537 2349.1479 m
8954.4639 2481.874 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 380.63193 208.04886 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8641.1309 1819.4067 m
8602.5283 1797.1198 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 382.67334 174.34645 cm
0 7.1972656 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 9.4970703 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
16.402588 7.1972656 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8650.0693 2327.5173 m
8594.7412 2357.438 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 417.11905 157.48582 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8983.8525 2476.2227 m
8923.3047 2650.9268 l
S
8934.876 2459.2488 m
8874.3281 2633.9529 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 435.97342 173.80936 cm
0 7.3681641 m
(#")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8954.4639 2481.874 m
9129.7324 2448.1704 l
S
8536.8125 2596.0623 m
8536.8125 2631.8572 8507.7949 2660.8748 8472 2660.8748 c
8436.2051 2660.8748 8407.1875 2631.8572 8407.1875 2596.0623 c
8407.1875 2560.2673 8436.2051 2531.2498 8472 2531.2498 c
8507.7949 2531.2498 8536.8125 2560.2673 8536.8125 2596.0623 c
h
S
0 J
8435.708 2591.2498 m
8498.667 2591.2498 l
S
8467.1875 2559.7705 m
8467.1875 2622.729 l
S
1 J
8849.6475 2517.1411 m
8781.7695 2498.9534 8711.9102 2539.2861 8693.7227 2607.1638 c
8683.8643 2643.958 8691.5967 2684.9387 8714.1846 2715.6106 c
S
CM
417.18729 152.8456 m
417.18729 152.8456 412.2124 154.55859 412.2124 154.55859 c
412.2124 154.55859 413.44608 154.95628 413.70926 155.21947 c
413.97244 155.48265 414.2124 156.55859 414.2124 156.55859 c
414.2124 156.55859 417.18729 152.8456 417.18729 152.8456 c
417.18729 152.8456 417.18729 152.8456 417.18729 152.8456 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
8294.6338 3080.3279 m
8294.6338 3367.3279 l
S
8242.9736 3110.1538 m
8242.9736 3337.502 l
S
8294.6338 3367.3279 m
8046.0845 3510.8279 l
S
8046.0845 3510.8279 m
7797.5352 3367.3279 l
S
8046.0845 3451.176 m
7849.1953 3337.502 l
S
7797.5352 3367.3279 m
7797.5352 3080.3279 l
S
7797.5352 3080.3279 m
8046.0845 2936.8279 l
S
7849.1953 3110.1538 m
8046.0845 2996.4797 l
S
8046.0845 2936.8279 m
8294.6338 3080.3279 l
S
7797.5352 3367.3279 m
7524.582 3456.0156 l
S
7524.582 3456.0156 m
7355.8877 3223.8279 l
S
7355.8877 3223.8279 m
7524.582 2991.6399 l
S
7524.582 2991.6399 m
7797.5352 3080.3279 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 345.90555 159.24974 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
7505.8154 3017.47 m
7447.5527 2838.1555 l
S
7554.9473 3001.5061 m
7496.6841 2822.1917 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 348.3428 108.17295 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
7551.9141 3447.135 m
7524.8306 3639.8435 l
S
7502.7261 3425.9333 m
7473.6733 3632.6538 l
S
7355.8877 3223.8279 m
7187.1934 2991.6399 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 333.38092 159.15208 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
7187.1934 2991.6399 m
7182.5376 2818.9282 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 320.10117 141.07004 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6998.8159 3052.8474 m
7187.1934 2991.6399 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 320.10117 126.72003 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6914.2402 3180.6306 m
6914.2402 3263.5681 l
S
6997.8003 3394.478 m
7187.1934 3456.0156 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 289.32062 149.6024 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6803.8315 3000.1113 m
6766.9517 2973.3164 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 292.36505 118.29752 cm
0 7.1972656 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 9.4970703 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
16.402588 7.1972656 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6805.4756 3446.3499 m
6769.9023 3472.1956 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 322.33832 108.66032 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
7187.1934 3456.0156 m
7040.6333 3636.6841 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 333.76782 99.869965 cm
0 7.3681641 m
(#")[ 7.778320 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
7187.1934 3456.0156 m
7191.7437 3800.5852 l
S
9268.0977 1802.5361 m
9059.3623 1869.1615 8917.0234 2093.075 8945.2852 2310.3552 c
S
CM
426.17969 171.37202 m
426.17969 171.37202 423.9566 175.06941 423.9566 175.06941 c
423.9566 175.06941 424.9545 175.21906 425.26422 175.48224 c
425.57397 175.74542 426.3103 177.06941 426.3103 177.06941 c
426.3103 177.06941 426.17969 171.37202 426.17969 171.37202 c
426.17969 171.37202 426.17969 171.37202 426.17969 171.37202 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
9364.2119 2220.9255 m
9426.3623 2220.9255 9476.8096 2170.4788 9476.8096 2108.3286 c
9476.8096 2078.1228 9464.0762 2048.1816 9442.3193 2027.228 c
S
CM
446.2106 191.21342 m
446.2106 191.21342 451.67389 190.53195 451.67389 190.53195 c
451.67389 190.53195 450.37915 189.93292 450.11597 189.6386 c
449.85278 189.34428 449.67389 188.2953 449.67389 188.2953 c
449.67389 188.2953 446.2106 191.21342 446.2106 191.21342 c
446.2106 191.21342 446.2106 191.21342 446.2106 191.21342 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
9202.4004 1992.7024 m
9202.4004 2028.4973 9173.3828 2057.5149 9137.5879 2057.5149 c
9101.793 2057.5149 9072.7754 2028.4973 9072.7754 1992.7024 c
9072.7754 1956.9075 9101.793 1927.8899 9137.5879 1927.8899 c
9173.3828 1927.8899 9202.4004 1956.9075 9202.4004 1992.7024 c
h
S
0 J
9101.2959 1987.8899 m
9164.2549 1987.8899 l
S
1 J
7355.8877 3223.8279 m
7187.1934 3456.0156 l
S
6862.54 3850.009 m
6862.54 3885.804 6833.5225 3914.8215 6797.7275 3914.8215 c
6761.9326 3914.8215 6732.915 3885.804 6732.915 3850.009 c
6732.915 3814.2139 6761.9326 3785.1965 6797.7275 3785.1965 c
6833.5225 3785.1965 6862.54 3814.2139 6862.54 3850.009 c
h
S
0 J
6761.436 3845.1965 m
6824.394 3845.1965 l
S
1 J
6690.8042 3348.906 m
6690.8042 3384.7009 6661.7866 3413.7185 6625.9917 3413.7185 c
6590.1963 3413.7185 6561.1792 3384.7009 6561.1792 3348.906 c
6561.1792 3313.1111 6590.1963 3284.0935 6625.9917 3284.0935 c
6661.7866 3284.0935 6690.8042 3313.1111 6690.8042 3348.906 c
h
S
0 J
6589.6997 3344.0935 m
6652.6582 3344.0935 l
S
6621.1792 3312.6143 m
6621.1792 3375.5728 l
S
1 J
7132.2549 3370.2273 m
7152.2847 3335.5347 7140.3828 3291.1167 7105.6899 3271.0867 c
7094.7188 3264.7524 7082.0708 3261.3633 7069.4019 3261.3633 c
S
CM
328.32745 126.11743 m
328.32745 126.11743 330.91904 129.19104 330.91904 129.19104 c
330.91904 129.19104 331.24329 128.15863 331.47009 127.93183 c
331.6969 127.70503 332.91904 127.19103 332.91904 127.19103 c
332.91904 127.19103 328.32745 126.11743 328.32745 126.11743 c
328.32745 126.11743 328.32745 126.11743 328.32745 126.11743 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
6992.9116 3508.833 m
6942.0254 3500.7734 6894.1787 3535.5356 6886.1191 3586.4224 c
6882.8052 3607.3479 6886.8823 3629.3459 6897.4751 3647.6938 c
S
CM
330.95724 113.28231 m
330.95724 113.28231 326.17249 114.8835 326.17249 114.8835 c
326.17249 114.8835 327.39444 115.3072 327.6456 115.55835 c
327.89673 115.8095 328.17249 116.8835 328.17249 116.8835 c
328.17249 116.8835 330.95724 113.28231 330.95724 113.28231 c
330.95724 113.28231 330.95724 113.28231 330.95724 113.28231 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
5306.1465 3087.0774 m
5306.1465 3374.0774 l
S
5254.4863 3116.9033 m
5254.4863 3344.2515 l
S
5306.1465 3374.0774 m
5057.5972 3517.5774 l
S
5057.5972 3517.5774 m
4809.0479 3374.0774 l
S
5057.5972 3457.9255 m
4860.708 3344.2515 l
S
4809.0479 3374.0774 m
4809.0479 3087.0774 l
S
4809.0479 3087.0774 m
5057.5972 2943.5774 l
S
4860.708 3116.9033 m
5057.5972 3003.2292 l
S
5057.5972 2943.5774 m
5306.1465 3087.0774 l
S
4809.0479 3374.0774 m
4536.0947 3462.7654 l
S
4536.0947 3462.7654 m
4367.4004 3230.5774 l
S
4367.4004 3230.5774 m
4536.0947 2998.3896 l
S
4536.0947 2998.3896 m
4809.0479 3087.0774 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 196.48119 158.91226 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4517.3281 3024.2195 m
4459.0654 2844.905 l
S
4566.4595 3008.2559 m
4508.1968 2828.9412 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 196.48119 108.39816 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4566.4595 3452.8992 m
4508.3027 3631.8879 l
S
4517.3281 3436.9353 m
4459.1709 3615.9243 l
S
4367.4004 3230.5774 m
4081.5891 3470.4016 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 159.28761 126.47434 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4081.5891 3470.4016 m
3879.5847 3396.8779 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 181.70802 103.19476 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4127.4336 3730.3987 m
4081.5891 3470.4016 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 183.97997 157.0112 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4119.5186 3056.2986 m
4151.3208 2875.9375 l
S
4170.3936 3065.269 m
4202.1963 2884.9082 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 160.78185 137.97122 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4147.5454 3046.0974 m
3985.3242 3105.1411 l
S
4367.4004 3230.5774 m
4147.5454 3046.0974 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 191.88925 93.013527 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4224.6714 3916.1274 m
4252.9971 3944.4529 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 168.56332 80.55632 cm
0 7.1972656 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 9.4970703 m
(\()s
/F1.1[ 10 0 0 -10 0 0]sf
16.402588 7.1972656 m
(&)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4285.1782 4153.7358 m
4258.7832 4199.4536 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 148.13844 103.29242 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
4037.3635 3837.8333 m
3952.3782 3837.8333 l
S
4499.6709 4198.8979 m
4499.6709 4234.6929 4470.6533 4263.7104 4434.8584 4263.7104 c
4399.0635 4263.7104 4370.0459 4234.6929 4370.0459 4198.8979 c
4370.0459 4163.1025 4399.0635 4134.0854 4434.8584 4134.0854 c
4470.6533 4134.0854 4499.6709 4163.1025 4499.6709 4198.8979 c
h
S
0 J
4398.5669 4194.0854 m
4461.5249 4194.0854 l
S
1 J
4296.3008 4470.2275 m
4296.3008 4506.0225 4267.2832 4535.04 4231.4883 4535.04 c
4195.6934 4535.04 4166.6758 4506.0225 4166.6758 4470.2275 c
4166.6758 4434.4326 4195.6934 4405.415 4231.4883 4405.415 c
4267.2832 4405.415 4296.3008 4434.4326 4296.3008 4470.2275 c
h
S
0 J
4195.1963 4465.415 m
4258.1548 4465.415 l
S
4226.6758 4433.936 m
4226.6758 4496.8945 l
S
1 J
4497.8818 4016.2043 m
4642.104 4054.8486 4790.5361 3969.1516 4829.1802 3824.929 c
4858.6699 3714.8716 4810.5229 3589.7339 4714.8691 3527.8259 c
S
CM
209.89525 116.31847 m
209.89525 116.31847 215.2932 115.46645 215.2932 115.46645 c
215.2932 115.46645 214.00664 114.89874 213.74345 114.6087 c
213.48027 114.31868 213.2932 113.26247 213.2932 113.26247 c
213.2932 113.26247 209.89525 116.31847 209.89525 116.31847 c
209.89525 116.31847 209.89525 116.31847 209.89525 116.31847 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
4444.5229 3482.6147 m
4384.0552 3447.7039 4306.6377 3468.448 4271.7266 3528.9155 c
4252.8984 3561.5266 4249.7065 3602.5955 4263.2695 3637.7244 c
S
CM
193.90135 105.91442 m
193.90135 105.91442 189.77234 108.57084 189.77234 108.57084 c
189.77234 108.57084 190.90028 108.8506 191.16347 109.11378 c
191.42665 109.37697 191.77234 110.57084 191.77234 110.57084 c
191.77234 110.57084 193.90135 105.91442 193.90135 105.91442 c
193.90135 105.91442 193.90135 105.91442 193.90135 105.91442 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
2518.8315 3358.1572 m
2430.1436 3631.1106 l
S
2460.4832 3370.5596 m
2390.2288 3586.7805 l
S
2430.1436 3631.1106 m
2149.4153 3690.7812 l
S
2149.4153 3690.7812 m
1957.3748 3477.4985 l
S
2167.8486 3634.0488 m
2015.723 3465.0964 l
S
1957.3748 3477.4985 m
2046.0626 3204.5454 l
S
2046.0626 3204.5454 m
2326.791 3144.8748 l
S
2085.9775 3248.8755 m
2308.3574 3201.6069 l
S
2326.791 3144.8748 m
2518.8315 3358.1572 l
S
1957.3748 3477.4985 m
1670.3748 3477.4985 l
S
1670.3748 3477.4985 m
1581.6868 3204.5454 l
S
1581.6868 3204.5454 m
1813.8748 3035.8511 l
S
1813.8748 3035.8511 m
2046.0626 3204.5454 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 64.804573 157.74153 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1788.0447 3054.6177 m
1788.0447 2867.2007 l
S
1839.7047 3054.6177 m
1839.7047 2867.2007 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 62.063969 107.66149 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1670.3748 3477.4985 m
1724.6479 3644.5344 l
S
1581.6868 3204.5454 m
1294.6868 3204.5454 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 30.688784 146.46855 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1294.6868 3204.5454 m
1239.6174 3128.7488 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 34.689106 121.21149 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1241.0854 3369.5134 m
1294.6868 3204.5454 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 32.274055 158.0365 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1581.6868 3204.5454 m
1553.1969 2880.3635 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 46.2985 112.77678 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1292.5332 3540.3694 m
1327.7784 3565.9766 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 46.574379 98.43898 cm
0 7.1972656 m
(&&')[ 6.669922 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
18.901367 9.4970703 m
(\()s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1438.1868 3746.4958 m
1438.1868 3809.1892 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 1.8703039 116.87476 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
1091.7175 3514.6309 m
1035.3098 3532.959 l
S
1526.365 3582.1279 m
1670.3748 3477.4985 l
S
1981.9814 3838.0613 m
1981.9814 3873.8564 1952.9639 3902.8738 1917.1689 3902.8738 c
1881.374 3902.8738 1852.3564 3873.8564 1852.3564 3838.0613 c
1852.3564 3802.2664 1881.374 3773.2488 1917.1689 3773.2488 c
1952.9639 3773.2488 1981.9814 3802.2664 1981.9814 3838.0613 c
h
S
0 J
1880.8773 3833.2488 m
1943.8356 3833.2488 l
S
1 J
1384.3827 4157.6548 m
1391.1199 4407.4771 1599.3673 4604.7871 1849.1895 4598.0503 c
2099.0117 4591.313 2296.322 4383.0654 2289.585 4133.2432 c
2283.9404 3923.9392 2117.8984 3733.2307 1911.3628 3698.8345 c
S
CM
47.518463 87.446495 m
47.518463 87.446495 48.415794 81.498802 48.415794 81.498802 c
48.415794 81.498802 47.555294 82.846046 47.219135 83.117264 c
46.882973 83.388489 45.936951 83.498802 45.936951 83.498802 c
45.936951 83.498802 47.518463 87.446495 47.518463 87.446495 c
47.518463 87.446495 47.518463 87.446495 47.518463 87.446495 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
1312.3533 3935.9502 m
1312.3533 3971.7451 1283.3357 4000.7627 1247.5408 4000.7627 c
1211.7458 4000.7627 1182.7283 3971.7451 1182.7283 3935.9502 c
1182.7283 3900.1553 1211.7458 3871.1377 1247.5408 3871.1377 c
1283.3357 3871.1377 1312.3533 3900.1553 1312.3533 3935.9502 c
h
S
0 J
1211.2491 3931.1377 m
1274.2074 3931.1377 l
S
1242.7283 3899.6584 m
1242.7283 3962.6167 l
S
1 J
6783.9414 4958.0337 m
6695.2534 5230.9868 l
S
6725.5933 4970.436 m
6655.3389 5186.6572 l
S
6695.2534 5230.9868 m
6414.5249 5290.6577 l
S
6414.5249 5290.6577 m
6222.4849 5077.375 l
S
6432.9585 5233.9253 m
6280.833 5064.9731 l
S
6222.4849 5077.375 m
6311.1724 4804.4219 l
S
6311.1724 4804.4219 m
6591.9009 4744.7515 l
S
6351.0874 4848.752 m
6573.4673 4801.4834 l
S
6591.9009 4744.7515 m
6783.9414 4958.0337 l
S
6222.4849 5077.375 m
5935.4844 5077.375 l
S
5935.4844 5077.375 m
5846.7969 4804.4219 l
S
5846.7969 4804.4219 m
6078.9849 4635.7275 l
S
6078.9849 4635.7275 m
6311.1724 4804.4219 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 278.06006 77.747711 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
6053.1548 4654.4941 m
6053.1548 4467.0771 l
S
6104.8145 4654.4941 m
6104.8145 4467.0771 l
S
5846.7969 4804.4219 m
5559.7969 4804.4219 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 243.94429 66.474716 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5559.7969 4804.4219 m
5488.3071 4706.0249 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 247.94461 41.217663 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5506.1953 4969.3901 m
5559.7969 4804.4219 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 246.59711 78.042664 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5846.7969 4804.4219 m
5833.332 4480.9663 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 259.55399 32.78294 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5557.6431 5140.2461 m
5592.8882 5165.853 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 215.12581 36.880932 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5356.8276 5114.5073 m
5276.4517 5140.623 l
S
5791.4751 5182.0044 m
5935.4844 5077.375 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 268.26459 21.17355 cm
0 7.1728516 m
(&)s
0 15.565593 m
(&')[ 6.669922 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
12.231445 17.865396 m
(\()s
1 0 0 -1 279.31979 29.705929 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
5769.4316 5337.1372 m
5792.1582 5368.4087 l
S
5965.2271 5410.5176 m
6010.4434 5377.666 l
S
6039.959 5221.1719 m
5935.4844 5077.375 l
S
10050.787 5053.4683 m
9962.0996 5326.4219 l
S
9992.4395 5065.8706 m
9922.1846 5282.0918 l
S
9962.0996 5326.4219 m
9681.3711 5386.0923 l
S
9681.3711 5386.0923 m
9489.3311 5172.8101 l
S
9699.8047 5329.3604 m
9547.6787 5160.4077 l
S
9489.3311 5172.8101 m
9578.0186 4899.8569 l
S
9578.0186 4899.8569 m
9858.7471 4840.186 l
S
9617.9336 4944.1865 m
9840.3135 4896.9185 l
S
9858.7471 4840.186 m
10050.787 5053.4683 l
S
9489.3311 5172.8101 m
9202.3311 5172.8101 l
S
9202.3311 5172.8101 m
9113.6426 4899.8569 l
S
9113.6426 4899.8569 m
9345.8311 4731.1621 l
S
9345.8311 4731.1621 m
9578.0186 4899.8569 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 441.40237 72.975975 cm
0 7.3681641 m
(#)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
9320.001 4749.9287 m
9320.001 4562.5117 l
S
9371.6611 4749.9287 m
9371.6611 4562.5117 l
S
9113.6426 4899.8569 m
8826.6426 4899.8569 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 407.28659 61.70298 cm
0 7.1728516 m
(")s
/F1.1[ 7.5 0 0 -7.5 0 0]sf
7.2216797 9.4726562 m
(\))s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8826.6426 4899.8569 m
8771.5732 4824.0601 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 411.28693 36.44593 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8773.042 5064.8247 m
8826.6426 4899.8569 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 409.93942 73.804703 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
9113.6426 4899.8569 m
9100.0488 4565.7349 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 422.8963 28.011208 cm
0 7.1728516 m
(!)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8824.4893 5235.6807 m
8859.7344 5261.2881 l
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 378.46811 32.1092 cm
0 7.3681641 m
("#)[ 7.221680 0.000000 ] xS
/F1.1[ 7.5 0 0 -7.5 0 0]sf
15 9.6679688 m
($)s
/F1.1[ 10 0 0 -10 0 0]sf
19.171143 7.3681641 m
(%)s
/Cs1 SC
0 sc
0.050000001 0 0 -0.050000001 -22 291 cm
8623.6738 5209.9419 m
8561.3877 5230.1797 l
S
9058.3213 5277.439 m
9202.3311 5172.8101 l
S
9027.9561 5235.6455 m
9141.6006 5153.0776 l
S
5936.8896 5336.7144 m
5901.7944 5308.8818 5847.5137 5310.3862 5814.0137 5340.1196 c
S
CM
276.55701 21.379263 m
276.55701 21.379263 273.59982 23.562145 273.59982 23.562145 c
273.59982 23.562145 274.64014 23.959946 274.84448 24.164286 c
275.04883 24.368624 275.59982 25.562145 275.59982 25.562145 c
275.59982 25.562145 276.55701 21.379263 276.55701 21.379263 c
276.55701 21.379263 276.55701 21.379263 276.55701 21.379263 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
5892.9941 5198.2129 m
5919.3291 5220.3535 5961.0386 5220.3906 5987.4131 5198.2964 c
S
CM
271.396 33.265312 m
271.396 33.265312 273.8288 31.778507 273.8288 31.778507 c
273.8288 31.778507 272.80667 31.246315 272.64969 31.089359 c
272.49274 30.932404 271.8288 29.778507 271.8288 29.778507 c
271.8288 29.778507 271.396 33.265312 271.396 33.265312 c
271.396 33.265312 271.396 33.265312 271.396 33.265312 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
7832.5781 4950.1626 m
7137.0498 4950.1626 l
S
CM
381.47217 43.491859 m
381.47217 43.491859 367.93701 40.105572 367.93701 40.105572 c
367.93701 40.105572 369.62891 42.010361 369.62891 43.491859 c
369.62891 45.410862 367.93701 47.878151 367.93701 47.878151 c
367.93701 47.878151 381.47217 43.491859 381.47217 43.491859 c
381.47217 43.491859 381.47217 43.491859 381.47217 43.491859 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
3064.9041 3305.7593 m
3370.5225 3305.7593 l
S
CM
120.40195 125.71203 m
120.40195 125.71203 133.9371 130.09831 133.9371 130.09831 c
133.9371 130.09831 132.24521 127.63103 132.24521 125.71203 c
132.24521 124.23053 133.9371 122.32574 133.9371 122.32574 c
133.9371 122.32574 120.40195 125.71203 120.40195 125.71203 c
120.40195 125.71203 120.40195 125.71203 120.40195 125.71203 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
5828.1797 3237.949 m
6116.8457 3237.949 l
S
CM
258.56573 129.10255 m
258.56573 129.10255 272.10089 133.48885 272.10089 133.48885 c
272.10089 133.48885 270.409 131.02156 270.409 129.10255 c
270.409 127.62105 272.10089 125.71626 272.10089 125.71626 c
272.10089 125.71626 258.56573 129.10255 258.56573 129.10255 c
258.56573 129.10255 258.56573 129.10255 258.56573 129.10255 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
8777.9346 3288.8069 m
9897.2783 3288.8069 l
S
CM
406.05347 126.55966 m
406.05347 126.55966 419.58862 130.94595 419.58862 130.94595 c
419.58862 130.94595 417.89673 128.47867 417.89673 126.55966 c
417.89673 125.07816 419.58862 123.17337 419.58862 123.17337 c
419.58862 123.17337 406.05347 126.55966 406.05347 126.55966 c
406.05347 126.55966 406.05347 126.55966 406.05347 126.55966 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
9917.2783 3268.8069 m
9917.2783 2300.5374 l
S
4425.103 5001.0205 m
1220.5881 5001.0205 l
S
CM
211.09842 40.948967 m
211.09842 40.948967 197.56326 37.562679 197.56326 37.562679 c
197.56326 37.562679 199.25516 39.467468 199.25516 40.948967 c
199.25516 42.86797 197.56326 45.335258 197.56326 45.335258 c
197.56326 45.335258 211.09842 40.948967 211.09842 40.948967 c
211.09842 40.948967 211.09842 40.948967 211.09842 40.948967 c
h
f
0.050000001 0 0 -0.050000001 -22 291 cm
1220.5881 4981.0205 m
1220.5881 4201.6372 l
S
ep
end
%%Trailer
%%EOF
